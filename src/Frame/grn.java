/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHETHANA
 */
public class grn extends javax.swing.JFrame {

    UniversalMethod u = new UniversalMethod();
    public static int idsearch;
    public static grnlist gl ; 
    public static stock st;
    /**
     * Creates new form grn
     */
    public grn() {
        initComponents();
         systemLogger.initLogger(grn.class).info(" Open Grn (Grn Item) Frame ");
        u.imageMethod(background, home_la_uesr_image, doctor_la_login_use_name, agent_la_home_img, login_la_mini, login_la_cloce, grn_la_enter);
        u.imageMethod("/img/category.png",grn_la_print);
        u.imageMethod("/img/grnlist1.png", grn_la_listofgrnFrame_open);
        cleareFields();
         u.imageMethod("/img/newB.png", grn_la_new);
          UniversalMethod.TimeMethod(agent_la_date,agent_la_time);
        doctor_la_login_use_name.setText(UniversalMethod.getLogUser());
        agent_la_home_img.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator4 = new javax.swing.JSeparator();
        agent_la_date = new javax.swing.JLabel();
        agent_la_time = new javax.swing.JLabel();
        login_la_cloce = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_grn = new javax.swing.JTable();
        grn_tx_grn_number = new javax.swing.JTextField();
        doctor_la_login_use_name = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        grn_la_enter = new javax.swing.JLabel();
        grn_tx_item_barcode = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        login_la_mini = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        home_la_uesr_image = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        grn_la_listofgrnFrame_open = new javax.swing.JLabel();
        agent_la_home_img = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        grn_tx_barcode = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        grn_tx_qty = new javax.swing.JTextField();
        jComboBox_Supplier_name = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jComboBox_catogery = new javax.swing.JComboBox();
        jComboBox_subcatogery = new javax.swing.JComboBox();
        grn_la_new = new javax.swing.JLabel();
        grn_la_print = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        grn_la_barcode = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        grn_tx_buy_price = new javax.swing.JTextField();
        grn_tx_sell_price = new javax.swing.JTextField();
        grn_tx_item_name = new javax.swing.JTextField();
        jComboBox_up_down_price = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jDateChooser_MF = new com.toedter.calendar.JDateChooser();
        jDateChooser_EX = new com.toedter.calendar.JDateChooser();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1380, 768));
        setMinimumSize(new java.awt.Dimension(1380, 768));
        setUndecorated(true);
        getContentPane().setLayout(null);

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(280, 5, 20, 30);

        agent_la_date.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_date.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_date.setText("Invoice");
        agent_la_date.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_date);
        agent_la_date.setBounds(10, 5, 130, 35);

        agent_la_time.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_time.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_time.setText("Invoice");
        agent_la_time.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_time);
        agent_la_time.setBounds(150, 5, 130, 35);

        login_la_cloce.setBackground(new java.awt.Color(255, 255, 255));
        login_la_cloce.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_cloce.setForeground(new java.awt.Color(0, 0, 0));
        login_la_cloce.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_cloce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseExited(evt);
            }
        });
        getContentPane().add(login_la_cloce);
        login_la_cloce.setBounds(1330, 10, 30, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(":");
        jLabel5.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel5);
        jLabel5.setBounds(160, 130, 30, 30);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText(":");
        jLabel9.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel9);
        jLabel9.setBounds(160, 80, 30, 30);

        jTable_grn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Grn ID", "Supplier", "Item Name", "Barcode", "SubCategory", "QTY", "Buy Price", "Cost", "UPDown Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, true, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_grn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_grnMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_grn);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(50, 410, 1280, 340);

        grn_tx_grn_number.setBackground(new java.awt.Color(255, 255, 255));
        grn_tx_grn_number.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        grn_tx_grn_number.setForeground(new java.awt.Color(0, 0, 0));
        grn_tx_grn_number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                grn_tx_grn_numberKeyPressed(evt);
            }
        });
        getContentPane().add(grn_tx_grn_number);
        grn_tx_grn_number.setBounds(190, 80, 270, 33);

        doctor_la_login_use_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        doctor_la_login_use_name.setForeground(new java.awt.Color(255, 255, 255));
        doctor_la_login_use_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        doctor_la_login_use_name.setText("Invoice");
        getContentPane().add(doctor_la_login_use_name);
        doctor_la_login_use_name.setBounds(330, 5, 260, 35);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Supplier Name");
        jLabel4.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 130, 130, 30);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 43, 1370, 2);

        grn_la_enter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        grn_la_enter.setForeground(new java.awt.Color(0, 0, 0));
        grn_la_enter.setText("Enter");
        grn_la_enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grn_la_enterMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                grn_la_enterMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                grn_la_enterMouseExited(evt);
            }
        });
        getContentPane().add(grn_la_enter);
        grn_la_enter.setBounds(400, 330, 120, 40);

        grn_tx_item_barcode.setBackground(new java.awt.Color(255, 255, 255));
        grn_tx_item_barcode.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        grn_tx_item_barcode.setForeground(new java.awt.Color(0, 0, 0));
        grn_tx_item_barcode.setText("jTextField1");
        grn_tx_item_barcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                grn_tx_item_barcodeKeyPressed(evt);
            }
        });
        getContentPane().add(grn_tx_item_barcode);
        grn_tx_item_barcode.setBounds(190, 180, 270, 33);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("GRN Number");
        jLabel8.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel8);
        jLabel8.setBounds(30, 80, 120, 30);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText(":");
        jLabel7.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel7);
        jLabel7.setBounds(640, 130, 30, 30);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(140, 5, 20, 30);

        login_la_mini.setBackground(new java.awt.Color(255, 255, 255));
        login_la_mini.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_mini.setForeground(new java.awt.Color(0, 0, 0));
        login_la_mini.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_miniMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_miniMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_miniMouseExited(evt);
            }
        });
        getContentPane().add(login_la_mini);
        login_la_mini.setBounds(1295, 10, 30, 30);

        jLabel1.setBackground(new java.awt.Color(51, 204, 255));
        jLabel1.setFont(new java.awt.Font("Eras Bold ITC", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GRN ITEM");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(760, 1, 330, 40);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("SubCategory");
        jLabel6.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel6);
        jLabel6.setBounds(520, 130, 120, 30);

        home_la_uesr_image.setText("userlogo");
        getContentPane().add(home_la_uesr_image);
        home_la_uesr_image.setBounds(290, 10, 30, 30);

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator5);
        jSeparator5.setBounds(0, 320, 1370, 10);

        grn_la_listofgrnFrame_open.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        grn_la_listofgrnFrame_open.setForeground(new java.awt.Color(0, 0, 0));
        grn_la_listofgrnFrame_open.setText("listofgrn");
        grn_la_listofgrnFrame_open.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grn_la_listofgrnFrame_openMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                grn_la_listofgrnFrame_openMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                grn_la_listofgrnFrame_openMouseExited(evt);
            }
        });
        getContentPane().add(grn_la_listofgrnFrame_open);
        grn_la_listofgrnFrame_open.setBounds(1160, 330, 120, 40);

        agent_la_home_img.setText("jLabel1");
        agent_la_home_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseExited(evt);
            }
        });
        getContentPane().add(agent_la_home_img);
        agent_la_home_img.setBounds(600, 5, 80, 30);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(580, 5, 20, 30);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText(":");
        jLabel11.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel11);
        jLabel11.setBounds(160, 180, 30, 30);

        grn_tx_barcode.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        grn_tx_barcode.setForeground(new java.awt.Color(255, 255, 255));
        grn_tx_barcode.setText("Item Barcode");
        grn_tx_barcode.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(grn_tx_barcode);
        grn_tx_barcode.setBounds(30, 180, 120, 30);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText(":");
        jLabel12.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel12);
        jLabel12.setBounds(640, 180, 30, 30);

        jLabel13.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("QTY");
        jLabel13.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel13);
        jLabel13.setBounds(520, 180, 120, 30);

        grn_tx_qty.setBackground(new java.awt.Color(255, 255, 255));
        grn_tx_qty.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        grn_tx_qty.setForeground(new java.awt.Color(0, 0, 0));
        grn_tx_qty.setText("jTextField1");
        grn_tx_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                grn_tx_qtyKeyPressed(evt);
            }
        });
        getContentPane().add(grn_tx_qty);
        grn_tx_qty.setBounds(660, 180, 180, 33);

        jComboBox_Supplier_name.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_Supplier_name.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_Supplier_name.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_Supplier_name.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A" }));
        jComboBox_Supplier_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_Supplier_nameKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_Supplier_name);
        jComboBox_Supplier_name.setBounds(190, 130, 290, 33);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Category");
        jLabel16.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel16);
        jLabel16.setBounds(520, 80, 120, 30);

        jLabel17.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText(":");
        jLabel17.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel17);
        jLabel17.setBounds(640, 80, 30, 30);

        jComboBox_catogery.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_catogery.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_catogery.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_catogery.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A" }));
        jComboBox_catogery.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_catogeryKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_catogery);
        jComboBox_catogery.setBounds(660, 80, 180, 33);

        jComboBox_subcatogery.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_subcatogery.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_subcatogery.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_subcatogery.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A" }));
        jComboBox_subcatogery.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_subcatogeryKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_subcatogery);
        jComboBox_subcatogery.setBounds(660, 130, 180, 33);

        grn_la_new.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        grn_la_new.setForeground(new java.awt.Color(0, 0, 0));
        grn_la_new.setText("New");
        grn_la_new.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grn_la_newMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                grn_la_newMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                grn_la_newMouseExited(evt);
            }
        });
        getContentPane().add(grn_la_new);
        grn_la_new.setBounds(570, 330, 120, 40);

        grn_la_print.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        grn_la_print.setForeground(new java.awt.Color(0, 0, 0));
        grn_la_print.setText("Print");
        grn_la_print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grn_la_printMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                grn_la_printMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                grn_la_printMouseExited(evt);
            }
        });
        getContentPane().add(grn_la_print);
        grn_la_print.setBounds(900, 330, 130, 60);

        jLabel18.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("MF Date");
        jLabel18.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel18);
        jLabel18.setBounds(880, 130, 120, 30);

        jLabel19.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText(":");
        jLabel19.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel19);
        jLabel19.setBounds(1000, 130, 30, 30);

        jLabel20.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("EX Date");
        jLabel20.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel20);
        jLabel20.setBounds(880, 180, 120, 30);

        jLabel21.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText(":");
        jLabel21.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel21);
        jLabel21.setBounds(1000, 180, 30, 30);

        jLabel14.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText(":");
        jLabel14.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel14);
        jLabel14.setBounds(160, 230, 30, 30);

        grn_la_barcode.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        grn_la_barcode.setForeground(new java.awt.Color(255, 255, 255));
        grn_la_barcode.setText("Item Name");
        grn_la_barcode.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(grn_la_barcode);
        grn_la_barcode.setBounds(30, 230, 120, 30);

        jLabel22.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Buy Price");
        jLabel22.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel22);
        jLabel22.setBounds(520, 230, 120, 30);

        jLabel23.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Sell Price");
        jLabel23.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel23);
        jLabel23.setBounds(880, 80, 120, 30);

        jLabel24.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText(":");
        jLabel24.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel24);
        jLabel24.setBounds(1000, 80, 30, 30);

        jLabel25.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText(":");
        jLabel25.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel25);
        jLabel25.setBounds(640, 230, 30, 30);

        grn_tx_buy_price.setBackground(new java.awt.Color(255, 255, 255));
        grn_tx_buy_price.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        grn_tx_buy_price.setForeground(new java.awt.Color(0, 0, 0));
        grn_tx_buy_price.setText("jTextField1");
        grn_tx_buy_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                grn_tx_buy_priceKeyPressed(evt);
            }
        });
        getContentPane().add(grn_tx_buy_price);
        grn_tx_buy_price.setBounds(660, 230, 180, 33);

        grn_tx_sell_price.setBackground(new java.awt.Color(255, 255, 255));
        grn_tx_sell_price.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        grn_tx_sell_price.setForeground(new java.awt.Color(0, 0, 0));
        grn_tx_sell_price.setText("jTextField1");
        grn_tx_sell_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                grn_tx_sell_priceKeyPressed(evt);
            }
        });
        getContentPane().add(grn_tx_sell_price);
        grn_tx_sell_price.setBounds(1030, 80, 220, 33);

        grn_tx_item_name.setBackground(new java.awt.Color(255, 255, 255));
        grn_tx_item_name.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        grn_tx_item_name.setForeground(new java.awt.Color(0, 0, 0));
        grn_tx_item_name.setText("jTextField1");
        grn_tx_item_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                grn_tx_item_nameKeyPressed(evt);
            }
        });
        getContentPane().add(grn_tx_item_name);
        grn_tx_item_name.setBounds(190, 230, 270, 33);

        jComboBox_up_down_price.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_up_down_price.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_up_down_price.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_up_down_price.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No", "Yes" }));
        jComboBox_up_down_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_up_down_priceKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_up_down_price);
        jComboBox_up_down_price.setBounds(1030, 230, 220, 33);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText(":");
        jLabel10.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel10);
        jLabel10.setBounds(1000, 230, 30, 30);

        jLabel15.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("       Price");
        jLabel15.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel15);
        jLabel15.setBounds(880, 260, 120, 30);

        jLabel26.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Up / Down ");
        jLabel26.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel26);
        jLabel26.setBounds(880, 230, 120, 30);

        jDateChooser_MF.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser_MF.setForeground(new java.awt.Color(0, 0, 0));
        jDateChooser_MF.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jDateChooser_MF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jDateChooser_MFKeyPressed(evt);
            }
        });
        getContentPane().add(jDateChooser_MF);
        jDateChooser_MF.setBounds(1030, 130, 220, 29);

        jDateChooser_EX.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser_EX.setForeground(new java.awt.Color(0, 0, 0));
        jDateChooser_EX.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jDateChooser_EX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jDateChooser_EXKeyPressed(evt);
            }
        });
        getContentPane().add(jDateChooser_EX);
        jDateChooser_EX.setBounds(1030, 180, 220, 29);

        background.setBackground(new java.awt.Color(234, 232, 232));
        background.setForeground(new java.awt.Color(255, 255, 255));
        background.setText("jLabel1");
        getContentPane().add(background);
        background.setBounds(0, 0, 1380, 770);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void login_la_cloceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseClicked
        SystemClose();
    }//GEN-LAST:event_login_la_cloceMouseClicked

    private void login_la_cloceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseEntered
        //    login_la_cloce.setBackground(Color.red);
        u.imageMethod("/img/exti.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseEntered

    private void login_la_cloceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseExited
        //    login_la_cloce.setBackground(Color.white);
        u.imageMethod("/img/exti2.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseExited

    private void grn_la_enterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_la_enterMouseEntered
        u.imageMethod("/img/enter2.png", grn_la_enter);
    }//GEN-LAST:event_grn_la_enterMouseEntered

    private void grn_la_enterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_la_enterMouseExited
        u.imageMethod("/img/enter.png", grn_la_enter);
    }//GEN-LAST:event_grn_la_enterMouseExited

    private void login_la_miniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_login_la_miniMouseClicked

    private void login_la_miniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseEntered
        //    login_la_mini.setBackground(Color.gray);
        u.imageMethod("/img/mini2.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseEntered

    private void login_la_miniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseExited
        //    login_la_mini.setBackground(Color.white);
        u.imageMethod("/img/mini.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseExited

    private void grn_la_listofgrnFrame_openMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_la_listofgrnFrame_openMouseClicked
        u.imageMethod("/img/user_2_2.png", grn_la_listofgrnFrame_open);
        grnlist.getCallPopup(st).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_grn_la_listofgrnFrame_openMouseClicked

    private void grn_la_listofgrnFrame_openMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_la_listofgrnFrame_openMouseEntered
        //  u.imageMethod("/img/userFrame2.png", agent_la_userFrame_open );
        u.imageMethod("/img/grnlist2.png", grn_la_listofgrnFrame_open);

    }//GEN-LAST:event_grn_la_listofgrnFrame_openMouseEntered

    private void grn_la_listofgrnFrame_openMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_la_listofgrnFrame_openMouseExited
        // u.imageMethod("/img/userFrame.png", agent_la_userFrame_open );
        u.imageMethod("/img/grnlist1.png", grn_la_listofgrnFrame_open);
    }//GEN-LAST:event_grn_la_listofgrnFrame_openMouseExited

    private void agent_la_home_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you sure Go to The Home ?", "Change Interface", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            home.getCallPopup().setVisible(true);
            this.dispose();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        }
    }//GEN-LAST:event_agent_la_home_imgMouseClicked

    private void agent_la_home_imgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseEntered
        u.imageMethod("/img/home_2_2.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseEntered

    private void agent_la_home_imgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseExited
        u.imageMethod("/img/home_.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseExited

    private void grn_la_newMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_la_newMouseClicked
        u.imageMethod("/img/newB2.png", grn_la_new);
        grn_la_enter.setVisible(true);
        grn_la_new.setVisible(true);
        cleareFields();
    }//GEN-LAST:event_grn_la_newMouseClicked

    private void grn_la_newMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_la_newMouseEntered
        u.imageMethod("/img/newB2.png", grn_la_new);
    }//GEN-LAST:event_grn_la_newMouseEntered

    private void grn_la_newMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_la_newMouseExited
        u.imageMethod("/img/newB.png", grn_la_new);
    }//GEN-LAST:event_grn_la_newMouseExited

    private void grn_la_printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_la_printMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_grn_la_printMouseClicked

    private void grn_la_printMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_la_printMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_grn_la_printMouseEntered

    private void grn_la_printMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_la_printMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_grn_la_printMouseExited

    private void grn_tx_grn_numberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_tx_grn_numberKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, grn_tx_grn_number, jComboBox_Supplier_name);
         //  selectAllGRNItem();
        } else {
            txValidateKeyEvent(evt, grn_tx_grn_number, "N", 10);
        }
    }//GEN-LAST:event_grn_tx_grn_numberKeyPressed

    private void jComboBox_Supplier_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_Supplier_nameKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, jComboBox_Supplier_name, grn_tx_item_barcode);
        }
    }//GEN-LAST:event_jComboBox_Supplier_nameKeyPressed

    private void jComboBox_catogeryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_catogeryKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, jComboBox_catogery, jComboBox_subcatogery);
            try {
                DBClass.putData("select iditemcatogery from itemcatogery where name='" + jComboBox_catogery.getSelectedItem().toString() + "' order by iditemcatogery");
                SearchAndListJcomboboxItemSubCatogery(DBClass.r.getInt("iditemcatogery"));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error Search Item Catogery ID !!! \n jComboBox_main_catogeryKeyPressed \n" + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
            grn_tx_grn_number.grabFocus();
            }
        }
    }//GEN-LAST:event_jComboBox_catogeryKeyPressed

    private void jComboBox_subcatogeryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_subcatogeryKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, jComboBox_subcatogery, grn_tx_qty);
        }
    }//GEN-LAST:event_jComboBox_subcatogeryKeyPressed

    private void grn_tx_item_barcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_tx_item_barcodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, grn_tx_item_barcode, grn_tx_qty);
            searchItem_Barcode_Name_Short(grn_tx_item_barcode.getText(),"Barcode");
        } else {
            txValidateKeyEvent(evt, grn_tx_item_barcode, "NA", 45);
            
        }
    }//GEN-LAST:event_grn_tx_item_barcodeKeyPressed

    private void grn_tx_qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_tx_qtyKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, grn_tx_qty, grn_tx_buy_price);
        } else {
            txValidateKeyEvent(evt, grn_tx_qty, "N", 10);
        }
    }//GEN-LAST:event_grn_tx_qtyKeyPressed

    private void grn_la_enterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_la_enterMouseClicked
 u.imageMethod("/img/enter2.png", grn_la_enter );
        int x = JOptionPane.showConfirmDialog(this, "Do you sure add this item ?", "Conform The ADD Item ???", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            emterMouseClickMethod();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            grn_tx_item_barcode.grabFocus();
        }
    }//GEN-LAST:event_grn_la_enterMouseClicked

    private void grn_tx_item_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_tx_item_nameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, grn_tx_item_name, grn_tx_qty);
            searchItem_Barcode_Name_Short(grn_tx_item_name.getText(),"Itemname");
        } else {
            txValidateKeyEvent(evt, grn_tx_item_name, "NA", 45);
            
        }
    }//GEN-LAST:event_grn_tx_item_nameKeyPressed

    private void grn_tx_buy_priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_tx_buy_priceKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, grn_tx_buy_price, grn_tx_sell_price);
        } else {
            txValidateKeyEvent(evt, grn_tx_buy_price, "DATE", 10);
        }
    }//GEN-LAST:event_grn_tx_buy_priceKeyPressed

    private void grn_tx_sell_priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_tx_sell_priceKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
          //  u.grabFocusMethod(evt, grn_tx_sell_price, jDateChooser_MF);
            grn_tx_sell_price.grabFocus();
        } else {
            txValidateKeyEvent(evt, grn_tx_sell_price, "DATE", 10);
        }
    }//GEN-LAST:event_grn_tx_sell_priceKeyPressed

    private void jComboBox_up_down_priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_up_down_priceKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, jComboBox_up_down_price, grn_la_enter);
        }
    }//GEN-LAST:event_jComboBox_up_down_priceKeyPressed

    private void jDateChooser_MFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateChooser_MFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, jDateChooser_MF, jDateChooser_EX);
        }
    }//GEN-LAST:event_jDateChooser_MFKeyPressed

    private void jDateChooser_EXKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateChooser_EXKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, jDateChooser_EX, jComboBox_up_down_price);
        }
    }//GEN-LAST:event_jDateChooser_EXKeyPressed

    private void jTable_grnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_grnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable_grnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //grn_tx_barcodeor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(grn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new grn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel agent_la_date;
    private javax.swing.JLabel agent_la_home_img;
    private javax.swing.JLabel agent_la_time;
    private javax.swing.JLabel background;
    private javax.swing.JLabel doctor_la_login_use_name;
    private javax.swing.JLabel grn_la_barcode;
    private javax.swing.JLabel grn_la_enter;
    private javax.swing.JLabel grn_la_listofgrnFrame_open;
    private javax.swing.JLabel grn_la_new;
    private javax.swing.JLabel grn_la_print;
    private javax.swing.JLabel grn_tx_barcode;
    private javax.swing.JTextField grn_tx_buy_price;
    private javax.swing.JTextField grn_tx_grn_number;
    private javax.swing.JTextField grn_tx_item_barcode;
    private javax.swing.JTextField grn_tx_item_name;
    private javax.swing.JTextField grn_tx_qty;
    private javax.swing.JTextField grn_tx_sell_price;
    private javax.swing.JLabel home_la_uesr_image;
    private javax.swing.JComboBox jComboBox_Supplier_name;
    private javax.swing.JComboBox jComboBox_catogery;
    private javax.swing.JComboBox jComboBox_subcatogery;
    private javax.swing.JComboBox jComboBox_up_down_price;
    private com.toedter.calendar.JDateChooser jDateChooser_EX;
    private com.toedter.calendar.JDateChooser jDateChooser_MF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jTable_grn;
    private javax.swing.JLabel login_la_cloce;
    private javax.swing.JLabel login_la_mini;
    // End of variables declaration//GEN-END:variables

    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> SystemClose()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> System cloce <<<<<<<<<<<   
    void SystemClose() {
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close the System ?", "Exit System", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            // setDefaultCloseOperation(EXIT_ON_CLOSE);
            gl.setVisible(true);
            this.dispose();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            login_la_cloce.setBackground(new Color(153, 204, 255));
        }
    }
    //>>>>>>>>> System cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> Singltan class 
     * *** >>> Why ------------->>> ek object ekk hdnn
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> Get Instance <<<<<<<<<<<  
    private static final grn gr = new grn();

    public static grn getCallPopup(grnlist g,stock s) {
        gl = g;
        st = s;
        return gr;
    }
//>>>>>>>>> Get Instance <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> cleareFields <<<<<<<<<<<      
    private void cleareFields() {
         grn_tx_grn_number.grabFocus();
        grn_tx_item_barcode.setText(null);
        grn_tx_item_name.setText(null);
        grn_tx_qty.setText(null);
        grn_tx_buy_price.setText(null);
        grn_tx_sell_price.setText(null);
jDateChooser_MF.setDate(null);
jDateChooser_EX.setDate(null);
        jComboBox_Supplier_name.setSelectedIndex(0);
        jComboBox_subcatogery.removeAllItems();
        jComboBox_catogery.setSelectedIndex(0);
        jComboBox_up_down_price.setSelectedIndex(0);
        idsearch = 0;
        grn_la_enter.setVisible(true);
        grn_la_new.setVisible(true);
        grn_la_print.setVisible(false);
        SearchAndListJcomboboxItemCatogery();
        SearchAndListJcomboboxSupplier();
        grn_tx_grn_number.grabFocus();
    }
//>>>>>>>>> cleareFields <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> emterMouseClickMethod <<<<<<<<<<< 
    private void emterMouseClickMethod() {
        if (grn_tx_grn_number.getText().trim().isEmpty()) {
            grn_tx_grn_number.grabFocus();
        } else if (grn_tx_item_barcode.getText().trim().isEmpty()) {
            grn_tx_item_barcode.grabFocus();
        }else  if (grn_tx_item_name.getText().trim().isEmpty()) {
            grn_tx_item_name.grabFocus();
        } else if (grn_tx_qty.getText().trim().isEmpty()) {
            grn_tx_qty.grabFocus();
        }else if (grn_tx_buy_price.getText().trim().isEmpty()) {
            grn_tx_buy_price.grabFocus();
        } else if (grn_tx_sell_price.getText().trim().isEmpty()) {
            grn_tx_sell_price.grabFocus();
        } else if (!(grn_tx_grn_number.getText().trim().isEmpty() & grn_tx_item_barcode.getText().trim().isEmpty()
                & grn_tx_item_name.getText().trim().isEmpty() & grn_tx_qty.getText().trim().isEmpty()
                & grn_tx_buy_price.getText().trim().isEmpty() & grn_tx_sell_price.getText().trim().isEmpty()
                & jDateChooser_MF.getDate().toString().isEmpty() & jDateChooser_EX.getDate().toString().isEmpty())) {
            if(addJTable()==true){
                cleareFields();
                selectAllGRNItem();
            }else{
                grn_tx_sell_price.grabFocus();
            }
        }
    }
    //>>>>>>>>> emterMouseClickMethod <<<<<<<<<<<         
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     

    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> addJTable <<<<<<<<<<<      
    private boolean addJTable() {
        boolean b= true;
        try {
            int bb = jComboBox_up_down_price.getSelectedIndex();
            if (bb == 0) { //No
                bb = 0;
            } else { //Yes
                bb = 1;
            }
            int idItem =0;
            int idsupplier =0;
            DBClass.getData("select iditem from item where barcode='" + grn_tx_item_barcode.getText() + "' order by iditem");
           if(DBClass.r.next()) idItem = DBClass.r.getInt("iditem");
            DBClass.getData("select idsupplier from supplier where comname='" + jComboBox_Supplier_name.getSelectedItem() + "' order by idsupplier");
           if(DBClass.r.next()) idsupplier = DBClass.r.getInt("idsupplier");
           try{ 
           DBClass.putData("insert into grnitem(idgrn,idsupplier,iditem,barcode,name,qty,buyprice,cost,updownprice) values("
                    + "'" + grn_tx_grn_number.getText() + "'  , '" + idsupplier+"', '" + idItem 
                    + "','" + grn_tx_item_barcode.getText() + "'  ,'" + grn_tx_item_name.getText()
                    + "','" + Double.parseDouble(grn_tx_qty.getText()) + "','" + Double.parseDouble(grn_tx_buy_price.getText())
                    + "','" + (Double.parseDouble(grn_tx_qty.getText()) * Double.parseDouble(grn_tx_buy_price.getText())) + "','" + bb + "' )");
           }catch(Exception ex){
                systemLogger.initLogger(grn.class).error(" addJTable() Error",ex);
                    JOptionPane.showMessageDialog(null, "Error :- add to grn item \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
                    b=false;
            }
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String  d1 = df.format(jDateChooser_MF.getDate());
            String  d2 = df.format(jDateChooser_EX.getDate());
            if (bb == 1) {
                try{
                DBClass.putData("insert into stock(iditem,qty,newold,expdate,mandate,buying_price,sell_price,status) values("
                        + "'" + idItem + "','" + Double.parseDouble(grn_tx_qty.getText()) + "',"
                        + "'" + bb+"','" + d1 + "','" + d2 + "',"
                        + "'" + Double.parseDouble(grn_tx_buy_price.getText()) + "','" + Double.parseDouble(grn_tx_sell_price.getText()) + "',"
                        + "'1' )");
                }catch(Exception ex){
                     systemLogger.initLogger(grn.class).error(" addJTable() Error",ex);
                    JOptionPane.showMessageDialog(null, "Error :- Add Stock Table  \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
                    b= false;
                }
            } else {
                try{
                DBClass.putData("update stock set qty ='" + Double.parseDouble(grn_tx_qty.getText())+"'"
                        + ",newold='" + bb + " ,expdate='" + d1 + "',mandate='" + d2 + "',"
                        + "buying_price='" + Double.parseDouble(grn_tx_buy_price.getText()) + "',sell_price='" + Double.parseDouble(grn_tx_sell_price.getText()) + "',"
                        + "status='1'  where iditem = '" + idItem + "'");
                }catch(Exception ex){
                     systemLogger.initLogger(grn.class).error(" addJTable() Error",ex);
                    JOptionPane.showMessageDialog(null, "Error :- This Item Has Not The Stock !! Plece Check The Up Down  \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
                    grn_tx_sell_price.grabFocus();
                    b= false;
                }
            }
            
        } catch (Exception ex) {
             systemLogger.initLogger(grn.class).error(" addJTable() Error",ex);
            JOptionPane.showMessageDialog(null, "Error Not Enter The Stock !!! \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
            grn_tx_grn_number.grabFocus();
             b= false;
        }
        return b;
    }
//>>>>>>>>> addJTable <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> selectAllGRNItem <<<<<<<<<<<      
    private void selectAllGRNItem() {
        try {
            DefaultTableModel defTabMod = (DefaultTableModel) jTable_grn.getModel();
            defTabMod.getDataVector().removeAllElements();
            //  ResultSet rs = DBClass.getData("select * from supplier where idsupplier  ='" + tx_doctor_id.getText() + "' order by iddoctor");
       //     DBClass.getData("select * from grnitem where idgrn='" + Integer.parseInt(grn_tx_grn_number.getText()) + "' order by idgrnitem");
 DBClass.getData("select gi.idgrn,gi.name,gi.barcode,gi.qty,gi.buyprice,gi.cost,gi.updownprice,s.comname,sc.terms "
         + "from grnitem gi inner join supplier s on gi.idsupplier=s.idsupplier inner join  item it "
         + "on gi.iditem=it.iditem inner join itemsubcatogery sc on it.iditemsubcatogery=sc.iditemsubcatogery"
         + " where gi.idgrn='" + Integer.parseInt(grn_tx_grn_number.getText()) + "' order by gi.idgrnitem");           
            
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                     Vector v = new Vector();
                    v.add(DBClass.r.getString("gi.idgrn"));
//                    DBClass.getData("select comname from supplier where idsupplier= '" + DBClass.r.getString("idsupplier") + "'");
//                    if (DBClass.r.isBeforeFirst() == true) {
//                        v.add(DBClass.r.getString("comname"));
//                    }
                    v.add(DBClass.r.getString("s.comname"));
                    v.add(DBClass.r.getString("gi.name"));
                    v.add(DBClass.r.getString("gi.barcode"));
//                    DBClass.getData("select su.terms from item it inner join itemsubcatogery su  on  it.iditemsubcatogery=su.iditemsubcatogery  where  it.iditem='"+DBClass.r.getString("iditem")+"'  ");
//                    if (DBClass.r.isBeforeFirst() == true) {
//                        v.add(DBClass.r.getString("su.terms"));
//                    }
                    v.add(DBClass.r.getString("sc.terms"));
                    v.add(DBClass.r.getString("gi.qty"));
                    v.add(DBClass.r.getString("gi.buyprice"));
                    v.add(DBClass.r.getString("gi.cost"));
                    if (DBClass.r.getInt("gi.updownprice") == 1) {
                        v.add("YES");
                        defTabMod.addRow(v);
                    } else {
                        v.add("NO");
                        defTabMod.addRow(v);
                    }
                    grn_la_enter.setVisible(false);
                    grn_la_new.setVisible(true);
                }
            }

        } catch (Exception ex) {
                  systemLogger.initLogger(grn.class).error(" selectAllItem() Error",ex);
            JOptionPane.showMessageDialog(null, "Error SelectselectAllGRNItem !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
            grn_tx_grn_number.grabFocus();
        }
    }
    //>>>>>>>>> selectAllItem <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> txValidateKeyEvent()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<      
    private void txValidateKeyEvent(KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld) {
        int dot = 0;
        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenthNeedFeld) {
            
            if (txType.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("PRICE")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8) | (iNumber == 110)) {
                    if (iNumber == 110) {
                        dot = dot + 1;
                    }
                    if (dot == 2) {
                        JOptionPane.showMessageDialog(null, "Error , You try 2 desimal simbles!!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
                        dot = 1;
//                            if (txName.getText().contains(".") ) {
//                                txName.setText(txName.getText());
//                            }
                    } else {
                        txName.setEditable(true);
                    }

                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("A")) {

                if ((iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 32) | (iNumber == 46)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }

    }
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> SearchAndListJcomboboxSupplier <<<<<<<<<<<     
    private void SearchAndListJcomboboxSupplier() {
        try {
             jComboBox_Supplier_name.removeAllItems();
            DBClass.getData("select comname from supplier where status='1' order by idsupplier");
            
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    jComboBox_Supplier_name.addItem(DBClass.r.getString("comname"));
                 }
            }
        } catch (Exception e) {
              systemLogger.initLogger(item.class).error("SearchAndListJcomboboxSupplier()  Error",e);
            JOptionPane.showMessageDialog(null, "Error SupplierTablesearch !!! \n SearchAndListJcomboboxSupplier() \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
            grn_tx_grn_number.grabFocus();
        }
    }
    //>>>>>>>>> SearchAndListJcomboboxSupplier <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
    
    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> SearchAndListJcomboboxItemCatogery <<<<<<<<<<<     
    private void SearchAndListJcomboboxItemCatogery() {
        try {
            jComboBox_catogery.removeAllItems();
            DBClass.getData("select name from itemcatogery where status='1' order by iditemcatogery");
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                   jComboBox_catogery.addItem(DBClass.r.getString("name"));
                    
                }
            }
        } catch (Exception e) {
            systemLogger.initLogger(item.class).error("SearchAndListJcomboboxItemCatogery()  Error",e);
            JOptionPane.showMessageDialog(null, "Error CatogeryTablesearch !!! \n SearchAndListJcomboboxItemCatogery() \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
            grn_tx_grn_number.grabFocus();
        }
    }
    //>>>>>>>>> SearchAndListJcomboboxItemCatogery <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> SearchAndListJcomboboxItemSubCatogery <<<<<<<<<<<     
    private void SearchAndListJcomboboxItemSubCatogery(int Catogery) {
        try {
            jComboBox_subcatogery.removeAllItems();
            DBClass.getData("select terms from itemsubcatogery where iditemcatogery='"+Catogery+"' where status='1' order by iditemsubcatogery");
            
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    jComboBox_subcatogery.addItem(DBClass.r.getString("terms"));
                }
            } 
        } catch (Exception e) {
             systemLogger.initLogger(item.class).error("SearchAndListJcomboboxItemSubCatogery()  Error",e);
            JOptionPane.showMessageDialog(null, "Error ItemSubCatogeryTablesearch !!! \n SearchAndListJcomboboxItemSubCatogery() \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
            grn_tx_grn_number.grabFocus();
        }
    }
    //>>>>>>>>> SearchAndListJcomboboxItemSubCatogery <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
 //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> searchItem_Barcode_Name_Short <<<<<<<<<<<      
    private void searchItem_Barcode_Name_Short(String search_TX_type,String search_DB_Column) {
        try {
             DefaultTableModel defTabMod = (DefaultTableModel) jTable_grn.getModel();
             defTabMod.getDataVector().removeAllElements();
          //  ResultSet rs = DBClass.getData("select * from supplier where idsupplier  ='" + tx_doctor_id.getText() + "' order by iddoctor");
            if(search_DB_Column.equals("Barcode")){
                DBClass.getData("select it.iditem,it.barcode,it.itemname,it.supplier,it.buyprice,it.sellprice,it.status,"
                  + " su.terms from item it inner join itemsubcatogery su on it.iditemsubcatogery=su.iditemsubcatogery where  it.barcode like '" + search_TX_type + "%' and it.status='1' order by iditem");
           }else if(search_DB_Column.equals("Itemname")){
                DBClass.getData("select it.iditem,it.barcode,it.itemname,it.supplier,it.buyprice,it.sellprice,it.status,"
                  + " su.terms from item it inner join itemsubcatogery su on it.iditemsubcatogery=su.iditemsubcatogery where  it.itemname like '" + search_TX_type + "%' and it.status='1' order by iditem");
           }else{
                JOptionPane.showMessageDialog(null, "Not Found Item , Search From Barcode or Name !!! \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
            grn_tx_item_barcode.grabFocus();
            }
            
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    grn_tx_item_barcode.setText(DBClass.r.getString("it.barcode"));
                    grn_tx_item_name.setText(DBClass.r.getString("it.itemname"));
                    jComboBox_Supplier_name.setSelectedItem(DBClass.r.getString("it.supplier"));
                    grn_tx_buy_price.setText(DBClass.r.getString("it.buyprice"));
                    grn_tx_sell_price.setText(DBClass.r.getString("it.sellprice"));
                    
                     jComboBox_catogery.removeAllItems();
                     jComboBox_subcatogery.removeAllItems();
        jComboBox_subcatogery.addItem(DBClass.r.getString("su.terms"));
        
     DBClass.getData("select ca.name from itemsubcatogery su inner join itemcatogery ca on su.iditemcatogery=ca.iditemcatogery where su.terms='"+DBClass.r.getString("su.terms")+"' order by iditemsubcatogery");
     if(DBClass.r.next())jComboBox_catogery.addItem(DBClass.r.getString("ca.name"));
               
                }
            }
            
        } catch (Exception ex) {
             systemLogger.initLogger(item.class).error("searchItem_Barcode_Name_Short()  Error",ex);
 JOptionPane.showMessageDialog(null, "Error ItemTable Search From Item_Barcode_Name !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
        grn_tx_item_barcode.grabFocus();
        }
    }
    //>>>>>>>>> searchItem_Barcode_Name_Short <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    

}
