/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import static Frame.invoiceproduct.t1;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;

/**
 *
 * @author CHETHANA
 */
public class listofgrn extends javax.swing.JFrame {


    /**
     * Creates new form grnvive
     */
    public listofgrn() {
        initComponents();
        selectAllemployee();
        TimeMethod();
        t2();
        SearchAndListJcomboboxItemCatogery();
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_user = new javax.swing.JTable();
        agent_la_date = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        tx_agent = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jComboBox_main_catogery = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        rxid = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(899, 472));

        jTable_user.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane1.setViewportView(jTable_user);

        agent_la_date.setText("jLabel1");

        jDateChooser1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jDateChooser1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jDateChooser1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDateChooser1MouseClicked(evt);
            }
        });
        jDateChooser1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jDateChooser1KeyPressed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        tx_agent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_agentKeyPressed(evt);
            }
        });

        jScrollPane2.setViewportView(jList1);

        jComboBox_main_catogery.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(agent_la_date, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(78, 78, 78))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(rxid, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tx_agent)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jComboBox_main_catogery, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(381, 381, 381)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(87, 87, 87))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tx_agent, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_main_catogery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(agent_la_date, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rxid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(38, 38, 38))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tx_agentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_agentKeyPressed
            searchANDListDockterrep("doctorrep", "iddoctorrep", tx_agent.getText(), jList1);
    }//GEN-LAST:event_tx_agentKeyPressed

    private void jDateChooser1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateChooser1KeyPressed
       
    }//GEN-LAST:event_jDateChooser1KeyPressed

    private void jDateChooser1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDateChooser1MouseClicked
     
    }//GEN-LAST:event_jDateChooser1MouseClicked

    private void jDateChooser1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jDateChooser1AncestorAdded
    
    }//GEN-LAST:event_jDateChooser1AncestorAdded

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
      String  d1 = df.format(jDateChooser1.getDate());
      jTextField1.setText(d1);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // FileInputStream is = new FileInputStream("F:\\SADFInal\\01_1_siddha_System\\src\\Report\\RXInvoice.jasper");
            FileInputStream is = new FileInputStream(SaveFilePath.REPORT_File_path + "\\RXInvoice.jasper");
            //    InputStream is = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "reportinvoice.jasper");
            Map<String, Object> map = new HashMap<>();
            map.put("RefNo", rxid.getText());  //tx_invoiceid.getText()
            JasperPrint fileReport = JasperFillManager.fillReport(is, map, DBClass.con());
            //    JasperViewer.viewReport(fileReport, false);
            try {
                String pathPDF = "";
                // File file = new File("DDRR.txt");
                File file = new File(SaveFilePath.REPORT_BASE_URL + "\\DDRR1.txt");
                if (!file.exists()) {
                    // System.out.println("f");
                    file.createNewFile();
                    FileWriter fr = new FileWriter(file);

                    JFileChooser jfc = new JFileChooser();
                    jfc.setDialogType(JFileChooser.CUSTOM_DIALOG);
                    jfc.setMultiSelectionEnabled(false);
                    jfc.showSaveDialog(jfc);
                    pathPDF = jfc.getSelectedFile().getPath().replace("\\", "\\\\");

                    fr.write("DB.map_InRx=" + pathPDF);
                    fr.close();
                    File pF = new File(pathPDF);
                    pF.mkdir();
                }

                InputStream input = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "\\DDRR1.txt");
                Properties prop = new Properties();
                prop.load(input);
                pathPDF = prop.getProperty("DB.map_InRx");
                //  System.out.println(prop.getProperty("DB.mpa"));

                JasperExportManager.exportReportToPdfFile(fileReport, pathPDF + "\\" + "_" + t1 + "_" + GenaratorPDFName(rxid.getText(), 1));
                JasperPrintManager.printReport(fileReport, false);
                    //   JasperExportManager.exportReportToXmlFile(fileReport, pathPDF + "\\\\" + GenaratorXMLName(tx_refno_jLayeredPane_invoice.getText()),true);
                // System.out.println(pathPDF + "\\\\" + GenaratorPDFName(tx_refno_jLayeredPane_invoice.getText()));
            } catch (IOException e) {
                systemLogger.initLogger(invoice.class).error("printInvoice() IOException Error", e);
                // e.printStackTrace();
                JOptionPane.showMessageDialog(null, "PDF not save printInvoice!!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
            }

        } catch (JRException e) {
            systemLogger.initLogger(invoice.class).error("printInvoice() JRException Error", e);
            JOptionPane.showMessageDialog(null, "Repot Not Compleate , Please Check It printInvoice!!!", "Report Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            systemLogger.initLogger(invoice.class).error("printInvoice()  Exception Error", e);
            // e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Repoting Error printInvoice!!!", "Report Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(listofgrn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(listofgrn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(listofgrn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(listofgrn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new listofgrn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel agent_la_date;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox_main_catogery;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_user;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField rxid;
    private javax.swing.JTextField tx_agent;
    // End of variables declaration//GEN-END:variables
       private void searchANDListDockterrep(String doctorrep, String iddoctorrep, String text, JList jList1) {
        try {
            DBClass.getData("select " + iddoctorrep + ",repname from " + doctorrep + " where  repname  like '%" + text + "%' order by iddoctorrep");
            jList1.removeAll();
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    Vector v = new Vector();
                    v.add(DBClass.r.getString("iddoctorrep") + "/" + DBClass.r.getString("repname"));
                    jList1.setListData(v);
                }
            } 
        } catch (Exception e) {
            systemLogger.initLogger(doctor.class).error("searchANDListDockterrep() Exception Error",e);
            JOptionPane.showMessageDialog(null, "Error searchANDListRIDN!!! \n "+e, "Error Massage List", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    
    
    private void selectAllemployee() {
        try {
            DefaultTableModel defTabMod = (DefaultTableModel) jTable_user.getModel();
        ResultSet rs = DBClass.getData("select * from user ");//order by iduser
            
            if (rs.isBeforeFirst()) {
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("idemployee"));
                    v.add(rs.getString("roal"));
                    v.add(rs.getString("password"));
                   if (DBClass.r.getInt("status") == 1) {
                        v.add("Active");
                        defTabMod.addRow(v);
                    } else {
                        v.add("Inactive");
                        defTabMod.addRow(v);
                    }

                }
            }
        } catch (Exception ex) {
           // ex.printStackTrace();
          JOptionPane.showMessageDialog(null, "Error EmployeeTableSearch !!! \n selectAllemployee() \n" + ex, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }

    }

    public  void TimeMethod() {
        new Thread(new Runnable() {

            @Override
            public void run() {
                StringBuffer sb2;
                sb2 = new StringBuffer(new SimpleDateFormat("yyyy-MM-dd").format(new Date()));
                agent_la_date.setText("" + sb2);
               
            }
        }).start();
    }

    public void t2(){
         //   SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         //   jLabel1.setText(""+sdf.format(new Date()));
        java.sql.Date sqldate = new java.sql.Date(new Date().getTime());
          jLabel1.setText(""+sqldate);
    }
      private void SearchAndListJcomboboxItemCatogery() {
        try {
            jComboBox_main_catogery.removeAllItems();
            DBClass.getData("select name from itemcatogery order by iditemcatogery");
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    Vector v = new Vector();
                    v.add(DBClass.r.getString("name"));
                    jComboBox_main_catogery.addItem(v);
                }
            }
        } catch (Exception e) {
            systemLogger.initLogger(item.class).error("SearchAndListJcomboboxItemCatogery()  Error",e);
            JOptionPane.showMessageDialog(null, "Error CatogeryTablesearch !!! \n SearchAndListJcomboboxItemCatogery() \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
      
      public void t1(){
          try{
               SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
            Date d1 = f.parse(f.format(jDateChooser1.getDate()));
            String d = f.format(d1);
            jTextField1.setText(d);
          }catch(Exception e){
              e.printStackTrace();
          }
      }
      
      
      
         private String GenaratorPDFName(String x, int y) {
        if (y != 2) {
            String name = "invoiceNumber" + x + "_RX.pdf";
            return name;
        } else {
            String name = "invoiceNumber" + x + "_RXCopy.pdf";
            return name;
        }
    }
}
