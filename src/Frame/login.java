/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
//import java.sql.Connection;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;

/**
 *
 * @author CHETHANA
 */
public class login extends javax.swing.JFrame {
   
    UniversalMethod u = new UniversalMethod();
    public static String u_name = "Lili64";
    public static String pass = "Lili64";
    public static int eye = 0;
    public static int idUser;
    
    public login() {
        initComponents();
        
        systemLogger.initLogger(login.class).info("System Starting");

        dateTime();
        image();
        jProgressBar1.setVisible(false);
        login_la_messege.setVisible(true);
        u.imageMethod("/img/in.png", login_la_login);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        layeredpane = new javax.swing.JLayeredPane();
        login_la_logo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        logo_la_name = new javax.swing.JLabel();
        login_la_messege = new javax.swing.JLabel();
        txt_u_name = new javax.swing.JTextField();
        txt_pass = new javax.swing.JPasswordField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        login_la_eye = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        login_la_date = new javax.swing.JLabel();
        login_la_time = new javax.swing.JLabel();
        login_la_login = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        login_la_cloce = new javax.swing.JLabel();
        la_bg_login = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(809, 480));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(809, 480));
        getContentPane().setLayout(null);

        layeredpane.setBackground(new java.awt.Color(255, 255, 255));
        layeredpane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51), 2));

        login_la_logo.setText("jLabel1");
        login_la_logo.setBorder(new javax.swing.border.MatteBorder(null));
        layeredpane.add(login_la_logo);
        login_la_logo.setBounds(530, 110, 270, 240);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Password");
        jLabel3.setBorder(new javax.swing.border.MatteBorder(null));
        layeredpane.add(jLabel3);
        jLabel3.setBounds(20, 270, 180, 40);

        logo_la_name.setFont(new java.awt.Font("Corbel Light", 1, 48)); // NOI18N
        logo_la_name.setForeground(new java.awt.Color(255, 255, 255));
        logo_la_name.setText("Welcome!");
        logo_la_name.setBorder(new javax.swing.border.MatteBorder(null));
        layeredpane.add(logo_la_name);
        logo_la_name.setBounds(20, 50, 300, 90);

        login_la_messege.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        login_la_messege.setForeground(new java.awt.Color(255, 0, 51));
        layeredpane.add(login_la_messege);
        login_la_messege.setBounds(20, 420, 470, 40);

        txt_u_name.setBackground(new java.awt.Color(255, 255, 255));
        txt_u_name.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txt_u_name.setForeground(new java.awt.Color(51, 51, 51));
        txt_u_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_u_nameKeyPressed(evt);
            }
        });
        layeredpane.add(txt_u_name);
        txt_u_name.setBounds(20, 210, 190, 30);

        txt_pass.setBackground(new java.awt.Color(255, 255, 255));
        txt_pass.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txt_pass.setForeground(new java.awt.Color(51, 51, 51));
        txt_pass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_passKeyPressed(evt);
            }
        });
        layeredpane.add(txt_pass);
        txt_pass.setBounds(20, 320, 190, 30);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setBorder(new javax.swing.border.MatteBorder(null));
        layeredpane.add(jSeparator1);
        jSeparator1.setBounds(10, 250, 270, 10);

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setBorder(new javax.swing.border.MatteBorder(null));
        layeredpane.add(jSeparator4);
        jSeparator4.setBounds(10, 370, 270, 10);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setBorder(new javax.swing.border.MatteBorder(null));
        layeredpane.add(jSeparator3);
        jSeparator3.setBounds(300, 160, 10, 210);

        login_la_eye.setText("jLabel6");
        login_la_eye.setBorder(new javax.swing.border.MatteBorder(null));
        login_la_eye.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_eyeMouseClicked(evt);
            }
        });
        layeredpane.add(login_la_eye);
        login_la_eye.setBounds(220, 320, 30, 30);

        jProgressBar1.setBackground(new java.awt.Color(102, 255, 51));
        jProgressBar1.setForeground(new java.awt.Color(0, 0, 0));
        layeredpane.add(jProgressBar1);
        jProgressBar1.setBounds(20, 390, 470, 12);

        login_la_date.setBackground(new java.awt.Color(0, 0, 0));
        login_la_date.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        login_la_date.setForeground(new java.awt.Color(0, 0, 0));
        login_la_date.setText("Date");
        login_la_date.setBorder(new javax.swing.border.MatteBorder(null));
        layeredpane.add(login_la_date);
        login_la_date.setBounds(580, 440, 110, 30);

        login_la_time.setBackground(new java.awt.Color(0, 0, 0));
        login_la_time.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        login_la_time.setForeground(new java.awt.Color(0, 0, 0));
        login_la_time.setText("Time");
        login_la_time.setBorder(new javax.swing.border.MatteBorder(null));
        layeredpane.add(login_la_time);
        login_la_time.setBounds(690, 440, 110, 30);

        login_la_login.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        login_la_login.setForeground(new java.awt.Color(0, 0, 0));
        login_la_login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_loginMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_loginMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_loginMouseExited(evt);
            }
        });
        layeredpane.add(login_la_login);
        login_la_login.setBounds(340, 240, 140, 40);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("User Name");
        jLabel12.setBorder(new javax.swing.border.MatteBorder(null));
        layeredpane.add(jLabel12);
        jLabel12.setBounds(20, 160, 180, 40);

        login_la_cloce.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        login_la_cloce.setForeground(new java.awt.Color(0, 0, 0));
        login_la_cloce.setText("e");
        login_la_cloce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseExited(evt);
            }
        });
        layeredpane.add(login_la_cloce);
        login_la_cloce.setBounds(765, 20, 30, 30);

        la_bg_login.setText("jLabel1");
        layeredpane.add(la_bg_login);
        la_bg_login.setBounds(8, 5, 510, 470);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setOpaque(true);
        layeredpane.add(jLabel1);
        jLabel1.setBounds(520, 6, 284, 468);

        getContentPane().add(layeredpane);
        layeredpane.setBounds(-2, 0, 810, 480);

        setSize(new java.awt.Dimension(809, 480));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void login_la_cloceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseExited
        u.imageMethod("/img/exti2.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseExited

    private void login_la_cloceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseEntered
        u.imageMethod("/img/exti.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseEntered

    private void login_la_cloceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseClicked
        SystemClose();
    }//GEN-LAST:event_login_la_cloceMouseClicked

    private void login_la_loginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_loginMouseClicked
        if (!((txt_u_name.getText().isEmpty()) & (Arrays.toString(txt_pass.getPassword()).isEmpty()))) {
            loginCheck();
        } else if ((txt_u_name.getText().isEmpty())) {
            txt_u_name.grabFocus();
        } else if ((Arrays.toString(txt_pass.getPassword()).isEmpty())) {
            txt_pass.grabFocus();
        }
    }//GEN-LAST:event_login_la_loginMouseClicked

    private void login_la_loginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_loginMouseExited
        u.imageMethod("/img/in.png", login_la_login);
    }//GEN-LAST:event_login_la_loginMouseExited

    private void login_la_loginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_loginMouseEntered
        u.imageMethod("/img/in2.png", login_la_login);
    }//GEN-LAST:event_login_la_loginMouseEntered

    private void login_la_eyeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_eyeMouseClicked
        eye = eye + 1;
        if (eye == 1) {
            u.imageMethod("/img/open_eye2.png", login_la_eye);
            txt_pass.setEchoChar((char) 0);
            txt_pass.setEchoChar((char) 0);
        } else {
            u.imageMethod("/img/closed_eye2.png", login_la_eye);
            eye = 0;
            txt_pass.setEchoChar((char) '*');
        }
        
////        if (txt_pass.getPassword().length == 0 || Arrays.equals(txt_pass.getPassword(), "Re-type Password".toCharArray())) {
////            txt_pass.setEchoChar((char)0);
////            txt_pass.setText("Re-type Password");
////        } else {
////            txt_pass.setText(String.valueOf(txt_pass.getPassword()));
////        }
    }//GEN-LAST:event_login_la_eyeMouseClicked

    private void txt_passKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_passKeyPressed
        char c = evt.getKeyChar();
        if ((Character.isDigit(c)) | (Character.isAlphabetic(c)) | (c == KeyEvent.VK_BACK_SPACE) | (c == KeyEvent.VK_SPACE)) {
            txt_u_name.setEditable(true);
        } else {
            txt_u_name.setEditable(false);
        }
        if (c == KeyEvent.VK_ENTER) {
            if (!txt_pass.getPassword().toString().isEmpty()) {
                loginCheck();
            } else {
                txt_pass.grabFocus();
            }
        }
    }//GEN-LAST:event_txt_passKeyPressed

    private void txt_u_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_u_nameKeyPressed
        int code = evt.getKeyCode();
         char c = evt.getKeyChar();
        if (code == 10) {
            if (!txt_u_name.getText().trim().isEmpty()) {
                txt_pass.grabFocus();
            } else {
                txt_u_name.grabFocus();
            }
        }
        
        if ((Character.isDigit(c)) | (Character.isAlphabetic(c)) | (c == KeyEvent.VK_BACK_SPACE) | (c == KeyEvent.VK_SPACE)) {
            txt_u_name.setEditable(true);
        } else {
            txt_u_name.setEditable(false);
        }
    }//GEN-LAST:event_txt_u_nameKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//////        try {
//////            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//////                if ("Nimbus".equals(info.getName())) {
//////                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//////                    break;
//////                }
//////            }
//////        } catch (ClassNotFoundException ex) {
//////            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//////        } catch (InstantiationException ex) {
//////            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//////        } catch (IllegalAccessException ex) {
//////            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//////        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//////            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//////        }
          try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
        }
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new login().setVisible(true);
          });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel la_bg_login;
    private javax.swing.JLayeredPane layeredpane;
    private javax.swing.JLabel login_la_cloce;
    private javax.swing.JLabel login_la_date;
    private javax.swing.JLabel login_la_eye;
    private javax.swing.JLabel login_la_login;
    private javax.swing.JLabel login_la_logo;
    private javax.swing.JLabel login_la_messege;
    private javax.swing.JLabel login_la_time;
    private javax.swing.JLabel logo_la_name;
    private javax.swing.JPasswordField txt_pass;
    private javax.swing.JTextField txt_u_name;
    // End of variables declaration//GEN-END:variables

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> Singltan class 
     * *** >>> Why ------------->>> ek object ekk hdnn
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> Get Instance <<<<<<<<<<<  
    private static login logn = new login();

    public static login getCallPopup() {
        return logn;
    }
//>>>>>>>>> Get Instance <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  
    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 

    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> loginCheck()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> System loginCheck <<<<<<<<<<<   
    void loginCheck() {
        if ((txt_u_name.getText().equals(u_name)) & (txt_pass.getText().equals(pass))) {
            lodingProgresBar(1);
        } else if (!((txt_u_name.getText().equals(u_name)) & (txt_pass.getPassword().toString().equals(pass)))) {
            searchEmployee();
        } else {
            JOptionPane.showMessageDialog(this, "Check the username or password");
            txt_u_name.grabFocus();
        }
    }
    //>>>>>>>>> System loginCheck <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\      
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> searchEmployee()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>>  searchEmployee <<<<<<<<<<<   
    public void searchEmployee() {
        try {
            String uname = txt_u_name.getText();
            String password = new String(txt_pass.getPassword());
            ResultSet search = DBClass.getData("select * from user where username ='" + uname + "' and password ='" + PasswordEncription.encrypt(password) + "' ");
            if (search.next()) {
                boolean isActive = search.getBoolean("status");
                if (isActive) {
                    UniversalMethod.setLogUser(search.getString("username"));
                    idUser = search.getInt("iduser");
                    UniversalMethod.setLogUserID(search.getInt("iduser"));
                    String roal = search.getString("roal");
                    if(roal.equals("User")){ UniversalMethod.setuserType(roal); lodingProgresBar(4);  }
                    else if(roal.equals("Caller")){ UniversalMethod.setuserType(roal); lodingProgresBar(3);  }
                    else if(roal.equals("Stock Keeper")){ UniversalMethod.setuserType(roal); lodingProgresBar(2);  }
                    else if(roal.equals("Maneger") | roal.equals("Admin")){ UniversalMethod.setuserType(roal); lodingProgresBar(1);  }
                    
                } else {
                    // JOptionPane.showMessageDialog(this, "This User is Inactive");
                    login_la_messege.setVisible(true);
                    login_la_messege.setText("This User is Inactive");
                    txt_u_name.grabFocus();
                    systemLogger.initLogger(login.class).warn("Trying to Log Inactive User"+UniversalMethod.getLogUser());
                }
            } else {
                // JOptionPane.showMessageDialog(this, "Invalid Username or Password");
                 login_la_messege.setVisible(true);
                systemLogger.initLogger(login.class).info("Invalid user name or password ");
                login_la_messege.setText("Invalid Username or Password");
                txt_u_name.grabFocus();
            }
        } catch (Exception e) {
            //  JOptionPane.showMessageDialog(this, "Check the all inputs");
             login_la_messege.setVisible(true);
            login_la_messege.setText("Check the all inputs");
            txt_u_name.grabFocus();
            systemLogger.initLogger(login.class).error("Login Error",e);
            
        }

    }
    //>>>>>>>>>  searchEmployee <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> SystemClose()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> System cloce <<<<<<<<<<<   
    void SystemClose() {
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close the System ?", "Exit System", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            // setDefaultCloseOperation(EXIT_ON_CLOSE);
            System.exit(0);
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            login_la_cloce.setBackground(new Color(153, 204, 255));
        }
    }
    //>>>>>>>>> System cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 

    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> set image <<<<<<<<<<<
    void image() {
        u.imageMethod("/img/logo.png", login_la_logo);
        u.imageMethod("/img/closed_eye2.png", login_la_eye);
     //   u.imageMethod("/img/bg_all_.jpg", la_bg_login);
         u.imageMethod("/img/123.jpg", la_bg_login);
        u.imageMethod("/img/exti2.png", login_la_cloce);

    }

 //>>>>>>>>> set image <<<<<<<<<<<
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 

    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> set  date and time <<<<<<<<<<<    
    private void dateTime() {
        new Thread(() -> {
            StringBuffer sb, sb2;
            sb2 = new StringBuffer(new SimpleDateFormat("yyyy-MM-dd").format(new Date()));
            login_la_date.setText("" + sb2);
            while (true) {
                sb = new StringBuffer(new SimpleDateFormat("HH:mm:ss").format(new Date()));
                login_la_time.setText("" + sb);
            }
        }).start();
    }
//>>>>>>>>> set date and time <<<<<<<<<<<
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 

    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> login bar <<<<<<<<<<<       
    synchronized private void lodingProgresBar(int x) {
         u.imageMethod("/img/in2.png", login_la_login);
         insertUser();
        jProgressBar1.setVisible(true);
       // jProgressBar1.setBackground(new Color(102, 255, 51));
        Thread t = new Thread(new Runnable() {
            home n;
            home_user hu;
            home_stock hs;
            caller c;
            @Override
            public void run() {
                try {
                    for (int i = 1; i < 101; i++) {
                        jProgressBar1.setValue(i);
                        if (i == 5) {
                            login_la_messege.setText("Database checking...!");
////                            Connection newConnection = DBClass.con();
////                            if (newConnection == null) {
////                                break;
////                            }
                        }
                        if (i >= 20 && i <= 30) {
                            login_la_messege.setText("DB Connected");
                            Thread.sleep(100);
                            continue;

                        }
                        if (i == 90) {
                            login_la_messege.setText("Loging in user");
                            if(x==1){
                                n = new home();
                            }else if(x==2){
                                hs = new home_stock();
                            }else if(x==3){
                                c = new caller();
                            }else if(x==4){
                                hu = new home_user();
                            }
                        }
                        if (i == 100) {
                            if(x==1){
                                 systemLogger.initLogger(login.class).info("Login Sucess"+ u.getLogUserID());
                               n.setVisible(true);
                            }else if(x==2){
                                hs.setVisible(true);
                            }else if(x==3){
                                c.setVisible(true);
                            }else if(x==4){
                                hu.setVisible(true);
                            }
                            login.this.dispose();
                            break;
                        }

                        Thread.sleep(20);

                    }
                } catch (Exception e) {
                }
            }
        });
        t.start();

    }
 //>>>>>>>>> loging bar <<<<<<<<<<<      
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 

    
  
    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
   /* *** >>> Date ------------>>>
     * *** >>> What ------------>>> insertUser()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>>  insertUser start<<<<<<<<<<<   
    public void insertUser() {
        try{        
                String logaoutdate = "0000-00-00";
                String logaouttime = "00:00:00";
              DBClass.putData("insert into login (iduser,indate,intaime,outdate,outtime,status)  values( '"+idUser+"','" + login_la_date.getText() + "' ,'" + login_la_time.getText() + "' ,'"+logaoutdate+"','"+logaouttime+"','1' )");  
        } catch (Exception e) {
            systemLogger.initLogger(login.class).error("Login Error",e);
            JOptionPane.showMessageDialog(this, "Problumn insertUser \n");
            txt_u_name.grabFocus();
        }

    }
    //>>>>>>>>>  insertUser close<<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\      
    
    
    class RoundedPanel extends JPanel {

        private Color backgroundColor;
        private int cornercRadius = 15;

        public RoundedPanel(LayoutManager layout, int radius) {
            super(layout);
            cornercRadius = radius;
        }

        public RoundedPanel(LayoutManager layout, int radius, Color bgColor) {
            super(layout);
            cornercRadius = radius;
            backgroundColor = bgColor;
        }

        public RoundedPanel(Color bgColor) {
            super();
            backgroundColor = bgColor;
        }

        public RoundedPanel(int radius) {
            super();
            cornercRadius = radius;
        }

        public RoundedPanel(int radius, Color bgColor) {
            super();
            cornercRadius = radius;
            backgroundColor = bgColor;
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Dimension arcs = new Dimension(cornercRadius, cornercRadius);
            int width = getWidth();
            int height = getHeight();
            Graphics2D graphics = (Graphics2D) g;
            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

            //Draws the rounded panel with borders.
            if (backgroundColor != null) {
                graphics.setColor(backgroundColor);
            } else {
                graphics.setColor(getBackground());
            }
            graphics.fillRoundRect(0, 0, width - 1, height - 1, arcs.width, arcs.height); //paint background
            graphics.setColor(getForeground());
            graphics.drawRoundRect(0, 0, width - 1, height - 1, arcs.width, arcs.height); //paint border
        }
    }

}
