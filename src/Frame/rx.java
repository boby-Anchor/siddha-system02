/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;


import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.util.Date;

import java.util.Vector;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHETHANA
 */
public class rx extends javax.swing.JFrame {
public static invoice vi;
    UniversalMethod u = new UniversalMethod();
   // public static String path = "F:\\F\\Gurp\\Siddha\\products images\\pasyala\\Cut\\DSC_1048 copy.png";
    public static int idsearch_T1;
    /**
     * Creates new form rx
     */
    public rx() {
        initComponents();
        systemLogger.initLogger(rx.class).info("Open RX Frame");
         u.imageMethod(background, home_la_uesr_image, doctor_la_login_use_name, agent_la_home_img, login_la_mini, login_la_cloce);
        cleareFields();
          UniversalMethod.TimeMethod(agent_la_date, agent_la_time);
        doctor_la_login_use_name.setText(UniversalMethod.getLogUser());
         u.imageMethod("/img/removeB1.png", la_remove );
          u.imageMethod("/img/enter.png", la_enter);
           u.imageMethod("/img/newB.png", user_la_new);
           agent_la_home_img.setVisible(false);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tx_itemname = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tx_shortname = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        tx_unitprice = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        tx_qty = new javax.swing.JTextField();
        jComboBox_catogery = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jComboBox_subcatogery = new javax.swing.JComboBox();
        agent_la_date = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        agent_la_time = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        home_la_uesr_image = new javax.swing.JLabel();
        doctor_la_login_use_name = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        agent_la_home_img = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        login_la_cloce = new javax.swing.JLabel();
        login_la_mini = new javax.swing.JLabel();
        tx_rxid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_rx_item = new javax.swing.JTable();
        la_enter = new javax.swing.JLabel();
        la_remove = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_all_items = new javax.swing.JTable();
        user_la_new = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        tx_bill_total = new javax.swing.JTextField();
        tx_disconut = new javax.swing.JTextField();
        tx_netTotal = new javax.swing.JTextField();
        tx_shipping = new javax.swing.JTextField();
        tx_Full_Total = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1376, 768));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1376, 768));
        getContentPane().setLayout(null);

        jLayeredPane1.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Item Name");
        jLabel8.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel8);
        jLabel8.setBounds(20, 50, 120, 30);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText(":");
        jLabel7.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel7);
        jLabel7.setBounds(230, 50, 30, 30);

        tx_itemname.setBackground(new java.awt.Color(255, 255, 255));
        tx_itemname.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_itemname.setForeground(new java.awt.Color(0, 0, 0));
        tx_itemname.setText("jTextField1");
        tx_itemname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_itemnameActionPerformed(evt);
            }
        });
        jLayeredPane1.add(tx_itemname);
        tx_itemname.setBounds(250, 50, 290, 33);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Short Name");
        jLabel10.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel10);
        jLabel10.setBounds(20, 10, 110, 30);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText(":");
        jLabel11.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel11);
        jLabel11.setBounds(230, 10, 30, 30);

        tx_shortname.setBackground(new java.awt.Color(255, 255, 255));
        tx_shortname.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_shortname.setForeground(new java.awt.Color(0, 0, 0));
        tx_shortname.setText("jTextField1");
        tx_shortname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_shortnameKeyPressed(evt);
            }
        });
        jLayeredPane1.add(tx_shortname);
        tx_shortname.setBounds(250, 10, 290, 33);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Catogery");
        jLabel9.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel9);
        jLabel9.setBounds(20, 90, 110, 30);

        jLabel13.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText(":");
        jLabel13.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel13);
        jLabel13.setBounds(230, 90, 30, 30);

        jLabel30.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Unit Price");
        jLabel30.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel30);
        jLabel30.setBounds(20, 170, 120, 30);

        jLabel31.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText(":");
        jLabel31.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel31);
        jLabel31.setBounds(230, 170, 30, 30);

        tx_unitprice.setBackground(new java.awt.Color(255, 255, 255));
        tx_unitprice.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_unitprice.setForeground(new java.awt.Color(0, 0, 0));
        tx_unitprice.setText("jTextField1");
        jLayeredPane1.add(tx_unitprice);
        tx_unitprice.setBounds(250, 170, 290, 33);

        jLabel34.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("QTY");
        jLabel34.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel34);
        jLabel34.setBounds(20, 210, 110, 30);

        jLabel35.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText(":");
        jLabel35.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel35);
        jLabel35.setBounds(230, 210, 30, 30);

        tx_qty.setBackground(new java.awt.Color(255, 255, 255));
        tx_qty.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_qty.setForeground(new java.awt.Color(0, 0, 0));
        tx_qty.setText("jTextField1");
        tx_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_qtyKeyPressed(evt);
            }
        });
        jLayeredPane1.add(tx_qty);
        tx_qty.setBounds(250, 210, 290, 33);

        jComboBox_catogery.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_catogery.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_catogery.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_catogery.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_catogeryKeyPressed(evt);
            }
        });
        jLayeredPane1.add(jComboBox_catogery);
        jComboBox_catogery.setBounds(250, 90, 290, 35);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Sub Catogery");
        jLabel12.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel12);
        jLabel12.setBounds(20, 130, 150, 30);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText(":");
        jLabel16.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel16);
        jLabel16.setBounds(230, 130, 30, 30);

        jComboBox_subcatogery.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_subcatogery.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_subcatogery.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_subcatogery.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_subcatogeryKeyPressed(evt);
            }
        });
        jLayeredPane1.add(jComboBox_subcatogery);
        jComboBox_subcatogery.setBounds(250, 130, 290, 35);

        getContentPane().add(jLayeredPane1);
        jLayeredPane1.setBounds(40, 260, 570, 250);

        agent_la_date.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_date.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_date.setText("Invoice");
        agent_la_date.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_date);
        agent_la_date.setBounds(10, 5, 130, 35);

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(140, 5, 20, 30);

        agent_la_time.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_time.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_time.setText("Invoice");
        agent_la_time.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_time);
        agent_la_time.setBounds(150, 5, 130, 35);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(280, 5, 20, 30);

        home_la_uesr_image.setForeground(new java.awt.Color(255, 255, 255));
        home_la_uesr_image.setText("userlogo");
        getContentPane().add(home_la_uesr_image);
        home_la_uesr_image.setBounds(290, 10, 30, 30);

        doctor_la_login_use_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        doctor_la_login_use_name.setForeground(new java.awt.Color(255, 255, 255));
        doctor_la_login_use_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        doctor_la_login_use_name.setText("Invoice");
        getContentPane().add(doctor_la_login_use_name);
        doctor_la_login_use_name.setBounds(330, 5, 260, 35);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(580, 5, 20, 30);

        agent_la_home_img.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_home_img.setText("jLabel1");
        agent_la_home_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseExited(evt);
            }
        });
        getContentPane().add(agent_la_home_img);
        agent_la_home_img.setBounds(600, 5, 80, 30);

        jLabel1.setBackground(new java.awt.Color(51, 204, 255));
        jLabel1.setFont(new java.awt.Font("Eras Bold ITC", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("RX");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(760, 1, 330, 40);

        login_la_cloce.setBackground(new java.awt.Color(255, 255, 255));
        login_la_cloce.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_cloce.setForeground(new java.awt.Color(0, 0, 0));
        login_la_cloce.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_cloce.setBorder(new javax.swing.border.MatteBorder(null));
        login_la_cloce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseExited(evt);
            }
        });
        getContentPane().add(login_la_cloce);
        login_la_cloce.setBounds(1330, 10, 30, 30);

        login_la_mini.setBackground(new java.awt.Color(255, 255, 255));
        login_la_mini.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_mini.setForeground(new java.awt.Color(0, 0, 0));
        login_la_mini.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_mini.setBorder(new javax.swing.border.MatteBorder(null));
        login_la_mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_miniMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_miniMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_miniMouseExited(evt);
            }
        });
        getContentPane().add(login_la_mini);
        login_la_mini.setBounds(1295, 10, 30, 30);

        tx_rxid.setBackground(new java.awt.Color(255, 255, 255));
        tx_rxid.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_rxid.setForeground(new java.awt.Color(0, 0, 0));
        tx_rxid.setText("jTextField1");
        tx_rxid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_rxidKeyPressed(evt);
            }
        });
        getContentPane().add(tx_rxid);
        tx_rxid.setBounds(240, 70, 200, 33);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Caller Note  :");
        jLabel4.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel4);
        jLabel4.setBounds(700, 70, 150, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(":");
        jLabel5.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel5);
        jLabel5.setBounds(220, 70, 30, 30);

        jSeparator6.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator6.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator6);
        jSeparator6.setBounds(690, 590, 650, 10);

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator5);
        jSeparator5.setBounds(0, 40, 1370, 10);

        jSeparator7.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator7.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator7);
        jSeparator7.setBounds(680, 260, 10, 500);

        jTable_rx_item.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Unit Price", "QTY", "Total", "Term"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_rx_item);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 520, 470, 230);

        la_enter.setText("jLabel3");
        la_enter.setBorder(new javax.swing.border.MatteBorder(null));
        la_enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_enterMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_enterMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_enterMouseExited(evt);
            }
        });
        getContentPane().add(la_enter);
        la_enter.setBounds(520, 690, 150, 50);

        la_remove.setText("jLabel3");
        la_remove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_removeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_removeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_removeMouseExited(evt);
            }
        });
        getContentPane().add(la_remove);
        la_remove.setBounds(520, 520, 140, 40);

        jTable_all_items.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barcode", "Item Name", "Short Name", "Sub Catogery", "Unit Price", "Company"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_all_items.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_all_itemsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_all_items);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(690, 260, 660, 320);

        user_la_new.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        user_la_new.setForeground(new java.awt.Color(0, 0, 0));
        user_la_new.setText("New");
        user_la_new.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_la_newMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                user_la_newMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                user_la_newMouseExited(evt);
            }
        });
        getContentPane().add(user_la_new);
        user_la_new.setBounds(540, 130, 120, 40);

        jLayeredPane2.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Discount");
        jLabel14.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 120, 30));

        jLabel15.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText(":");
        jLabel15.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 30, 30));

        jLabel17.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Net Total");
        jLabel17.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 120, 30));

        jLabel18.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText(":");
        jLabel18.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 30, 30));

        jLabel19.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Shiping Cost");
        jLabel19.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, 120, 30));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText(":");
        jLabel6.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 23, 30, 30));

        jLabel20.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Total");
        jLabel20.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane2.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 23, 120, 30));

        jLabel21.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText(":");
        jLabel21.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 30, 30));

        jLabel32.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Total Amount");
        jLabel32.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane2.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 120, 30));

        jLabel33.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText(":");
        jLabel33.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane2.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 30, 30));

        tx_bill_total.setBackground(new java.awt.Color(255, 255, 255));
        tx_bill_total.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_bill_total.setForeground(new java.awt.Color(102, 0, 102));
        tx_bill_total.setText("0");
        tx_bill_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_bill_totalActionPerformed(evt);
            }
        });
        jLayeredPane2.add(tx_bill_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 120, 33));

        tx_disconut.setBackground(new java.awt.Color(255, 255, 255));
        tx_disconut.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_disconut.setForeground(new java.awt.Color(0, 0, 0));
        tx_disconut.setText("0");
        tx_disconut.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tx_disconutFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tx_disconutFocusLost(evt);
            }
        });
        tx_disconut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_disconutKeyPressed(evt);
            }
        });
        jLayeredPane2.add(tx_disconut, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, 120, 33));

        tx_netTotal.setBackground(new java.awt.Color(255, 255, 255));
        tx_netTotal.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_netTotal.setForeground(new java.awt.Color(0, 0, 0));
        tx_netTotal.setText("0");
        jLayeredPane2.add(tx_netTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 120, 33));

        tx_shipping.setBackground(new java.awt.Color(255, 255, 255));
        tx_shipping.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_shipping.setForeground(new java.awt.Color(0, 0, 0));
        tx_shipping.setText("0");
        tx_shipping.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tx_shippingFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tx_shippingFocusLost(evt);
            }
        });
        tx_shipping.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_shippingKeyPressed(evt);
            }
        });
        jLayeredPane2.add(tx_shipping, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, 120, 33));

        tx_Full_Total.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        tx_Full_Total.setForeground(new java.awt.Color(255, 51, 51));
        tx_Full_Total.setText("0.0");
        tx_Full_Total.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane2.add(tx_Full_Total, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, 130, 40));

        getContentPane().add(jLayeredPane2);
        jLayeredPane2.setBounds(700, 610, 660, 150);

        jSeparator8.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator8.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator8);
        jSeparator8.setBounds(30, 250, 1340, 10);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(850, 70, 490, 170);

        jComboBox1.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Send To Caller", "Get Invoice" }));
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(520, 620, 150, 40);

        jLabel22.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Invoice ID");
        jLabel22.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel22);
        jLabel22.setBounds(60, 70, 120, 30);

        background.setBackground(new java.awt.Color(234, 232, 232));
        background.setForeground(new java.awt.Color(255, 255, 255));
        background.setText("jLabel1");
        getContentPane().add(background);
        background.setBounds(0, 0, 1390, 770);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agent_la_home_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you sure Go to The Home ?", "Change Interface", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            home.getCallPopup().setVisible(true);
            this.dispose();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        }
    }//GEN-LAST:event_agent_la_home_imgMouseClicked

    private void agent_la_home_imgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseEntered
        u.imageMethod("/img/homeB2.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseEntered

    private void agent_la_home_imgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseExited
        u.imageMethod("/img/homeB1.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseExited

    private void login_la_cloceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseClicked
        SystemClose();
    }//GEN-LAST:event_login_la_cloceMouseClicked

    private void login_la_cloceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseEntered
        //    login_la_cloce.setBackground(Color.red);
        u.imageMethod("/img/exti.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseEntered

    private void login_la_cloceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseExited
        //    login_la_cloce.setBackground(Color.white);
        u.imageMethod("/img/exti2.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseExited

    private void login_la_miniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_login_la_miniMouseClicked

    private void login_la_miniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseEntered
        //    login_la_mini.setBackground(Color.gray);
        u.imageMethod("/img/mini2.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseEntered

    private void login_la_miniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseExited
        //    login_la_mini.setBackground(Color.white);
        u.imageMethod("/img/mini.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseExited

    private void tx_itemnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_itemnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_itemnameActionPerformed

    private void la_enterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_enterMouseClicked
       if(jComboBox1.getSelectedIndex()==1){
           printButtonIncertQuery();
       }else{
           sntToCaller();
       }
    }//GEN-LAST:event_la_enterMouseClicked

    private void la_enterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_enterMouseEntered
         u.imageMethod("/img/enter2.png", la_enter );
    }//GEN-LAST:event_la_enterMouseEntered

    private void la_enterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_enterMouseExited
       u.imageMethod("/img/enter.png", la_enter);
    }//GEN-LAST:event_la_enterMouseExited

    private void la_removeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_removeMouseEntered
       u.imageMethod("/img/removeB2.png", la_remove);
    }//GEN-LAST:event_la_removeMouseEntered

    private void la_removeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_removeMouseExited
       u.imageMethod("/img/removeB1.png", la_remove);
    }//GEN-LAST:event_la_removeMouseExited

    private void la_removeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_removeMouseClicked
      u.imageMethod("/img/removeB2", la_remove);
        DefaultTableModel dff = (DefaultTableModel) jTable_rx_item.getModel();
            int rw = jTable_rx_item.getSelectedRow();
            if (rw >= 0) {
                int x = JOptionPane.showConfirmDialog(this, "Do you want to Remove this Item ?", "Remove Item", JOptionPane.YES_NO_OPTION);
                if (JOptionPane.YES_OPTION == x) {
                    double st = Double.parseDouble(tx_bill_total.getText()) - Double.parseDouble(dff.getValueAt(rw, 3).toString());
                        tx_bill_total.setText("" + st);
                    dff.removeRow(rw);
                } else if (JOptionPane.NO_OPTION == x) {
                    setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                    tx_shortname.grabFocus();
                }
            } else {
                tx_shortname.grabFocus();
            }
    }//GEN-LAST:event_la_removeMouseClicked

    private void jComboBox_catogeryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_catogeryKeyPressed
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt,jComboBox_catogery,jComboBox_subcatogery);
            
            try{
                DBClass.getData("select iditemcatogery from itemcatogery where name='"+jComboBox_catogery.getSelectedItem().toString()+"' order by iditemcatogery");
                if(DBClass.r.next()){    
                    SearchAndListJcomboboxItemSubCatogery(DBClass.r.getInt("iditemcatogery"));
                }
            }catch(Exception e){
                systemLogger.initLogger(item.class).error("jComboBox_main_catogeryKeyPressed()  Error",e);
                 JOptionPane.showMessageDialog(null, "Error Search Item Catogery ID !!! \n " , "Error Massage", JOptionPane.ERROR_MESSAGE);
            }
             
        }
    }//GEN-LAST:event_jComboBox_catogeryKeyPressed

    private void tx_rxidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_rxidKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            seacrchCnoteItem();
         } else  if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt,tx_rxid,tx_shortname);
         } else {
            txValidateKeyEvent(evt, tx_rxid, "N", 10);
        } 
    }//GEN-LAST:event_tx_rxidKeyPressed

    private void tx_shortnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_shortnameKeyPressed
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt,tx_shortname,jComboBox_catogery);
         }else if(!tx_shortname.getText().trim().equals("")){
            searchItem();
        } else if(tx_shortname.getText().trim().equals("")){
            selectAllItem();
        } else {
            txValidateKeyEvent(evt, tx_shortname, "NA", 10);
        } 
        jComboBox_catogery.setEnabled(true);
    }//GEN-LAST:event_tx_shortnameKeyPressed

    private void jComboBox_subcatogeryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_subcatogeryKeyPressed
      if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt,jComboBox_subcatogery,tx_qty);
      }
    }//GEN-LAST:event_jComboBox_subcatogeryKeyPressed

    private void tx_qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_qtyKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
          if(!tx_shortname.getText().equals("")& !tx_qty.getText().equals("")){
              u.grabFocusMethod(evt,tx_qty,tx_shortname);
              addItemtable();
          }
         } else {
            txValidateKeyEvent(evt, tx_qty, "N", 10);
        } 
    }//GEN-LAST:event_tx_qtyKeyPressed

    private void jTable_all_itemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_all_itemsMouseClicked
       DefaultTableModel defTabMod = (DefaultTableModel) jTable_all_items.getModel();
        tx_itemname.setText(defTabMod.getValueAt(jTable_all_items.getSelectedRow(), 1).toString());
        tx_shortname.setText(defTabMod.getValueAt(jTable_all_items.getSelectedRow(), 2).toString());
        jComboBox_subcatogery.removeAllItems();
        jComboBox_subcatogery.addItem(defTabMod.getValueAt(jTable_all_items.getSelectedRow(), 3).toString());
        jComboBox_catogery.setEnabled(false);
        tx_unitprice.setText(defTabMod.getValueAt(jTable_all_items.getSelectedRow(), 4).toString());
        tx_qty.grabFocus();
    }//GEN-LAST:event_jTable_all_itemsMouseClicked

    private void user_la_newMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_newMouseClicked
        u.imageMethod("/img/newB2.png", user_la_new);
        cleareFields();
        tx_rxid.setText("");
    }//GEN-LAST:event_user_la_newMouseClicked

    private void user_la_newMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_newMouseEntered
        u.imageMethod("/img/newB2.png", user_la_new);
    }//GEN-LAST:event_user_la_newMouseEntered

    private void user_la_newMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_newMouseExited
        u.imageMethod("/img/newB.png", user_la_new);
    }//GEN-LAST:event_user_la_newMouseExited

    private void tx_bill_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_bill_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_bill_totalActionPerformed

    private void tx_disconutFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tx_disconutFocusGained
        if (tx_disconut.getText().equals("0")) {
            tx_disconut.setText("");
        }
    }//GEN-LAST:event_tx_disconutFocusGained

    private void tx_disconutFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tx_disconutFocusLost
        if (tx_disconut.getText().isEmpty()) {
            tx_disconut.setText("0");
        }
    }//GEN-LAST:event_tx_disconutFocusLost

    private void tx_disconutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_disconutKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (Double.parseDouble(tx_disconut.getText()) > 0){
                tx_netTotal.setText("" + (Double.parseDouble(tx_bill_total.getText()) - ((Double.parseDouble(tx_bill_total.getText()) * Double.parseDouble(tx_disconut.getText()) ) / 100)) );
                tx_shipping.grabFocus();
            }else{
                tx_shipping.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_disconutKeyPressed

    private void tx_shippingKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_shippingKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if ( Double.parseDouble(tx_bill_total.getText()) > 0 & Double.parseDouble(tx_shipping.getText()) >= 0 & Double.parseDouble(tx_disconut.getText())>=0 ) {
                setTotalMethod();
            } else {
                tx_disconut.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_shippingKeyPressed

    private void tx_shippingFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tx_shippingFocusGained
        if ( tx_shipping.getText().equals("0")) {
             tx_shipping.setText("");
        }
    }//GEN-LAST:event_tx_shippingFocusGained

    private void tx_shippingFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tx_shippingFocusLost
      if ( tx_shipping.getText().isEmpty()) {
             tx_shipping.setText("0");
        }
    }//GEN-LAST:event_tx_shippingFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new rx().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel agent_la_date;
    private javax.swing.JLabel agent_la_home_img;
    private javax.swing.JLabel agent_la_time;
    private javax.swing.JLabel background;
    private javax.swing.JLabel doctor_la_login_use_name;
    private javax.swing.JLabel home_la_uesr_image;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox_catogery;
    private javax.swing.JComboBox jComboBox_subcatogery;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTable jTable_all_items;
    private javax.swing.JTable jTable_rx_item;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel la_enter;
    private javax.swing.JLabel la_remove;
    private javax.swing.JLabel login_la_cloce;
    private javax.swing.JLabel login_la_mini;
    private javax.swing.JLabel tx_Full_Total;
    public static javax.swing.JTextField tx_bill_total;
    public static javax.swing.JTextField tx_disconut;
    private javax.swing.JTextField tx_itemname;
    private javax.swing.JTextField tx_netTotal;
    private javax.swing.JTextField tx_qty;
    private javax.swing.JTextField tx_rxid;
    private javax.swing.JTextField tx_shipping;
    private javax.swing.JTextField tx_shortname;
    private javax.swing.JTextField tx_unitprice;
    private javax.swing.JLabel user_la_new;
    // End of variables declaration//GEN-END:variables

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> SystemClose()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> System cloce <<<<<<<<<<<   
    void SystemClose() {
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close ?", "Close ", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            // setDefaultCloseOperation(EXIT_ON_CLOSE);
         
           vi.setVisible(true);
           invoice.selectRX_Item(Integer.parseInt(tx_rxid.getText().trim()));
            this.dispose();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
             tx_rxid.grabFocus();
        }
    }
    //>>>>>>>>> System cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  

 //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> Singltan class 
     * *** >>> Why ------------->>> ek object ekk hdnn
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> Get Instance <<<<<<<<<<<  
    private static final rx r = new rx();
 public static rx getCallPopup(invoice v) {
     vi = v;   
     return r;
    }
//>>>>>>>>> Get Instance <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> cleareFields <<<<<<<<<<<      
    private void cleareFields() {
        tx_rxid.setText(null);
        tx_itemname.setText(null);
        tx_shortname.setText(null);
        tx_unitprice.setText(null);
        tx_qty.setText(null);
        tx_itemname.setEditable(false);
        tx_unitprice.setEditable(false);
        
        jComboBox_catogery.removeAllItems();
        jComboBox_subcatogery.removeAllItems();
        idsearch_T1 = 0;
        tx_bill_total.setText("0");
        tx_disconut.setText("0");
        tx_netTotal.setText("0");
        tx_shipping.setText("0");
        tx_Full_Total.setText("0.0");
        
        jTextArea1.setText("");
        jTable_rx_item.removeAll();
        SearchAndListJcomboboxItemCatogery();
        selectAllItem();
        tx_rxid.grabFocus();
    }
//>>>>>>>>> cleareFields <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> SearchAndListJcomboboxItemCatogery <<<<<<<<<<<     
     private void SearchAndListJcomboboxItemCatogery() {
        try {
            jComboBox_catogery.removeAllItems();
            DBClass.getData("select name from itemcatogery where status='1' order by iditemcatogery");
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                   jComboBox_catogery.addItem(DBClass.r.getString("name"));
                    
                }
            }
        } catch (Exception e) {
            systemLogger.initLogger(item.class).error("SearchAndListJcomboboxItemCatogery()  Error",e);
            JOptionPane.showMessageDialog(null, "Error CatogeryTablesearch !!! \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> SearchAndListJcomboboxItemCatogery <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> SearchAndListJcomboboxItemSubCatogery <<<<<<<<<<<     
    private void SearchAndListJcomboboxItemSubCatogery(int Catogery) {
        try {
            jComboBox_subcatogery.removeAllItems();
            DBClass.getData("select terms from itemsubcatogery where iditemcatogery='"+Catogery+"' and status='1' order by iditemsubcatogery");
            
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    jComboBox_subcatogery.addItem(DBClass.r.getString("terms"));
                }
            } 
        } catch (Exception e) {
             systemLogger.initLogger(item.class).error("SearchAndListJcomboboxItemSubCatogery()  Error",e);
            JOptionPane.showMessageDialog(null, "Error ItemSubCatogeryTablesearch !!! \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> SearchAndListJcomboboxItemSubCatogery <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
  //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> addItemtable <<<<<<<<<<<      
    private void addItemtable() {
       DefaultTableModel defTabModPen = (DefaultTableModel) jTable_rx_item.getModel();
       Vector v = new Vector();
                    v.add(tx_itemname.getText());
                    v.add(tx_unitprice.getText());
                    v.add(tx_qty.getText());
                    v.add(Double.parseDouble(tx_unitprice.getText())*Double.parseDouble(tx_qty.getText()));
                    v.add(jComboBox_subcatogery.getSelectedItem().toString());
                    defTabModPen.addRow(v);
                    tx_itemname.setText("");
                    tx_unitprice.setText("");
                    tx_shortname.setText("");
                    tx_qty.setText("");
                    jComboBox_subcatogery.removeAllItems();
                    jComboBox_catogery.setSelectedIndex(0);
                    tx_shortname.grabFocus();
                    selectAllItem();
                    double st = 0;
        for (int x = 0; x < jTable_rx_item.getRowCount(); x++) {
            st += Double.parseDouble(defTabModPen.getValueAt(x, 3).toString());
        }
        tx_bill_total.setText("" + st);
    }
//>>>>>>>>> addItemtable <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> selectAllItem <<<<<<<<<<<      
    private void selectAllItem() {
        try {
             DefaultTableModel defTabMod = (DefaultTableModel) jTable_all_items.getModel();
             defTabMod.getDataVector().removeAllElements();
          //  ResultSet rs = DBClass.getData("select * from supplier where idsupplier  ='" + tx_doctor_id.getText() + "' order by iddoctor");
          DBClass.getData("select it.iditemsubcatogery,it.barcode,it.itemname,it.shortname,it.supplier,it.sellprice,su.terms from "
                  + " item it , itemsubcatogery su where it.iditemsubcatogery = su.iditemsubcatogery  order by iditem");
          
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                     Vector v = new Vector();
                    v.add(DBClass.r.getString("it.barcode"));
                    v.add(DBClass.r.getString("it.itemname"));
                    v.add(DBClass.r.getString("it.shortname"));
                    v.add(DBClass.r.getString("su.terms"));
                    v.add(DBClass.r.getString("it.sellprice"));
                    v.add(DBClass.r.getString("it.supplier"));
                   defTabMod.addRow(v);
                }
            }
            tx_shortname.grabFocus();
        } catch (Exception ex) {
               systemLogger.initLogger(rx.class).error("selectAllItem()  Error",ex);
 JOptionPane.showMessageDialog(null, "Error SelectselectAllItem !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
 tx_qty.grabFocus();
     }
    }
    //>>>>>>>>> selectAllItem <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> searchItem <<<<<<<<<<<      
    private void searchItem() {
        try {
             DefaultTableModel defTabMod = (DefaultTableModel) jTable_all_items.getModel();
             defTabMod.getDataVector().removeAllElements();
          //  ResultSet rs = DBClass.getData("select * from supplier where idsupplier  ='" + tx_doctor_id.getText() + "' order by iddoctor");
          DBClass.getData("select it.iditemsubcatogery,it.barcode,it.itemname,it.shortname,it.supplier,it.sellprice,su.terms from "
                  + " item it , itemsubcatogery su where it.shortname like '" + tx_shortname.getText() + "%' and  it.iditemsubcatogery = su.iditemsubcatogery  order by iditem");
           
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    Vector v = new Vector();
                    v.add(DBClass.r.getString("it.barcode"));
                    v.add(DBClass.r.getString("it.itemname"));
                    v.add(DBClass.r.getString("it.shortname"));
                    v.add(DBClass.r.getString("su.terms"));
                    v.add(DBClass.r.getString("it.sellprice"));
                    v.add(DBClass.r.getString("it.supplier"));
                   defTabMod.addRow(v);
                }
            }else{
                jTable_all_items.removeAll();
                 tx_shortname.grabFocus();
            }
          tx_qty.grabFocus();   
        } catch (Exception ex) {
            systemLogger.initLogger(rx.class).error("searchItem()  Error",ex);
 JOptionPane.showMessageDialog(null, "Error Search Item !!! \n searchItem() \n" , "Error Massage", JOptionPane.ERROR_MESSAGE);
 tx_qty.grabFocus();
       }
    }
    //>>>>>>>>> searchItem <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> txValidateKeyEvent()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<      
    private void txValidateKeyEvent(KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld) {
        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenthNeedFeld) {
            
            if (txType.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
          
            if (txType.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }
        
    }
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   
 //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> printButtonIncertQuery <<<<<<<<<<<
private boolean printButtonIncertQuery() {
        int x = JOptionPane.showConfirmDialog(this, "Want To Add This RX", "Add RX", JOptionPane.YES_NO_OPTION);
  if (JOptionPane.YES_OPTION == x) {
     try {
      double d1=0;String t = "now";
      java.sql.Date date = new java.sql.Date(new Date().getTime());
        DBClass.putData("insert into invoicerx (rx_idrx,date,time,total,discount,nettotal,shippingcost,fullamount,status) values("
                    + "'" +  Integer.parseInt(tx_rxid.getText().trim()) + "','"+date+"','" + t+ "'"
                    + ",'" + d1 + "','" + d1 + "','"+d1+"','" + d1 + "','" + d1 + "','1' )");
            DefaultTableModel dtm;
         
            dtm = (DefaultTableModel) jTable_rx_item.getModel();
           for (int row = 0; row < dtm.getRowCount(); row++) {
            String name = dtm.getValueAt(row, 0).toString();   
            double unitprice = Double.parseDouble(dtm.getValueAt(row, 1).toString());
            double qty = Double.parseDouble(dtm.getValueAt(row, 2).toString());
            double total = Double.parseDouble(dtm.getValueAt(row, 3).toString());
            String terms = dtm.getValueAt(row, 4).toString();   
            DBClass.putData("insert into rxitem (rx_idrx,itemname,unitprice,qty,total,terms) values("
                    + "'" +  Integer.parseInt(tx_rxid.getText().trim()) + "','" + name + "', '" + unitprice + "'"
                    + ",'" + qty + "','" + total + "','"+terms+"' )");
           }
           dtm.setRowCount(0);
            return true;
                    
    } catch (Exception e) {
        systemLogger.initLogger(rx.class).error("printButtonIncertQuery()  Error",e);
    JOptionPane.showMessageDialog(null, " Error printButtonIncertQuery!!! \n ", "Error", JOptionPane.ERROR_MESSAGE);
    return false;
    }
     
    }else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
             tx_rxid.grabFocus();
            return false;
     } else {
            return false;
     }

    }
//>>>>>>>>> printButtonIncertQuery <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
   //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> senToCaller <<<<<<<<<<<
private boolean sntToCaller() {
        int x = JOptionPane.showConfirmDialog(this, "Want To Add This RX", "Add RX", JOptionPane.YES_NO_OPTION);
  if (JOptionPane.YES_OPTION == x) {
     try {
      double d1=0;String t = "now";
      java.sql.Date date = new java.sql.Date(new Date().getTime());
        DBClass.putData("insert into cnote (rx_idrx,statusu) values('" +  Integer.parseInt(tx_rxid.getText().trim()) + "','1' )");
            DefaultTableModel dtm = (DefaultTableModel) jTable_rx_item.getModel();
           for (int row = 0; row < dtm.getRowCount(); row++) {
            String name = dtm.getValueAt(row, 0).toString();   
            double unitprice = Double.parseDouble(dtm.getValueAt(row, 1).toString());
            double qty = Double.parseDouble(dtm.getValueAt(row, 2).toString());
            double total = Double.parseDouble(dtm.getValueAt(row, 3).toString());
            String terms = dtm.getValueAt(row, 4).toString();   
            DBClass.putData("insert into cnoteitem (rx_idrx,itemname,unitprice,qty,total,term) values("
                    + "'" +  Integer.parseInt(tx_rxid.getText().trim()) + "','" + name + "', '" + unitprice + "'"
                    + ",'" + qty + "','" + total + "','"+terms+"' )");
           }
           dtm.setRowCount(0);
            return true;
                    
    } catch (Exception e) {
        systemLogger.initLogger(rx.class).error("sntToCaller()  Error",e);
    JOptionPane.showMessageDialog(null, " Error senToCaller!!! \n ", "Error", JOptionPane.ERROR_MESSAGE);
    return false;
    }
     
    }else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            tx_rxid.grabFocus();
            return false;
     } else {
            return false;
     }

    }
//>>>>>>>>> sntToCaller <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    
    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> seacrchCnoteItem <<<<<<<<<<<      
    private void seacrchCnoteItem() {
        try {
                DefaultTableModel defTabMod = (DefaultTableModel) jTable_rx_item.getModel();
                defTabMod.getDataVector().removeAllElements();
                DBClass.getData("select ci.itemname from cnoteitem,ci.unitprice,ci.qty,ci.total,ci.term,c.cnote from cnoteitem ci ,cnote c   where ci.rx_idrx='" + Integer.parseInt(tx_rxid.getText()) + "' c.rx_idrx=ci.rx_idrx  order by ci.rx_idrx");
                if (DBClass.r.isBeforeFirst() == true) {
                    jTextArea1.setText(DBClass.r.getString("c.cnote"));
                    while (DBClass.r.next()) {
                        Vector v = new Vector();
                        v.add(DBClass.r.getString("ci.itemname"));
                        v.add(DBClass.r.getString("ci.unitprice"));
                        v.add(DBClass.r.getString("ci.qty"));
                        v.add(DBClass.r.getString("ci.total"));
                        v.add(DBClass.r.getString("ci.term"));
                        defTabMod.addRow(v);
                    }
                    double st = 0;
                    for (int x = 0; x < jTable_rx_item.getRowCount(); x++) {
                        st += Double.parseDouble(defTabMod.getValueAt(x, 4).toString());
                    }
                    tx_bill_total.setText("" + st);
                    tx_disconut.grabFocus();
                }

            } catch (Exception ex) {
                systemLogger.initLogger(rx.class).error("seacrchCnoteItem()  Error", ex);
                JOptionPane.showMessageDialog(null, "Error seacrchCnoteItem !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
                tx_disconut.grabFocus();
            }
    }
    //>>>>>>>>> seacrchCnoteItem <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
////---------########---------*********************---------########---------*********************---------########---------\\ 
////---------########---------*********************---------########---------*********************---------########---------\\    
////---------########---------*********************---------########---------*********************---------########---------\\ 
//    /* *** >>> Date ------------>>> 
//     * *** >>> What ------------>>>  
//     * *** >>> Why ------------->>> 
//     * *** >>> Parameters ------>>>
//     * *** >>> Status ---------->>>
//     */
////>>>>>>>>> select_OtherProduct_conform_details <<<<<<<<<<<      
//    private void select_OtherProduct_conform_details(int id) {
//        try {
//          //  ResultSet rs = DBClass.getData("select * from supplier where idsupplier  ='" + tx_doctor_id.getText() + "' order by iddoctor");
//          DBClass.getData("select * from otherproduct where idotherproduct='"+id+"' order by idotherproduct");
//           
//            if (DBClass.r.isBeforeFirst() == true) {
//                while (DBClass.r.next()) {                   
//                    
//                    if (DBClass.r.getInt("payment_type") == 1) {
//                        jComboBox_paymentMethod.setSelectedIndex(1);//Payed
//                    } else {
//                        jComboBox_paymentMethod.setSelectedIndex(1);//COD
//                    }
//                    tx_billto.setText(DBClass.r.getString("billto"));
//                    tx_b_tell.setText(DBClass.r.getString("bnumber"));
//                    tx_b_address.setText(DBClass.r.getString("baddress"));
//                    tx_deliverto.setText(DBClass.r.getString("deliverto"));
//                    tx_d_tell.setText(DBClass.r.getString("dnumber"));
//                    tx_d_address.setText(DBClass.r.getString("daddress"));
//                }
//            }
//            tx_barcode.grabFocus();
//        } catch (Exception ex) {
//            tx_invoiceid.grabFocus();
// JOptionPane.showMessageDialog(null, "Error Selectselect_OtherProduct_Conform_Details !!! \n select_OtherProduct_conform_details() \n" + ex, "Error Massage", JOptionPane.ERROR_MESSAGE);
//     }
//    }
//    //>>>>>>>>> select_OtherProduct_conform_details <<<<<<<<<<<         
//
////---------########---------*********************---------########---------*********************---------########---------\\ 
////---------########---------*********************---------########---------*********************---------########---------\\    
////---------########---------*********************---------########---------*********************---------########---------\\    

  //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> setTotalMethod <<<<<<<<<<<
    private void setTotalMethod() {
        double sut1 = Double.parseDouble(tx_netTotal.getText());
        double ship = Double.parseDouble(tx_shipping.getText());
        if (Double.parseDouble(tx_disconut.getText())>0) {
            double voucher = Double.parseDouble(tx_disconut.getText());
            double x = (Double.parseDouble(tx_bill_total.getText()) * voucher) / 100;
                tx_netTotal.setText("" + (sut1 - x));
                tx_Full_Total.setText("" + (sut1 - x + ship));
        } else {
            tx_netTotal.setText("" + (sut1 + ship));
            tx_Full_Total.setText("" + (sut1 + ship));
        }
    }
//>>>>>>>>> setTotalMethod <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
 
 
 
 
 
 
 
 
 
 
 ///////////////////////////////////////////////////////----------------------------------------------------------------------------
    private Image IconImage(int w, int h, Image img) {
        BufferedImage buf = new BufferedImage(w,h,BufferedImage.TYPE_INT_ARGB);
        Graphics2D  grf = buf.createGraphics();
        grf.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        grf.drawImage(img,0,0,w,h,null);
        grf.dispose();
        return buf;
    }



}
