/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;

/**
 *
 * @author CHETHANA
 */
public class invoice extends javax.swing.JFrame {

    UniversalMethod u = new UniversalMethod();
    public static int RN = 0;
    public static int idsearch_T1;
    public static String t1;

    /**
     * Creates new form invoice
     */
    public invoice() {
        initComponents();
        systemLogger.initLogger(invoice.class).info("Open Invoice Frame");
        u.imageMethod(background, home_la_uesr_image, doctor_la_login_use_name, agent_la_home_img, login_la_mini, login_la_cloce);
        cleareFields();
        UniversalMethod.TimeMethod(agent_la_date, agent_la_time);
        u.imageMethod("/img/print11.png", la_print);
        u.imageMethod("/img/printlast11.png", la_Last_Invoice_ID_print);
        u.imageMethod("/img/ri1.png", la_set_item);
        doctor_la_login_use_name.setText(UniversalMethod.getLogUser());
        u.imageMethod("/img/newB.png", user_la_new);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agent_la_date = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        agent_la_time = new javax.swing.JLabel();
        home_la_uesr_image = new javax.swing.JLabel();
        doctor_la_login_use_name = new javax.swing.JLabel();
        agent_la_home_img = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        login_la_cloce = new javax.swing.JLabel();
        login_la_mini = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        la_print = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_rxitem = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        tx_bill_total = new javax.swing.JTextField();
        tx_disconut = new javax.swing.JTextField();
        tx_netTotal = new javax.swing.JTextField();
        tx_shipping = new javax.swing.JTextField();
        tx_Full_Total = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        tx_iddoctor = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_conform = new javax.swing.JTable();
        jSeparator10 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel37 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        la_Last_Invoice_ID = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        la_Last_Invoice_ID_print = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        tx_idrep = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        jSeparator12 = new javax.swing.JSeparator();
        tx_invoiceid = new javax.swing.JTextField();
        jComboBox_paymentMethod = new javax.swing.JComboBox();
        tx_billto = new javax.swing.JTextField();
        tx_b_address = new javax.swing.JTextField();
        tx_b_tell = new javax.swing.JTextField();
        tx_deliverto = new javax.swing.JTextField();
        tx_d_address = new javax.swing.JTextField();
        tx_d_tell = new javax.swing.JTextField();
        la_set_item = new javax.swing.JLabel();
        user_la_new = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1376, 768));
        setUndecorated(true);
        getContentPane().setLayout(null);

        agent_la_date.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_date.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_date.setText("Invoice");
        agent_la_date.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_date);
        agent_la_date.setBounds(10, 5, 130, 35);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(280, 5, 20, 30);

        agent_la_time.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_time.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_time.setText("Invoice");
        agent_la_time.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_time);
        agent_la_time.setBounds(150, 5, 130, 35);

        home_la_uesr_image.setText("userlogo");
        getContentPane().add(home_la_uesr_image);
        home_la_uesr_image.setBounds(290, 10, 30, 30);

        doctor_la_login_use_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        doctor_la_login_use_name.setForeground(new java.awt.Color(255, 255, 255));
        doctor_la_login_use_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        doctor_la_login_use_name.setText("Invoice");
        getContentPane().add(doctor_la_login_use_name);
        doctor_la_login_use_name.setBounds(330, 5, 260, 35);

        agent_la_home_img.setText("jLabel1");
        agent_la_home_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseExited(evt);
            }
        });
        getContentPane().add(agent_la_home_img);
        agent_la_home_img.setBounds(600, 5, 80, 30);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(580, 5, 20, 30);

        jLabel1.setBackground(new java.awt.Color(51, 204, 255));
        jLabel1.setFont(new java.awt.Font("Eras Bold ITC", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("INVOICE RX");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(760, 1, 330, 40);

        login_la_cloce.setBackground(new java.awt.Color(255, 255, 255));
        login_la_cloce.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_cloce.setForeground(new java.awt.Color(0, 0, 0));
        login_la_cloce.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_cloce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseExited(evt);
            }
        });
        getContentPane().add(login_la_cloce);
        login_la_cloce.setBounds(1330, 10, 30, 30);

        login_la_mini.setBackground(new java.awt.Color(255, 255, 255));
        login_la_mini.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_mini.setForeground(new java.awt.Color(0, 0, 0));
        login_la_mini.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_miniMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_miniMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_miniMouseExited(evt);
            }
        });
        getContentPane().add(login_la_mini);
        login_la_mini.setBounds(1295, 10, 30, 30);

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator5);
        jSeparator5.setBounds(0, 40, 1370, 10);

        la_print.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        la_print.setForeground(new java.awt.Color(0, 0, 0));
        la_print.setText("Branch Name");
        la_print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_printMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_printMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_printMouseExited(evt);
            }
        });
        la_print.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                la_printKeyPressed(evt);
            }
        });
        getContentPane().add(la_print);
        la_print.setBounds(1180, 660, 160, 60);

        jTable_rxitem.setBackground(new java.awt.Color(255, 255, 255));
        jTable_rxitem.setForeground(new java.awt.Color(0, 0, 0));
        jTable_rxitem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Type", "Unit Price", "Qty", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_rxitem);
        if (jTable_rxitem.getColumnModel().getColumnCount() > 0) {
            jTable_rxitem.getColumnModel().getColumn(0).setMinWidth(150);
            jTable_rxitem.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTable_rxitem.getColumnModel().getColumn(0).setMaxWidth(150);
            jTable_rxitem.getColumnModel().getColumn(2).setMinWidth(70);
            jTable_rxitem.getColumnModel().getColumn(2).setPreferredWidth(70);
            jTable_rxitem.getColumnModel().getColumn(2).setMaxWidth(70);
            jTable_rxitem.getColumnModel().getColumn(3).setMinWidth(50);
            jTable_rxitem.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTable_rxitem.getColumnModel().getColumn(3).setMaxWidth(50);
            jTable_rxitem.getColumnModel().getColumn(4).setMinWidth(70);
            jTable_rxitem.getColumnModel().getColumn(4).setPreferredWidth(70);
            jTable_rxitem.getColumnModel().getColumn(4).setMaxWidth(70);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 480, 460, 280);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("RX ID");
        jLabel4.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel4);
        jLabel4.setBounds(220, 60, 70, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(":");
        jLabel5.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel5);
        jLabel5.setBounds(310, 60, 20, 30);

        jSeparator6.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator6.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator6);
        jSeparator6.setBounds(10, 180, 1370, 10);

        jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Doctor ID");
        jLabel14.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel14);
        jLabel14.setBounds(220, 100, 90, 30);

        jLabel15.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText(":");
        jLabel15.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel15);
        jLabel15.setBounds(310, 100, 30, 30);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText(":");
        jLabel16.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel16);
        jLabel16.setBounds(630, 60, 30, 30);

        jLabel17.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Payment Method");
        jLabel17.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel17);
        jLabel17.setBounds(480, 60, 150, 30);

        jLayeredPane1.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Discount");
        jLabel8.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 70, 120, 30));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText(":");
        jLabel7.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 70, 30, 30));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Net Total");
        jLabel10.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 118, 120, 30));

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText(":");
        jLabel11.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 118, 30, 30));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Shiping Cost");
        jLabel9.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 172, 120, 30));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText(":");
        jLabel6.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 23, 30, 30));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Total");
        jLabel12.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 23, 120, 30));

        jLabel13.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText(":");
        jLabel13.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 169, 30, 30));

        jLabel30.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Total Amount");
        jLabel30.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 220, 120, 30));

        jLabel31.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText(":");
        jLabel31.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 220, 30, 30));

        tx_bill_total.setBackground(new java.awt.Color(255, 255, 255));
        tx_bill_total.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_bill_total.setForeground(new java.awt.Color(102, 0, 102));
        tx_bill_total.setText("0");
        tx_bill_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_bill_totalActionPerformed(evt);
            }
        });
        jLayeredPane1.add(tx_bill_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 190, 33));

        tx_disconut.setBackground(new java.awt.Color(255, 255, 255));
        tx_disconut.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_disconut.setForeground(new java.awt.Color(0, 0, 0));
        tx_disconut.setText("0");
        tx_disconut.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tx_disconutFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tx_disconutFocusLost(evt);
            }
        });
        tx_disconut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_disconutKeyPressed(evt);
            }
        });
        jLayeredPane1.add(tx_disconut, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 190, 33));

        tx_netTotal.setBackground(new java.awt.Color(255, 255, 255));
        tx_netTotal.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_netTotal.setForeground(new java.awt.Color(0, 0, 0));
        tx_netTotal.setText("0");
        jLayeredPane1.add(tx_netTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 190, 33));

        tx_shipping.setBackground(new java.awt.Color(255, 255, 255));
        tx_shipping.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_shipping.setForeground(new java.awt.Color(0, 0, 0));
        tx_shipping.setText("0");
        tx_shipping.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_shippingKeyPressed(evt);
            }
        });
        jLayeredPane1.add(tx_shipping, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 190, 33));

        tx_Full_Total.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        tx_Full_Total.setForeground(new java.awt.Color(255, 51, 51));
        tx_Full_Total.setText("0.0");
        tx_Full_Total.setBorder(new javax.swing.border.MatteBorder(null));
        jLayeredPane1.add(tx_Full_Total, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 190, 70));

        getContentPane().add(jLayeredPane1);
        jLayeredPane1.setBounds(630, 470, 390, 290);

        jLabel18.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Bill To ");
        jLabel18.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel18);
        jLabel18.setBounds(40, 330, 160, 30);

        jLabel19.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText(":");
        jLabel19.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel19);
        jLabel19.setBounds(200, 330, 30, 30);

        jLabel20.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Address");
        jLabel20.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel20);
        jLabel20.setBounds(40, 370, 160, 30);

        jLabel21.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText(":");
        jLabel21.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel21);
        jLabel21.setBounds(200, 370, 30, 30);

        jLabel22.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Contact Number ");
        jLabel22.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel22);
        jLabel22.setBounds(40, 410, 160, 30);

        jLabel23.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText(":");
        jLabel23.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel23);
        jLabel23.setBounds(200, 410, 30, 30);

        jLabel24.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Bill To ");
        jLabel24.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel24);
        jLabel24.setBounds(40, 200, 160, 30);

        jLabel25.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Address");
        jLabel25.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel25);
        jLabel25.setBounds(40, 240, 160, 30);

        jLabel26.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Contact Number ");
        jLabel26.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel26);
        jLabel26.setBounds(40, 280, 160, 30);

        jLabel27.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText(":");
        jLabel27.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel27);
        jLabel27.setBounds(200, 280, 30, 30);

        jLabel28.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText(":");
        jLabel28.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel28);
        jLabel28.setBounds(200, 240, 30, 30);

        jLabel29.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText(":");
        jLabel29.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel29);
        jLabel29.setBounds(200, 200, 30, 30);

        jSeparator7.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator7.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator7);
        jSeparator7.setBounds(10, 450, 1370, 10);

        jSeparator8.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator8.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator8);
        jSeparator8.setBounds(10, 320, 1370, 10);

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(140, 5, 20, 30);

        tx_iddoctor.setBackground(new java.awt.Color(255, 255, 255));
        tx_iddoctor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_iddoctor.setForeground(new java.awt.Color(0, 0, 0));
        tx_iddoctor.setText("jTextField1");
        getContentPane().add(tx_iddoctor);
        tx_iddoctor.setBounds(320, 100, 150, 33);

        jTable_conform.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_conform.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_conformMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_conform);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(30, 50, 180, 120);

        jSeparator10.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator10.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator10.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator10);
        jSeparator10.setBounds(860, 60, 20, 90);

        jSeparator11.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator11.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator11.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator11);
        jSeparator11.setBounds(870, 60, 20, 90);

        jLabel37.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Invoice ID");
        jLabel37.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel37);
        jLabel37.setBounds(920, 90, 90, 30);

        jLabel47.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText(":");
        jLabel47.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel47);
        jLabel47.setBounds(1010, 90, 30, 30);

        la_Last_Invoice_ID.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        la_Last_Invoice_ID.setForeground(new java.awt.Color(255, 255, 255));
        la_Last_Invoice_ID.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(la_Last_Invoice_ID);
        la_Last_Invoice_ID.setBounds(1040, 90, 120, 30);

        jLabel32.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Last Invoice");
        jLabel32.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel32);
        jLabel32.setBounds(920, 50, 120, 30);

        la_Last_Invoice_ID_print.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        la_Last_Invoice_ID_print.setForeground(new java.awt.Color(255, 255, 255));
        la_Last_Invoice_ID_print.setText("Print Last");
        la_Last_Invoice_ID_print.setBorder(new javax.swing.border.MatteBorder(null));
        la_Last_Invoice_ID_print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_Last_Invoice_ID_printMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_Last_Invoice_ID_printMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_Last_Invoice_ID_printMouseExited(evt);
            }
        });
        getContentPane().add(la_Last_Invoice_ID_print);
        la_Last_Invoice_ID_print.setBounds(1160, 130, 140, 40);

        jLabel33.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Rep ID");
        jLabel33.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel33);
        jLabel33.setBounds(220, 140, 90, 30);

        jLabel34.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText(":");
        jLabel34.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel34);
        jLabel34.setBounds(310, 140, 30, 30);

        tx_idrep.setBackground(new java.awt.Color(255, 255, 255));
        tx_idrep.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_idrep.setForeground(new java.awt.Color(0, 0, 0));
        tx_idrep.setText("jTextField1");
        getContentPane().add(tx_idrep);
        tx_idrep.setBounds(320, 140, 150, 33);

        jSeparator9.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator9.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator9.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator9);
        jSeparator9.setBounds(1070, 470, 20, 280);

        jSeparator12.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator12.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator12.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator12);
        jSeparator12.setBounds(580, 470, 20, 280);

        tx_invoiceid.setBackground(new java.awt.Color(255, 255, 255));
        tx_invoiceid.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_invoiceid.setForeground(new java.awt.Color(0, 0, 0));
        tx_invoiceid.setText("jTextField1");
        tx_invoiceid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_invoiceidKeyPressed(evt);
            }
        });
        getContentPane().add(tx_invoiceid);
        tx_invoiceid.setBounds(320, 60, 150, 33);

        jComboBox_paymentMethod.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_paymentMethod.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_paymentMethod.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_paymentMethod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "COD", "Payed" }));
        getContentPane().add(jComboBox_paymentMethod);
        jComboBox_paymentMethod.setBounds(650, 60, 130, 35);

        tx_billto.setBackground(new java.awt.Color(255, 255, 255));
        tx_billto.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_billto.setForeground(new java.awt.Color(0, 0, 0));
        tx_billto.setText("jTextField1");
        tx_billto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_billtoKeyPressed(evt);
            }
        });
        getContentPane().add(tx_billto);
        tx_billto.setBounds(220, 200, 830, 33);

        tx_b_address.setBackground(new java.awt.Color(255, 255, 255));
        tx_b_address.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_b_address.setForeground(new java.awt.Color(0, 0, 0));
        tx_b_address.setText("jTextField1");
        getContentPane().add(tx_b_address);
        tx_b_address.setBounds(220, 240, 1050, 33);

        tx_b_tell.setBackground(new java.awt.Color(255, 255, 255));
        tx_b_tell.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_b_tell.setForeground(new java.awt.Color(0, 0, 0));
        tx_b_tell.setText("jTextField1");
        getContentPane().add(tx_b_tell);
        tx_b_tell.setBounds(220, 280, 530, 33);

        tx_deliverto.setBackground(new java.awt.Color(255, 255, 255));
        tx_deliverto.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_deliverto.setForeground(new java.awt.Color(0, 0, 0));
        tx_deliverto.setText("jTextField1");
        getContentPane().add(tx_deliverto);
        tx_deliverto.setBounds(220, 330, 830, 33);

        tx_d_address.setBackground(new java.awt.Color(255, 255, 255));
        tx_d_address.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_d_address.setForeground(new java.awt.Color(0, 0, 0));
        tx_d_address.setText("jTextField1");
        getContentPane().add(tx_d_address);
        tx_d_address.setBounds(220, 370, 1050, 33);

        tx_d_tell.setBackground(new java.awt.Color(255, 255, 255));
        tx_d_tell.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_d_tell.setForeground(new java.awt.Color(0, 0, 0));
        tx_d_tell.setText("jTextField1");
        tx_d_tell.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_d_tellKeyPressed(evt);
            }
        });
        getContentPane().add(tx_d_tell);
        tx_d_tell.setBounds(220, 410, 530, 33);

        la_set_item.setText("jLabel2");
        la_set_item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_set_itemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_set_itemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_set_itemMouseExited(evt);
            }
        });
        getContentPane().add(la_set_item);
        la_set_item.setBounds(640, 120, 140, 40);

        user_la_new.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        user_la_new.setForeground(new java.awt.Color(0, 0, 0));
        user_la_new.setText("New");
        user_la_new.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_la_newMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                user_la_newMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                user_la_newMouseExited(evt);
            }
        });
        getContentPane().add(user_la_new);
        user_la_new.setBounds(1170, 570, 110, 40);

        background.setBackground(new java.awt.Color(234, 232, 232));
        background.setForeground(new java.awt.Color(255, 255, 255));
        background.setText("jLabel1");
        getContentPane().add(background);
        background.setBounds(0, 0, 1390, 770);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agent_la_home_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseClicked
        u.imageMethod("/img/homeB1.png", agent_la_home_img);
        if (UniversalMethod.getuserType().equals("Admin") | UniversalMethod.getuserType().equals("Maneger")) {
            int x = JOptionPane.showConfirmDialog(this, "Do you sure Go to The Home ?", "Change Interface", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == x) {
                home.getCallPopup().setVisible(true);
                this.dispose();
            } else if (JOptionPane.NO_OPTION == x) {
                setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                tx_invoiceid.grabFocus();
            }
        } else if (UniversalMethod.getuserType().equals("Caller") | UniversalMethod.getuserType().equals("Stock Keeper") | UniversalMethod.getuserType().equals("User")) {
            int x = JOptionPane.showConfirmDialog(this, "Do you sure Go to The Home ?", "Change Interface", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == x) {
                home_user.getCallPopup().setVisible(true);
                this.dispose();
            } else if (JOptionPane.NO_OPTION == x) {
                setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                tx_invoiceid.grabFocus();
            }
        }
    }//GEN-LAST:event_agent_la_home_imgMouseClicked

    private void agent_la_home_imgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseEntered
        u.imageMethod("/img/homeB2.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseEntered

    private void agent_la_home_imgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseExited
        u.imageMethod("/img/homeB1.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseExited

    private void login_la_cloceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseClicked
        SystemClose();
    }//GEN-LAST:event_login_la_cloceMouseClicked

    private void login_la_cloceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseEntered
        //    login_la_cloce.setBackground(Color.red);
        u.imageMethod("/img/exti.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseEntered

    private void login_la_cloceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseExited
        //    login_la_cloce.setBackground(Color.white);
        u.imageMethod("/img/exti2.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseExited

    private void login_la_miniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_login_la_miniMouseClicked

    private void login_la_miniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseEntered
        //    login_la_mini.setBackground(Color.gray);
        u.imageMethod("/img/mini2.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseEntered

    private void login_la_miniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseExited
        //    login_la_mini.setBackground(Color.white);
        u.imageMethod("/img/mini.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseExited

    private void la_printMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_printMouseEntered
        u.imageMethod("/img/print22.png", la_print);
    }//GEN-LAST:event_la_printMouseEntered

    private void la_printMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_printMouseExited
        u.imageMethod("/img/print11.png", la_print);
    }//GEN-LAST:event_la_printMouseExited

    private void jTable_conformMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_conformMouseClicked
        DefaultTableModel defTabMod = (DefaultTableModel) jTable_conform.getModel();
        idsearch_T1 = Integer.parseInt(defTabMod.getValueAt(jTable_conform.getSelectedRow(), 0).toString());
        select_RX_conform_details(idsearch_T1);
    }//GEN-LAST:event_jTable_conformMouseClicked

    private void la_Last_Invoice_ID_printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_Last_Invoice_ID_printMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you sure Print last Invoice ?", "Print Last Invoice ", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            u.imageMethod("/img/printlast11.png", la_Last_Invoice_ID_print);
            t1 = agent_la_time.getText().replace(":", "-");
            printInvoiceLast(Integer.parseInt(la_Last_Invoice_ID.getText()));
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            tx_invoiceid.grabFocus();
        }
    }//GEN-LAST:event_la_Last_Invoice_ID_printMouseClicked

    private void tx_bill_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_bill_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_bill_totalActionPerformed

    private void tx_disconutFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tx_disconutFocusGained
        if (tx_disconut.getText().equals("0")) {
            tx_disconut.setText("");
        }
    }//GEN-LAST:event_tx_disconutFocusGained

    private void tx_disconutFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tx_disconutFocusLost
        if (tx_disconut.getText().isEmpty()) {
            tx_disconut.setText("0");
        }
    }//GEN-LAST:event_tx_disconutFocusLost

    private void tx_disconutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_disconutKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (Double.parseDouble(tx_disconut.getText()) > 0) {
                tx_netTotal.setText("" + (Double.parseDouble(tx_bill_total.getText()) - ((Double.parseDouble(tx_bill_total.getText()) * Double.parseDouble(tx_disconut.getText())) / 100)));
                tx_shipping.grabFocus();
            } else {
                tx_shipping.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_disconutKeyPressed

    private void tx_shippingKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_shippingKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (Double.parseDouble(tx_bill_total.getText()) > 0 & Double.parseDouble(tx_shipping.getText()) >= 0 & Double.parseDouble(tx_disconut.getText()) >= 0) {
                setTotalMethod();
                la_print.setVisible(true);
                la_print.grabFocus();
            } else {
                tx_disconut.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_shippingKeyPressed

    private void la_printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_printMouseClicked
        u.imageMethod("/img/print11.png", la_print);
        if (printButtonIncertQuery() == true) {
            t1 = agent_la_time.getText().replace(":", "-");
            printInvoice();
            cleareFields();
            lastNumber();
            this.setState(JFrame.ICONIFIED);
        } else {
            tx_invoiceid.grabFocus();
        }
    }//GEN-LAST:event_la_printMouseClicked

    private void la_printKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_la_printKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.imageMethod("/img/print11.png", la_print);
            if (printButtonIncertQuery() == true) {
                t1 = agent_la_time.getText().replace(":", "-");
                printInvoice();
                cleareFields();
                lastNumber();
                this.setState(JFrame.ICONIFIED);
            } else {
                tx_invoiceid.grabFocus();
            }
        }
    }//GEN-LAST:event_la_printKeyPressed

    private void tx_invoiceidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_invoiceidKeyPressed

    }//GEN-LAST:event_tx_invoiceidKeyPressed

    private void tx_billtoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_billtoKeyPressed

    }//GEN-LAST:event_tx_billtoKeyPressed

    private void la_Last_Invoice_ID_printMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_Last_Invoice_ID_printMouseExited
        u.imageMethod("/img/printlast11.png", la_Last_Invoice_ID_print);
    }//GEN-LAST:event_la_Last_Invoice_ID_printMouseExited

    private void la_Last_Invoice_ID_printMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_Last_Invoice_ID_printMouseEntered
        u.imageMethod("/img/printlast22.png", la_Last_Invoice_ID_print);
    }//GEN-LAST:event_la_Last_Invoice_ID_printMouseEntered

    private void la_set_itemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_set_itemMouseExited
        u.imageMethod("/img/ri1.png", la_set_item);
    }//GEN-LAST:event_la_set_itemMouseExited

    private void la_set_itemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_set_itemMouseEntered
        u.imageMethod("/img/ri2.png", la_set_item);
    }//GEN-LAST:event_la_set_itemMouseEntered

    private void la_set_itemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_set_itemMouseClicked
        rx.getCallPopup(this).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_la_set_itemMouseClicked

    private void tx_d_tellKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_d_tellKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                DefaultTableModel defTabMod = (DefaultTableModel) jTable_rxitem.getModel();
                defTabMod.getDataVector().removeAllElements();
                DBClass.getData("select * from rxitem  where rx_idrx='" + Integer.parseInt(tx_invoiceid.getText()) + "' order by idrxitem");
                if (DBClass.r.isBeforeFirst() == true) {
                    while (DBClass.r.next()) {
                        Vector v = new Vector();
                        v.add(DBClass.r.getString("itemname"));
                        v.add(DBClass.r.getString("terms"));
                        v.add(DBClass.r.getString("unitprice"));
                        v.add(DBClass.r.getString("qty"));
                        v.add(DBClass.r.getString("total"));

                        defTabMod.addRow(v);
                    }
                    double st = 0;
                    for (int x = 0; x < jTable_rxitem.getRowCount(); x++) {
                        st += Double.parseDouble(defTabMod.getValueAt(x, 4).toString());
                    }
                    tx_bill_total.setText("" + st);
                    tx_disconut.grabFocus();
                }

            } catch (Exception ex) {
                systemLogger.initLogger(rx.class).error("selectAllItem()  Error", ex);
                JOptionPane.showMessageDialog(null, "Error SelectselectAllItem !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
                tx_disconut.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_d_tellKeyPressed

    private void user_la_newMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_newMouseClicked
        u.imageMethod("/img/newB2.png", user_la_new);
        cleareFields();
    }//GEN-LAST:event_user_la_newMouseClicked

    private void user_la_newMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_newMouseEntered
        u.imageMethod("/img/newB2.png", user_la_new);
    }//GEN-LAST:event_user_la_newMouseEntered

    private void user_la_newMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_newMouseExited
        u.imageMethod("/img/newB.png", user_la_new);
    }//GEN-LAST:event_user_la_newMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new invoice().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel agent_la_date;
    private javax.swing.JLabel agent_la_home_img;
    private javax.swing.JLabel agent_la_time;
    private javax.swing.JLabel background;
    private javax.swing.JLabel doctor_la_login_use_name;
    private javax.swing.JLabel home_la_uesr_image;
    private javax.swing.JComboBox jComboBox_paymentMethod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable jTable_conform;
    public static javax.swing.JTable jTable_rxitem;
    private javax.swing.JLabel la_Last_Invoice_ID;
    private javax.swing.JLabel la_Last_Invoice_ID_print;
    private javax.swing.JLabel la_print;
    private javax.swing.JLabel la_set_item;
    private javax.swing.JLabel login_la_cloce;
    private javax.swing.JLabel login_la_mini;
    private javax.swing.JLabel tx_Full_Total;
    private javax.swing.JTextField tx_b_address;
    private javax.swing.JTextField tx_b_tell;
    public static javax.swing.JTextField tx_bill_total;
    private javax.swing.JTextField tx_billto;
    private javax.swing.JTextField tx_d_address;
    private javax.swing.JTextField tx_d_tell;
    private javax.swing.JTextField tx_deliverto;
    public static javax.swing.JTextField tx_disconut;
    private javax.swing.JTextField tx_iddoctor;
    private javax.swing.JTextField tx_idrep;
    private javax.swing.JTextField tx_invoiceid;
    private javax.swing.JTextField tx_netTotal;
    private javax.swing.JTextField tx_shipping;
    private javax.swing.JLabel user_la_new;
    // End of variables declaration//GEN-END:variables

    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> SystemClose()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> System cloce <<<<<<<<<<<   
    void SystemClose() {
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close the System ?", "Exit System", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            // setDefaultCloseOperation(EXIT_ON_CLOSE);
            u.insertUserClose(tx_invoiceid, agent_la_date.getText(), agent_la_time.getText());
            System.exit(0);
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            login_la_cloce.setBackground(new Color(153, 204, 255));
        }
    }
    //>>>>>>>>> System cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> Singltan class 
     * *** >>> Why ------------->>> ek object ekk hdnn
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> Get Instance <<<<<<<<<<<  
    private static final invoice invoi = new invoice();

    public static invoice getCallPopup() {
        return invoi;
    }
//>>>>>>>>> Get Instance <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> txValidateKeyEvent()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<      
    private void txValidateKeyEvent(KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld) {
        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenthNeedFeld) {

            if (txType.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }

    }
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> selectAll_RX_conform <<<<<<<<<<<      
    private void selectAll_RX_conform() {
        try {
            DefaultTableModel defTabMod = (DefaultTableModel) jTable_conform.getModel();
            //  ResultSet rs = DBClass.getData("select * from supplier where idsupplier  ='" + tx_doctor_id.getText() + "' order by iddoctor");
            defTabMod.getDataVector().removeAllElements();
            DBClass.getData("select idrx from rx where conform='0' order by idrx");

            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    Vector v = new Vector();
                    v.add(DBClass.r.getString("idrx"));
                    defTabMod.addRow(v);
                }
            }
            tx_invoiceid.grabFocus();
        } catch (Exception ex) {
            systemLogger.initLogger(invoice.class).error("selectAll_RX_conform() Error", ex);
            JOptionPane.showMessageDialog(null, "Error SelectselectAll_RX_conform !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> selectAll_RX_conform <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> select_RX_conform_details <<<<<<<<<<<      
    private void select_RX_conform_details(int id) {
        try {
            //  ResultSet rs = DBClass.getData("select * from supplier where idsupplier  ='" + tx_doctor_id.getText() + "' order by iddoctor");
            DBClass.getData("select * from rx where idrx='" + id + "' order by idrx");

            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    tx_invoiceid.setText("" + id);
                    tx_iddoctor.setText(DBClass.r.getString("iddoctor"));
                    if (DBClass.r.getInt("payment_type") == 1) {
                        jComboBox_paymentMethod.setSelectedIndex(1);//Payed
                    } else {
                        jComboBox_paymentMethod.setSelectedIndex(0);//COD
                    }
                    tx_billto.setText(DBClass.r.getString("billto"));
                    tx_b_tell.setText(DBClass.r.getString("bnumber"));
                    tx_b_address.setText(DBClass.r.getString("baddress"));
                    tx_deliverto.setText(DBClass.r.getString("deliverto"));
                    tx_d_tell.setText(DBClass.r.getString("dnumber"));
                    tx_d_address.setText(DBClass.r.getString("daddress"));
                }
            }
            //selectRX_Item(id);
            searchDoctorRep(Integer.parseInt(tx_iddoctor.getText().trim()));

            tx_disconut.grabFocus();
        } catch (Exception ex) {
            systemLogger.initLogger(invoice.class).error("select_RX_conform_details() Error", ex);
            tx_invoiceid.grabFocus();
            JOptionPane.showMessageDialog(null, "Error Selectselect_RX_conform_details !!! \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> select_RX_conform_details <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> searchDoctorRep <<<<<<<<<<<      
    private void searchDoctorRep(int search_repid) {
        try {
        //  DBClass.getData("select * from item where barcode='" + search_TX_type + "' order by iditem");
            DBClass.getData("select d.iddoctor,r.iddoctorrep from doctor d, doctorrep r "
                    + "where  d.iddoctorrep = r.iddoctorrep and d.iddoctor='" + search_repid + "' ");

            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    tx_idrep.setText(DBClass.r.getString("r.iddoctorrep"));
                }
            }

        } catch (Exception ex) {
            systemLogger.initLogger(invoice.class).error("searchDoctorRep() Error", ex);
            tx_disconut.grabFocus();
            JOptionPane.showMessageDialog(null, "Error ItemTable Search From Item_Barcode !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> searchDoctorRep <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> cleareFields <<<<<<<<<<<      
    private void cleareFields() {
        tx_invoiceid.setText(null);
        tx_billto.setText(null);
        tx_b_address.setText(null);
        tx_b_tell.setText(null);
        tx_deliverto.setText(null);
        tx_d_address.setText(null);
        tx_d_tell.setText(null);
        tx_iddoctor.setText(null);
        tx_idrep.setText(null);
        tx_bill_total.setText(null);

        tx_invoiceid.setEditable(false);
        tx_billto.setEditable(false);
        tx_b_address.setEditable(false);
        tx_b_tell.setEditable(false);
        tx_deliverto.setEditable(false);
        tx_d_address.setEditable(false);
        tx_d_tell.setEditable(false);
        tx_iddoctor.setEditable(false);
        tx_idrep.setEditable(false);
        tx_bill_total.setEditable(false);

        tx_bill_total.setEditable(false);
        tx_netTotal.setEditable(false);
        tx_iddoctor.setEditable(false);
        tx_idrep.setEditable(false);
        tx_disconut.setText("0");
        tx_netTotal.setText("0");
        tx_shipping.setText("0");
        tx_Full_Total.setText("0");
        tx_bill_total.setText("0");
        jComboBox_paymentMethod.setSelectedIndex(0);
        idsearch_T1 = 0;
        RN = 0;
        jTable_rxitem.removeAll();
        selectAll_RX_conform();
        lastNumber();
        t1 = "";
    }
//>>>>>>>>> cleareFields <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> selectRX_Item <<<<<<<<<<<      
    public static void selectRX_Item(int rxid) {
        try {
            DefaultTableModel defTabMod = (DefaultTableModel) jTable_rxitem.getModel();
            //  ResultSet rs = DBClass.getData("select * from supplier where idsupplier  ='" + tx_doctor_id.getText() + "' order by iddoctor");
            DBClass.getData("select * from rxitem where rx_idrx='" + rxid + "' order by idrxitem");

            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    Vector v = new Vector();
                    v.add(DBClass.r.getString("itemname"));
                    v.add(DBClass.r.getString("terms"));
                    v.add(DBClass.r.getString("unitprice"));
                    v.add(DBClass.r.getString("qty"));
                    v.add(DBClass.r.getString("total"));
                    defTabMod.addRow(v);
                }
                double st = 0;
                for (int x = 0; x < jTable_rxitem.getRowCount(); x++) {
                    st += Double.parseDouble(defTabMod.getValueAt(x, 4).toString());
                }
                tx_bill_total.setText("" + st);
                tx_disconut.grabFocus();
            }

        } catch (Exception ex) {
            systemLogger.initLogger(invoice.class).error("selectRX_Item() Error", ex);
            JOptionPane.showMessageDialog(null, "Error SelectselectRX_Item !!! \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
            tx_disconut.grabFocus();
        }
    }
    //>>>>>>>>> selectRX_Item <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> setTotalMethod <<<<<<<<<<<
    private void setTotalMethod() {
        double sut1 = Double.parseDouble(tx_netTotal.getText());
        double ship = Double.parseDouble(tx_shipping.getText());
        if (Double.parseDouble(tx_disconut.getText()) > 0) {
            double voucher = Double.parseDouble(tx_disconut.getText());
            double x = (Double.parseDouble(tx_bill_total.getText()) * voucher) / 100;
            tx_netTotal.setText("" + (sut1 - x));
            tx_Full_Total.setText("" + (sut1 - x + ship));
        } else {
            tx_netTotal.setText("" + (sut1 + ship));
            tx_Full_Total.setText("" + (sut1 + ship));
        }
    }
//>>>>>>>>> setTotalMethod <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> printButtonIncertQuery <<<<<<<<<<<
    private boolean printButtonIncertQuery() {
        int x = JOptionPane.showConfirmDialog(this, "Want To Print This Invoice", "Print Invoice", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            try {
                RN = Integer.parseInt(tx_invoiceid.getText().trim());

                java.sql.Date date = new java.sql.Date(new Date().getTime());

                try {
//            DBClass.putData("insert into invoicerx (rx_idrx,date,time,total,discount,nettotal,shippingcost,fullamount,status) values("
//                    + "'" + RN + "','" + date + "', '" + agent_la_time.getText() + "','" + Double.parseDouble(tx_bill_total.getText()) + "'"
//                    + ",'" + Double.parseDouble(tx_disconut.getText()) + "','" + Double.parseDouble(tx_netTotal.getText()) + "','" + Double.parseDouble(tx_shipping.getText()) + "','" + Double.parseDouble(tx_Full_Total.getText()) + "','1' )");
                    DBClass.putData("update  invoicerx  set date='" + date + "', time='" + agent_la_time.getText() + "',total='" + Double.parseDouble(tx_bill_total.getText()) + "'"
                            + ",discount='" + Double.parseDouble(tx_disconut.getText()) + "',nettotal='" + Double.parseDouble(tx_netTotal.getText()) + "',shippingcost='" + Double.parseDouble(tx_shipping.getText()) + "'"
                            + ",fullamount='" + Double.parseDouble(tx_Full_Total.getText()) + "',status='1' where rx_idrx='" + RN + "'");

                    if (jComboBox_paymentMethod.getSelectedIndex() == 1) {
                        //Payed 1
                        DBClass.putData("update rx set payment_type='1' ,conform='2', status='1' where  idrx  ='" + RN + "' ");
                    } else {
                        //COD 0
                        DBClass.putData("update rx set payment_type='0', conform='2', status='1' where  idrx  ='" + RN + "' ");
                    }
                    ////// doctor amount
                    DBClass.putData("insert into doctoramount (idrx,iddoctor,date,amount) values('" + RN + "','" + Integer.parseInt(tx_iddoctor.getText()) + "',"
                            + "'" + date + "','" + (Double.parseDouble(tx_netTotal.getText()) * 5 / 100) + "') ");
                    ////// rep amount
                    DBClass.putData("insert into repamount (idrx,iddoctorrep,date,amount) values('" + RN + "','" + Integer.parseInt(tx_idrep.getText()) + "',"
                            + "'" + date + "','" + (Double.parseDouble(tx_netTotal.getText()) * 3 / 100) + "') ");

                    DefaultTableModel dtm = (DefaultTableModel) jTable_rxitem.getModel();
                    dtm.setRowCount(0);
                    return true;
                } catch (Exception e) {
                    systemLogger.initLogger(invoice.class).error("printButtonIncertQuery() SQLIntegrityConstraintViolationException Error", e);
                    JOptionPane.showConfirmDialog(this, "Please check the  recode!!! ", "Duplicate Entity", JOptionPane.ERROR_MESSAGE);
                    tx_invoiceid.grabFocus();
                    return false;
                }

            } catch (Exception e) {
                systemLogger.initLogger(invoice.class).error("printButtonIncertQuery() Error", e);
                JOptionPane.showMessageDialog(null, " Error printButtonIncertQuery!!! \n ", "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }

        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            return false;
        } else {
            return false;
        }

    }
//>>>>>>>>> printButtonIncertQuery <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> printInvoice <<<<<<<<<<<    
    private void printInvoice() {

        try {
            // FileInputStream is = new FileInputStream("F:\\SADFInal\\01_1_siddha_System\\src\\Report\\RXInvoice.jasper");
            FileInputStream is = new FileInputStream(SaveFilePath.REPORT_File_path + "\\RXInvoice.jasper");
            //    InputStream is = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "reportinvoice.jasper");
            Map<String, Object> map = new HashMap<>();
            map.put("RefNo", RN);  //tx_invoiceid.getText()
            JasperPrint fileReport = JasperFillManager.fillReport(is, map, DBClass.con());
            //    JasperViewer.viewReport(fileReport, false);
            try {
                String pathPDF = "";
                // File file = new File("DDRR.txt");
                File file = new File(SaveFilePath.REPORT_BASE_URL + "\\DDRR1.txt");
                if (!file.exists()) {
                    // System.out.println("f");
                    file.createNewFile();
                    FileWriter fr = new FileWriter(file);

                    JFileChooser jfc = new JFileChooser();
                    jfc.setDialogType(JFileChooser.CUSTOM_DIALOG);
                    jfc.setMultiSelectionEnabled(false);
                    jfc.showSaveDialog(jfc);
                    pathPDF = jfc.getSelectedFile().getPath().replace("\\", "\\\\");

                    fr.write("DB.map_InRx=" + pathPDF);
                    fr.close();
                    File pF = new File(pathPDF);
                    pF.mkdir();
                }

                InputStream input = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "\\DDRR1.txt");
                Properties prop = new Properties();
                prop.load(input);
                pathPDF = prop.getProperty("DB.map_InRx");
                //  System.out.println(prop.getProperty("DB.mpa"));

                JasperExportManager.exportReportToPdfFile(fileReport, pathPDF + "\\" + "_" + t1 + "_" + GenaratorPDFName(tx_invoiceid.getText(), 1));
                JasperPrintManager.printReport(fileReport, false);
                    //   JasperExportManager.exportReportToXmlFile(fileReport, pathPDF + "\\\\" + GenaratorXMLName(tx_refno_jLayeredPane_invoice.getText()),true);
                // System.out.println(pathPDF + "\\\\" + GenaratorPDFName(tx_refno_jLayeredPane_invoice.getText()));
            } catch (IOException e) {
                systemLogger.initLogger(invoice.class).error("printInvoice() IOException Error", e);
                // e.printStackTrace();
                JOptionPane.showMessageDialog(null, "PDF not save printInvoice!!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
            }

        } catch (JRException e) {
            systemLogger.initLogger(invoice.class).error("printInvoice() JRException Error", e);
            JOptionPane.showMessageDialog(null, "Repot Not Compleate , Please Check It printInvoice!!!", "Report Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            systemLogger.initLogger(invoice.class).error("printInvoice()  Exception Error", e);
            // e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Repoting Error printInvoice!!!", "Report Error", JOptionPane.ERROR_MESSAGE);
        }

    }
//>>>>>>>>> printInvoice <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> GenaratorPDFName <<<<<<<<<<<
    private String GenaratorPDFName(String x, int y) {
        if (y != 2) {
            String name = "invoiceNumber" + x + "_RX.pdf";
            return name;
        } else {
            String name = "invoiceNumber" + x + "_RXCopy.pdf";
            return name;
        }
    }
//>>>>>>>>> GenaratorPDFName <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
  //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> lastNumber <<<<<<<<<<<  
    private void lastNumber() {
        try {
            DBClass.getData("select rx_idrx from invoicerx order by rx_idrx desc limit 1");
            if (DBClass.r.next()) {
                la_Last_Invoice_ID.setText(DBClass.r.getString("rx_idrx"));
            } else {
                la_Last_Invoice_ID.setText("" + 0000);
            }
        } catch (Exception e) {
            systemLogger.initLogger(invoice.class).error("lastNumber()  Error", e);
            JOptionPane.showMessageDialog(this, "Missing parats ", "Error Massage", JOptionPane.ERROR_MESSAGE);
        }

    }
//>>>>>>>>> lastNumber <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> printInvoiceLast <<<<<<<<<<<    
    private void printInvoiceLast(int rn) {

        try {
            //  FileInputStream is = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "\\RXInvoice.jasper");
            FileInputStream is = new FileInputStream(SaveFilePath.REPORT_File_path + "\\RXInvoice.jasper");
            //    InputStream is = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "reportinvoice.jasper");
            Map<String, Object> map = new HashMap<>();
            map.put("RefNo", rn);  //tx_invoiceid.getText()
            JasperPrint fileReport = JasperFillManager.fillReport(is, map, DBClass.con());
            //    JasperViewer.viewReport(fileReport, false);
            try {
                String pathPDF = "";
                // File file = new File("DDRR.txt");
                File file = new File(SaveFilePath.REPORT_BASE_URL + "\\DDRR7.txt");
                if (!file.exists()) {
                    // System.out.println("f");
                    file.createNewFile();
                    FileWriter fr = new FileWriter(file);

                    JFileChooser jfc = new JFileChooser();
                    jfc.setDialogType(JFileChooser.CUSTOM_DIALOG);
                    jfc.setMultiSelectionEnabled(false);
                    jfc.showSaveDialog(jfc);
                    pathPDF = jfc.getSelectedFile().getPath().replace("\\", "\\\\");

                    fr.write("DB.map_LastRx=" + pathPDF);
                    fr.close();
                    File pF = new File(pathPDF);
                    pF.mkdir();
                }

                InputStream input = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "\\DDRR7.txt");
                Properties prop = new Properties();
                prop.load(input);
                pathPDF = prop.getProperty("DB.map_LastRx");
                //  System.out.println(prop.getProperty("DB.mpa"));

                JasperExportManager.exportReportToPdfFile(fileReport, pathPDF + "\\" + "_" + t1 + "_" + GenaratorPDFName(tx_invoiceid.getText(), 2));
                    //   JasperExportManager.exportReportToXmlFile(fileReport, pathPDF + "\\\\" + GenaratorXMLName(tx_refno_jLayeredPane_invoice.getText()),true);
                // System.out.println(pathPDF + "\\\\" + GenaratorPDFName(tx_refno_jLayeredPane_invoice.getText()));
            } catch (IOException e) {
                systemLogger.initLogger(invoice.class).error("printInvoiceLast() IOException Error", e);
                // e.printStackTrace();
                JOptionPane.showMessageDialog(null, "PDF not save printInvoiceLast!!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
            }

            JasperPrintManager.printReport(fileReport, false);

        } catch (JRException e) {
            systemLogger.initLogger(invoice.class).error("printInvoiceLast() JRException Error", e);
            JOptionPane.showMessageDialog(null, "Repot Not Compleate , Please Check It printInvoiceLast!!!", "Report Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            systemLogger.initLogger(invoice.class).error("printInvoiceLast() Exception Error", e);
            // e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Repoting Error printInvoiceLast!!!", "Report Error", JOptionPane.ERROR_MESSAGE);
        }

    }
//>>>>>>>>> printInvoiceLast <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
}
