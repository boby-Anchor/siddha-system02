/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHETHANA
 */
public class user extends javax.swing.JFrame {
UniversalMethod u = new UniversalMethod();
 public static int idsearch;
    public user() {
        initComponents();
         systemLogger.initLogger(user.class).info("Open User Frme");
          UniversalMethod.TimeMethod(agent_la_date, agent_la_time);
        u.imageMethod("/img/employee_.png", user_la_employeeFrame_open );
        u.imageMethod(background, home_la_uesr_image, doctor_la_login_use_name, agent_la_home_img, login_la_mini, login_la_cloce, user_la_search, user_la_update, user_la_delete, user_la_enter);
   cleareFields();
   doctor_la_login_use_name.setText(UniversalMethod.getLogUser());
    u.imageMethod("/img/newB2.png", user_la_new);
    agent_la_home_img.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agent_la_date = new javax.swing.JLabel();
        agent_la_time = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        home_la_uesr_image = new javax.swing.JLabel();
        doctor_la_login_use_name = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        agent_la_home_img = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        login_la_mini = new javax.swing.JLabel();
        login_la_cloce = new javax.swing.JLabel();
        tx_user_emp_id = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tx_user_pas1 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tx_user_pas2 = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        user_la_search = new javax.swing.JLabel();
        user_la_update = new javax.swing.JLabel();
        user_la_delete = new javax.swing.JLabel();
        user_la_enter = new javax.swing.JLabel();
        user_la_employeeFrame_open = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_user = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jComboBox_user_roal = new javax.swing.JComboBox();
        jComboBox_is_active = new javax.swing.JComboBox();
        user_la_new = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1380, 768));
        setUndecorated(true);
        getContentPane().setLayout(null);

        agent_la_date.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_date.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_date.setText("Invoice");
        agent_la_date.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_date);
        agent_la_date.setBounds(10, 5, 130, 35);

        agent_la_time.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_time.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_time.setText("Invoice");
        agent_la_time.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_time);
        agent_la_time.setBounds(150, 5, 130, 35);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(140, 5, 20, 30);

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(280, 5, 20, 30);

        home_la_uesr_image.setText("userlogo");
        getContentPane().add(home_la_uesr_image);
        home_la_uesr_image.setBounds(290, 10, 30, 30);

        doctor_la_login_use_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        doctor_la_login_use_name.setForeground(new java.awt.Color(255, 255, 255));
        doctor_la_login_use_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        doctor_la_login_use_name.setText("Invoice");
        getContentPane().add(doctor_la_login_use_name);
        doctor_la_login_use_name.setBounds(330, 5, 260, 35);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(580, 5, 20, 30);

        agent_la_home_img.setText("jLabel1");
        agent_la_home_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseClicked(evt);
            }
        });
        getContentPane().add(agent_la_home_img);
        agent_la_home_img.setBounds(600, 5, 80, 30);

        jLabel1.setBackground(new java.awt.Color(51, 204, 255));
        jLabel1.setFont(new java.awt.Font("Eras Bold ITC", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("USER");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(760, 1, 330, 40);

        login_la_mini.setBackground(new java.awt.Color(255, 255, 255));
        login_la_mini.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_mini.setForeground(new java.awt.Color(0, 0, 0));
        login_la_mini.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_mini.setBorder(new javax.swing.border.MatteBorder(null));
        login_la_mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_miniMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_miniMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_miniMouseExited(evt);
            }
        });
        getContentPane().add(login_la_mini);
        login_la_mini.setBounds(1295, 10, 30, 30);

        login_la_cloce.setBackground(new java.awt.Color(255, 255, 255));
        login_la_cloce.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_cloce.setForeground(new java.awt.Color(0, 0, 0));
        login_la_cloce.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_cloce.setBorder(new javax.swing.border.MatteBorder(null));
        login_la_cloce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseExited(evt);
            }
        });
        getContentPane().add(login_la_cloce);
        login_la_cloce.setBounds(1330, 10, 30, 30);

        tx_user_emp_id.setBackground(new java.awt.Color(235, 228, 228));
        tx_user_emp_id.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_user_emp_id.setForeground(new java.awt.Color(0, 0, 0));
        tx_user_emp_id.setText("jTextField1");
        tx_user_emp_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_user_emp_idKeyPressed(evt);
            }
        });
        getContentPane().add(tx_user_emp_id);
        tx_user_emp_id.setBounds(540, 70, 390, 33);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(":");
        jLabel5.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel5);
        jLabel5.setBounds(520, 70, 30, 30);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Employee Number");
        jLabel4.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel4);
        jLabel4.setBounds(360, 70, 160, 30);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Password");
        jLabel6.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel6);
        jLabel6.setBounds(360, 170, 160, 30);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText(":");
        jLabel7.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel7);
        jLabel7.setBounds(520, 170, 30, 30);

        tx_user_pas1.setBackground(new java.awt.Color(235, 228, 228));
        tx_user_pas1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_user_pas1.setForeground(new java.awt.Color(0, 0, 0));
        tx_user_pas1.setText("jTextField1");
        tx_user_pas1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_user_pas1KeyPressed(evt);
            }
        });
        getContentPane().add(tx_user_pas1);
        tx_user_pas1.setBounds(540, 170, 390, 33);

        jLabel20.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Roal");
        jLabel20.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel20);
        jLabel20.setBounds(360, 120, 160, 30);

        jLabel27.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText(":");
        jLabel27.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel27);
        jLabel27.setBounds(520, 120, 30, 30);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Re-Enter Password");
        jLabel8.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel8);
        jLabel8.setBounds(360, 220, 160, 30);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText(":");
        jLabel9.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel9);
        jLabel9.setBounds(520, 220, 30, 30);

        tx_user_pas2.setBackground(new java.awt.Color(235, 228, 228));
        tx_user_pas2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_user_pas2.setForeground(new java.awt.Color(0, 0, 0));
        tx_user_pas2.setText("jTextField1");
        tx_user_pas2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_user_pas2KeyPressed(evt);
            }
        });
        getContentPane().add(tx_user_pas2);
        tx_user_pas2.setBounds(540, 220, 390, 33);

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator5);
        jSeparator5.setBounds(0, 40, 1370, 10);

        user_la_search.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        user_la_search.setForeground(new java.awt.Color(0, 0, 0));
        user_la_search.setText("Search");
        user_la_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_la_searchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                user_la_searchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                user_la_searchMouseExited(evt);
            }
        });
        getContentPane().add(user_la_search);
        user_la_search.setBounds(40, 330, 120, 40);

        user_la_update.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        user_la_update.setForeground(new java.awt.Color(0, 0, 0));
        user_la_update.setText("Update");
        user_la_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_la_updateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                user_la_updateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                user_la_updateMouseExited(evt);
            }
        });
        getContentPane().add(user_la_update);
        user_la_update.setBounds(220, 330, 120, 40);

        user_la_delete.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        user_la_delete.setForeground(new java.awt.Color(0, 0, 0));
        user_la_delete.setText("Delete");
        user_la_delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_la_deleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                user_la_deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                user_la_deleteMouseExited(evt);
            }
        });
        getContentPane().add(user_la_delete);
        user_la_delete.setBounds(390, 330, 120, 40);

        user_la_enter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        user_la_enter.setForeground(new java.awt.Color(0, 0, 0));
        user_la_enter.setText("Enter");
        user_la_enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_la_enterMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                user_la_enterMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                user_la_enterMouseExited(evt);
            }
        });
        getContentPane().add(user_la_enter);
        user_la_enter.setBounds(570, 330, 120, 40);

        user_la_employeeFrame_open.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        user_la_employeeFrame_open.setForeground(new java.awt.Color(0, 0, 0));
        user_la_employeeFrame_open.setText("Back to employee");
        user_la_employeeFrame_open.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_la_employeeFrame_openMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                user_la_employeeFrame_openMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                user_la_employeeFrame_openMouseExited(evt);
            }
        });
        getContentPane().add(user_la_employeeFrame_open);
        user_la_employeeFrame_open.setBounds(1160, 330, 120, 40);

        jTable_user.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Roal", "Password", "Is Active"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_user.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_userMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_user);
        if (jTable_user.getColumnModel().getColumnCount() > 0) {
            jTable_user.getColumnModel().getColumn(0).setMinWidth(100);
            jTable_user.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable_user.getColumnModel().getColumn(0).setMaxWidth(100);
            jTable_user.getColumnModel().getColumn(1).setMinWidth(100);
            jTable_user.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable_user.getColumnModel().getColumn(1).setMaxWidth(100);
            jTable_user.getColumnModel().getColumn(2).setMinWidth(200);
            jTable_user.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTable_user.getColumnModel().getColumn(2).setMaxWidth(200);
            jTable_user.getColumnModel().getColumn(3).setMinWidth(70);
            jTable_user.getColumnModel().getColumn(3).setPreferredWidth(70);
            jTable_user.getColumnModel().getColumn(3).setMaxWidth(70);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(420, 410, 470, 350);

        jLabel22.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Is Active");
        jLabel22.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel22);
        jLabel22.setBounds(360, 270, 160, 30);

        jLabel17.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText(":");
        jLabel17.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel17);
        jLabel17.setBounds(520, 270, 30, 30);

        jSeparator6.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator6.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator6);
        jSeparator6.setBounds(0, 320, 1370, 10);

        jComboBox_user_roal.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_user_roal.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_user_roal.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_user_roal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "User", "Caller", "Stock Keeper", "Maneger", "Admin" }));
        jComboBox_user_roal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_user_roalKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_user_roal);
        jComboBox_user_roal.setBounds(540, 120, 390, 33);

        jComboBox_is_active.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_is_active.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_is_active.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_is_active.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Inactive" }));
        jComboBox_is_active.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_is_activeKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_is_active);
        jComboBox_is_active.setBounds(540, 270, 390, 33);

        user_la_new.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        user_la_new.setForeground(new java.awt.Color(0, 0, 0));
        user_la_new.setText("New");
        user_la_new.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_la_newMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                user_la_newMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                user_la_newMouseExited(evt);
            }
        });
        getContentPane().add(user_la_new);
        user_la_new.setBounds(570, 330, 120, 40);

        background.setBackground(new java.awt.Color(234, 232, 232));
        background.setForeground(new java.awt.Color(255, 255, 255));
        background.setText("jLabel1");
        getContentPane().add(background);
        background.setBounds(0, 0, 1370, 770);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agent_la_home_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you sure Go to The Home ?", "Change Interface", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            home.getCallPopup().setVisible(true);
            this.dispose();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        }
    }//GEN-LAST:event_agent_la_home_imgMouseClicked

    private void agent_la_home_imgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseEntered
        u.imageMethod("/img/home_2_2.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseEntered

    private void agent_la_home_imgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseExited
        u.imageMethod("/img/home_.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseExited

    private void login_la_miniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_login_la_miniMouseClicked

    private void login_la_miniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseEntered
        //    login_la_mini.setBackground(Color.gray);
        u.imageMethod("/img/mini2.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseEntered

    private void login_la_miniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseExited
        //    login_la_mini.setBackground(Color.white);
        u.imageMethod("/img/mini.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseExited

    private void login_la_cloceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseClicked
        SystemClose();
    }//GEN-LAST:event_login_la_cloceMouseClicked

    private void login_la_cloceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseEntered
        //    login_la_cloce.setBackground(Color.red);
        u.imageMethod("/img/exti.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseEntered

    private void login_la_cloceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseExited
        //    login_la_cloce.setBackground(Color.white);
        u.imageMethod("/img/exti2.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseExited

    private void user_la_searchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_searchMouseEntered
        u.imageMethod("/img/search2.png", user_la_search );
    }//GEN-LAST:event_user_la_searchMouseEntered

    private void user_la_searchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_searchMouseExited
        u.imageMethod("/img/search.png", user_la_search );
    }//GEN-LAST:event_user_la_searchMouseExited

    private void user_la_updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_updateMouseEntered
        u.imageMethod("/img/update2.png", user_la_update );
    }//GEN-LAST:event_user_la_updateMouseEntered

    private void user_la_updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_updateMouseExited
        u.imageMethod("/img/update.png", user_la_update );
    }//GEN-LAST:event_user_la_updateMouseExited

    private void user_la_deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_deleteMouseEntered
        u.imageMethod("/img/delete2.png", user_la_delete );
    }//GEN-LAST:event_user_la_deleteMouseEntered

    private void user_la_deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_deleteMouseExited
        u.imageMethod("/img/delete.png", user_la_delete );
    }//GEN-LAST:event_user_la_deleteMouseExited

    private void user_la_enterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_enterMouseEntered
        u.imageMethod("/img/enter2.png", user_la_enter );
    }//GEN-LAST:event_user_la_enterMouseEntered

    private void user_la_enterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_enterMouseExited
        u.imageMethod("/img/enter.png", user_la_enter );
    }//GEN-LAST:event_user_la_enterMouseExited

    private void user_la_employeeFrame_openMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_employeeFrame_openMouseEntered
        u.imageMethod("/img/employee_2_2.png", user_la_employeeFrame_open );
    }//GEN-LAST:event_user_la_employeeFrame_openMouseEntered

    private void user_la_employeeFrame_openMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_employeeFrame_openMouseExited
        u.imageMethod("/img/employee_.png", user_la_employeeFrame_open );
    }//GEN-LAST:event_user_la_employeeFrame_openMouseExited

    private void user_la_employeeFrame_openMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_employeeFrame_openMouseClicked
       employee.getCallPopup().setVisible(true);
       this.dispose();
    }//GEN-LAST:event_user_la_employeeFrame_openMouseClicked

    private void user_la_newMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_newMouseClicked
        u.imageMethod("/img/newB2.png", user_la_new);
        user_la_enter.setVisible(true);
        user_la_new.setVisible(false);
        cleareFields();
    }//GEN-LAST:event_user_la_newMouseClicked

    private void user_la_newMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_newMouseEntered
        u.imageMethod("/img/newB2.png", user_la_new);
    }//GEN-LAST:event_user_la_newMouseEntered

    private void user_la_newMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_newMouseExited
        u.imageMethod("/img/newB.png", user_la_new);
    }//GEN-LAST:event_user_la_newMouseExited

    private void jTable_userMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_userMouseClicked
        DefaultTableModel defTabMod = (DefaultTableModel) jTable_user.getModel();
        user_la_new.setVisible(true);
        user_la_enter.setVisible(false);
        idsearch = Integer.parseInt(defTabMod.getValueAt(jTable_user.getSelectedRow(), 0).toString());
        tx_user_emp_id.setText((defTabMod.getValueAt(jTable_user.getSelectedRow(), 0).toString()));
        jComboBox_user_roal.setSelectedItem(defTabMod.getValueAt(jTable_user.getSelectedRow(), 1).toString());
        tx_user_pas1.setText(defTabMod.getValueAt(jTable_user.getSelectedRow(), 2).toString());
        tx_user_pas2.setText(defTabMod.getValueAt(jTable_user.getSelectedRow(), 2).toString());
        jComboBox_is_active.setSelectedItem(defTabMod.getValueAt(jTable_user.getSelectedRow(), 3).toString());
    }//GEN-LAST:event_jTable_userMouseClicked

    private void tx_user_emp_idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_user_emp_idKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, tx_user_emp_id, jComboBox_user_roal);
        } else {
            txValidateKeyEvent(evt, tx_user_emp_id, "N", 8);
        }
    }//GEN-LAST:event_tx_user_emp_idKeyPressed

    private void jComboBox_user_roalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_user_roalKeyPressed
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, jComboBox_user_roal, tx_user_pas1);
       }
    }//GEN-LAST:event_jComboBox_user_roalKeyPressed

    private void tx_user_pas1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_user_pas1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, tx_user_pas1, tx_user_pas2);
        } else {
            txValidateKeyEvent(evt, tx_user_pas1, "NA", 15);
        }
    }//GEN-LAST:event_tx_user_pas1KeyPressed

    private void tx_user_pas2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_user_pas2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if(tx_user_pas1.getText().equals(tx_user_pas2.getText())){
                u.grabFocusMethod(evt, tx_user_pas2, jComboBox_is_active);
            }else{
            JOptionPane.showMessageDialog(this, "Please Check the Password!!!!", "Not Correct", JOptionPane.OK_OPTION);
            tx_user_pas2.grabFocus();
        }
            
        } else {
            txValidateKeyEvent(evt, tx_user_pas2, "NA", 15);
        }
    }//GEN-LAST:event_tx_user_pas2KeyPressed

    private void jComboBox_is_activeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_is_activeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, jComboBox_is_active, user_la_enter);
       }
    }//GEN-LAST:event_jComboBox_is_activeKeyPressed

    private void user_la_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_searchMouseClicked
        u.imageMethod("/img/search2.png", user_la_search );
        if (!tx_user_emp_id.getText().trim().isEmpty()) {
            searchEMP();
        } else {
            tx_user_emp_id.grabFocus();
        }
    }//GEN-LAST:event_user_la_searchMouseClicked

    private void user_la_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_updateMouseClicked
         u.imageMethod("/img/update2.png", user_la_update );
        if (idsearch == 0) {
            JOptionPane.showMessageDialog(this, "Please Select the User", "Not Selected", JOptionPane.OK_OPTION);
        } else {
            updatemp();
        }
    }//GEN-LAST:event_user_la_updateMouseClicked

    private void user_la_deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_deleteMouseClicked
         u.imageMethod("/img/delete2.png", user_la_delete );
        if (idsearch == 0) {
            JOptionPane.showMessageDialog(this, "Please Select the User", "Not Selected", JOptionPane.OK_OPTION);
        } else {
            deleteuser();
        }
    }//GEN-LAST:event_user_la_deleteMouseClicked

    private void user_la_enterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_la_enterMouseClicked
        u.imageMethod("/img/enter2.png", user_la_enter );
        emterMouseClickMethod();
    }//GEN-LAST:event_user_la_enterMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new user().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel agent_la_date;
    private javax.swing.JLabel agent_la_home_img;
    private javax.swing.JLabel agent_la_time;
    private javax.swing.JLabel background;
    private javax.swing.JLabel doctor_la_login_use_name;
    private javax.swing.JLabel home_la_uesr_image;
    private javax.swing.JComboBox jComboBox_is_active;
    private javax.swing.JComboBox jComboBox_user_roal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTable jTable_user;
    private javax.swing.JLabel login_la_cloce;
    private javax.swing.JLabel login_la_mini;
    private javax.swing.JTextField tx_user_emp_id;
    private javax.swing.JTextField tx_user_pas1;
    private javax.swing.JTextField tx_user_pas2;
    private javax.swing.JLabel user_la_delete;
    private javax.swing.JLabel user_la_employeeFrame_open;
    private javax.swing.JLabel user_la_enter;
    private javax.swing.JLabel user_la_new;
    private javax.swing.JLabel user_la_search;
    private javax.swing.JLabel user_la_update;
    // End of variables declaration//GEN-END:variables

       
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> SystemClose()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> System cloce <<<<<<<<<<<   
    void SystemClose() {
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close the System ?", "Exit System", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            // setDefaultCloseOperation(EXIT_ON_CLOSE);
             u.insertUserClose(tx_user_emp_id,agent_la_date.getText(), agent_la_time.getText());
            System.exit(0);
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            login_la_cloce.setBackground(new Color(153, 204, 255));
        }
    }
    //>>>>>>>>> System cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> Singltan class 
     * *** >>> Why ------------->>> ek object ekk hdnn
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> Get Instance <<<<<<<<<<<  
    private static final user userfr = new user();

    public static user getCallPopup() {
        return userfr;
    }
//>>>>>>>>> Get Instance <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    

    
   //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> cleareFields <<<<<<<<<<<      
    private void cleareFields() {
        tx_user_emp_id.setText(null);
        tx_user_pas1.setText(null);
        tx_user_pas2.setText(null);
        jComboBox_user_roal.setSelectedIndex(0);
        jComboBox_is_active.setSelectedIndex(0);
        idsearch = 0;
        user_la_enter.setVisible(true);
        user_la_new.setVisible(false);
        tx_user_emp_id.grabFocus();
         jTable_user.removeAll();
        selectAllemployee();
        tx_user_emp_id.grabFocus();
    }
//>>>>>>>>> cleareFields <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
 
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> txValidateKeyEvent()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<      
    private void txValidateKeyEvent(KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld) {

        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenthNeedFeld) {
            if (txType.equals("NIC")) {
                if (txName.getText().length() == 8) {
                    if ((iNumber == 86)) {
                        txName.setEditable(true);
                    }
                } else if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("A")) {

                if ((iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 32) | (iNumber == 46)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }
    }
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   
    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> deleterep <<<<<<<<<<<     
    private void deleteuser() {
        try {
            int bb = 2;

            int x = JOptionPane.showConfirmDialog(this, "Do you sure Delete User ?", "Delete Verify", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == x) {
                DBClass.putData("update user  set status ='" + bb + "' where  idemployee  ='" + idsearch + "' ");
                JOptionPane.showConfirmDialog(this, "Delete Successful", "Delete", JOptionPane.OK_OPTION);
                cleareFields();
                selectAllemployee();
            } else if (JOptionPane.NO_OPTION == x) {
                setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            }
        } catch (Exception e) {
            systemLogger.initLogger(user.class).error("deleterep()  Error",e);
            JOptionPane.showMessageDialog(null, "Error UserTableDelete !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
             tx_user_emp_id.grabFocus();
        }
    }
    //>>>>>>>>> deleterep <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    

    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> selectAllemployee <<<<<<<<<<<      
    private void selectAllemployee() {
        try {
            DefaultTableModel defTabMod = (DefaultTableModel) jTable_user.getModel();
            defTabMod.getDataVector().removeAllElements();
            ResultSet rs = DBClass.getData("select * from user order by iduser");
            if (rs.isBeforeFirst() == true) {
                while (rs.next()) {
                     Vector v = new Vector();
                    v.add(rs.getString("idemployee"));
                    v.add(rs.getString("roal"));
                    v.add(PasswordEncription.decrypt(rs.getString("password")));
                   if (rs.getInt("status") == 1) {
                        v.add("Active");
                        defTabMod.addRow(v);
                    } else {
                        v.add("Inactive");
                        defTabMod.addRow(v);
                    }

                }
            }
        } catch (Exception ex) {
            systemLogger.initLogger(user.class).error("selectAllemployee()  Error",ex);
           tx_user_emp_id.grabFocus();
          JOptionPane.showMessageDialog(null, "Error EmployeeTableSearch !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
        }

    }
//>>>>>>>>>selectAllDoctorRep <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   

    
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> emterMouseClickMethod <<<<<<<<<<< 
    private void emterMouseClickMethod() {
        if (tx_user_emp_id.getText().trim().isEmpty()) {
            tx_user_emp_id.grabFocus();
        } else if (tx_user_pas1.getText().trim().isEmpty()) {
            tx_user_pas1.grabFocus();
        } else if (tx_user_pas2.getText().trim().isEmpty()) {
            tx_user_pas2.grabFocus();
        } else if (!(tx_user_emp_id.getText().trim().isEmpty() & tx_user_pas1.getText().trim().isEmpty() 
                & tx_user_pas2.getText().trim().isEmpty())) {
            addJTable();
        }
    }
    //>>>>>>>>> emterMouseClickMethod <<<<<<<<<<<         
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     

    
      //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>> insert to db table / call selectall method
     */
//>>>>>>>>> addJTable <<<<<<<<<<<      
    private void addJTable() {
        try {
            int bb = jComboBox_is_active.getSelectedIndex();
            if (bb == 0) {
                bb = 1;
            } else if (bb == 1) {
                bb = 0;
            } else {
                bb = 2;
            }
            DBClass.putData("insert into user(idemployee,roal,username,password,status) values("
                    + " '" + tx_user_emp_id.getText() + "','" +  jComboBox_user_roal.getSelectedItem().toString() + "','" + tx_user_emp_id.getText() + "' , '" 
                    + PasswordEncription.encrypt(tx_user_pas2.getText()) + "' ,'" + bb + "' )");
            cleareFields();
        } catch (Exception ex) {
            systemLogger.initLogger(user.class).error("addJTable()  Error",ex);
            JOptionPane.showMessageDialog(null, "Error UserTableInsert !!! \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
            tx_user_emp_id.grabFocus();
        }
    }
//>>>>>>>>> addJTable <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 

    
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> searchAgent <<<<<<<<<<<      
    private void searchEMP() {
        try {
            ResultSet rs = DBClass.getData("select * from user where idemployee='" + tx_user_emp_id.getText() + "' order by idemployee");
            if (DBClass.r.isBeforeFirst() == true) {
                while (rs.next()) {
                    idsearch = (rs.getInt("idemployee"));
                    jComboBox_user_roal.setSelectedItem(rs.getString("roal"));
                    tx_user_pas1.setText(PasswordEncription.decrypt(rs.getString("password")));
                    tx_user_pas2.setText(PasswordEncription.decrypt(rs.getString("password")));
                    if (rs.getInt("status") == 1) {
                        jComboBox_is_active.setSelectedIndex(0);
                    } else if (rs.getInt("ststus") == 2) {
                        jComboBox_is_active.setSelectedIndex(2);
                    } else {
                        jComboBox_is_active.setSelectedIndex(1);
                    }
                    user_la_enter.setVisible(false);
                    user_la_new.setVisible(true);
                }
            }
        } catch (Exception ex) {
              systemLogger.initLogger(user.class).error("searchAgent()  Error",ex);
            JOptionPane.showMessageDialog(null, "Error User Not Found !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
            tx_user_emp_id.grabFocus();
        }
    }
    //>>>>>>>>> searchAgent <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> updaterep <<<<<<<<<<<     
    private void updatemp() {
        try {
            int bb = jComboBox_is_active.getSelectedIndex();
            if (bb == 0) {
                bb = 1;
            } else if (bb == 1) {
                bb = 0;
            } else {
                bb = 2;
            }

            DBClass.putData("update user set roal='" + jComboBox_user_roal.getSelectedItem().toString() + "',password='" + PasswordEncription.encrypt(tx_user_pas1.getText()) 
                    + "',status ='" + bb + "' where  idemployee  ='" + idsearch + "' ");
            JOptionPane.showConfirmDialog(this, "Update Successful", "Updated", JOptionPane.OK_OPTION);
            cleareFields();
           
        } catch (Exception e) {
             systemLogger.initLogger(user.class).error("updatemp()  Error",e);
            JOptionPane.showMessageDialog(null, "Error UserTableUpdate !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
            tx_user_emp_id.grabFocus();
        }
    }
    //>>>>>>>>> updaterep <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   
    
    
    
}
