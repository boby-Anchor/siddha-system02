/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHETHANA
 */
public class employee extends javax.swing.JFrame {

    UniversalMethod u = new UniversalMethod();
    public static int idsearch;

    public employee() {
        initComponents();
          systemLogger.initLogger(employee.class).info("Open Employee Frame");
        //   u.imageMethod("/img/userFrame.png", agent_la_userFrame_open );
        u.imageMethod("/img/user_.png", agent_la_userFrame_open);
        u.imageMethod(background, home_la_uesr_image, doctor_la_login_use_name, agent_la_home_img, login_la_mini, login_la_cloce, agent_la_search, agent_la_update, agent_la_delete, emp_la_enter);
        cleareFields();
         UniversalMethod.TimeMethod(agent_la_date,agent_la_time);
        doctor_la_login_use_name.setText(UniversalMethod.getLogUser());
        u.imageMethod("/img/newB2.png", emp_la_new);
         u.imageMethod("/img/rf.png", jLabel2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agent_la_date = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        agent_la_time = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        home_la_uesr_image = new javax.swing.JLabel();
        doctor_la_login_use_name = new javax.swing.JLabel();
        agent_la_home_img = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        login_la_mini = new javax.swing.JLabel();
        login_la_cloce = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tx_emp_f_name = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tx_emp_contact_number = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tx_emp_nic = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tx_emp_address = new javax.swing.JTextField();
        agent_la_search = new javax.swing.JLabel();
        agent_la_update = new javax.swing.JLabel();
        agent_la_delete = new javax.swing.JLabel();
        emp_la_enter = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_emp = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tx_emp_l_name = new javax.swing.JTextField();
        agent_la_userFrame_open = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel22 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jComboBox_emp_gender = new javax.swing.JComboBox();
        jComboBox_is_active = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        tx_emp_empid = new javax.swing.JTextField();
        emp_la_new = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1380, 768));
        setUndecorated(true);
        getContentPane().setLayout(null);

        agent_la_date.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_date.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_date.setText("Invoice");
        agent_la_date.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_date);
        agent_la_date.setBounds(10, 5, 130, 35);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(140, 5, 20, 30);

        agent_la_time.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_time.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_time.setText("Invoice");
        agent_la_time.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_time);
        agent_la_time.setBounds(150, 5, 130, 35);

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(280, 5, 20, 30);

        home_la_uesr_image.setText("userlogo");
        getContentPane().add(home_la_uesr_image);
        home_la_uesr_image.setBounds(290, 10, 30, 30);

        doctor_la_login_use_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        doctor_la_login_use_name.setForeground(new java.awt.Color(255, 255, 255));
        doctor_la_login_use_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        doctor_la_login_use_name.setText("Invoice");
        getContentPane().add(doctor_la_login_use_name);
        doctor_la_login_use_name.setBounds(330, 5, 260, 35);

        agent_la_home_img.setText("jLabel1");
        agent_la_home_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseExited(evt);
            }
        });
        getContentPane().add(agent_la_home_img);
        agent_la_home_img.setBounds(600, 5, 80, 30);

        jLabel1.setBackground(new java.awt.Color(51, 204, 255));
        jLabel1.setFont(new java.awt.Font("Eras Bold ITC", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("EMPLOYEE");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(760, 1, 330, 40);

        login_la_mini.setBackground(new java.awt.Color(255, 255, 255));
        login_la_mini.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_mini.setForeground(new java.awt.Color(0, 0, 0));
        login_la_mini.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_miniMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_miniMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_miniMouseExited(evt);
            }
        });
        getContentPane().add(login_la_mini);
        login_la_mini.setBounds(1295, 10, 30, 30);

        login_la_cloce.setBackground(new java.awt.Color(255, 255, 255));
        login_la_cloce.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_cloce.setForeground(new java.awt.Color(0, 0, 0));
        login_la_cloce.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_cloce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseExited(evt);
            }
        });
        getContentPane().add(login_la_cloce);
        login_la_cloce.setBounds(1330, 10, 30, 30);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("First Name");
        jLabel4.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel4);
        jLabel4.setBounds(40, 120, 160, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(":");
        jLabel5.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel5);
        jLabel5.setBounds(200, 120, 30, 30);

        tx_emp_f_name.setBackground(new java.awt.Color(255, 255, 255));
        tx_emp_f_name.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_emp_f_name.setForeground(new java.awt.Color(0, 0, 0));
        tx_emp_f_name.setText("jTextField1");
        tx_emp_f_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_emp_f_nameKeyPressed(evt);
            }
        });
        getContentPane().add(tx_emp_f_name);
        tx_emp_f_name.setBounds(220, 120, 390, 33);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Contact Number");
        jLabel6.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel6);
        jLabel6.setBounds(680, 170, 160, 30);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText(":");
        jLabel7.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel7);
        jLabel7.setBounds(840, 170, 30, 30);

        tx_emp_contact_number.setBackground(new java.awt.Color(255, 255, 255));
        tx_emp_contact_number.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_emp_contact_number.setForeground(new java.awt.Color(0, 0, 0));
        tx_emp_contact_number.setText("jTextField1");
        tx_emp_contact_number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_emp_contact_numberKeyPressed(evt);
            }
        });
        getContentPane().add(tx_emp_contact_number);
        tx_emp_contact_number.setBounds(860, 170, 420, 33);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("NIC Number");
        jLabel8.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel8);
        jLabel8.setBounds(40, 170, 160, 30);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText(":");
        jLabel9.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel9);
        jLabel9.setBounds(200, 170, 30, 30);

        tx_emp_nic.setBackground(new java.awt.Color(255, 255, 255));
        tx_emp_nic.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_emp_nic.setForeground(new java.awt.Color(0, 0, 0));
        tx_emp_nic.setText("jTextField1");
        tx_emp_nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_emp_nicKeyPressed(evt);
            }
        });
        getContentPane().add(tx_emp_nic);
        tx_emp_nic.setBounds(220, 170, 390, 33);

        jLabel14.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Address");
        jLabel14.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel14);
        jLabel14.setBounds(40, 215, 160, 30);

        jLabel15.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText(":");
        jLabel15.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel15);
        jLabel15.setBounds(200, 215, 30, 30);

        tx_emp_address.setBackground(new java.awt.Color(255, 255, 255));
        tx_emp_address.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_emp_address.setForeground(new java.awt.Color(0, 0, 0));
        tx_emp_address.setText("jTextField1");
        tx_emp_address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_emp_addressKeyPressed(evt);
            }
        });
        getContentPane().add(tx_emp_address);
        tx_emp_address.setBounds(220, 215, 1060, 33);

        agent_la_search.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_search.setForeground(new java.awt.Color(0, 0, 0));
        agent_la_search.setText("Search");
        agent_la_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agent_la_searchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agent_la_searchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                agent_la_searchMouseExited(evt);
            }
        });
        getContentPane().add(agent_la_search);
        agent_la_search.setBounds(40, 330, 120, 40);

        agent_la_update.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_update.setForeground(new java.awt.Color(0, 0, 0));
        agent_la_update.setText("Update");
        agent_la_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agent_la_updateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agent_la_updateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                agent_la_updateMouseExited(evt);
            }
        });
        getContentPane().add(agent_la_update);
        agent_la_update.setBounds(220, 330, 120, 40);

        agent_la_delete.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_delete.setForeground(new java.awt.Color(0, 0, 0));
        agent_la_delete.setText("Delete");
        agent_la_delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agent_la_deleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agent_la_deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                agent_la_deleteMouseExited(evt);
            }
        });
        getContentPane().add(agent_la_delete);
        agent_la_delete.setBounds(390, 330, 120, 40);

        emp_la_enter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        emp_la_enter.setForeground(new java.awt.Color(0, 0, 0));
        emp_la_enter.setText("Branch Name");
        emp_la_enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_la_enterMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                emp_la_enterMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                emp_la_enterMouseExited(evt);
            }
        });
        getContentPane().add(emp_la_enter);
        emp_la_enter.setBounds(570, 330, 120, 40);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Gender");
        jLabel12.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel12);
        jLabel12.setBounds(40, 260, 160, 30);

        jLabel13.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText(":");
        jLabel13.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel13);
        jLabel13.setBounds(200, 260, 30, 30);

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator5);
        jSeparator5.setBounds(0, 320, 1370, 10);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 43, 1370, 2);

        jTable_emp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EMP ID", "First  Name", "Last Name", "Contact Number", "Nic Number", "Address", "Gender", "Active"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_emp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_empMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_emp);
        if (jTable_emp.getColumnModel().getColumnCount() > 0) {
            jTable_emp.getColumnModel().getColumn(0).setMinWidth(80);
            jTable_emp.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable_emp.getColumnModel().getColumn(0).setMaxWidth(80);
            jTable_emp.getColumnModel().getColumn(1).setMinWidth(250);
            jTable_emp.getColumnModel().getColumn(1).setPreferredWidth(250);
            jTable_emp.getColumnModel().getColumn(1).setMaxWidth(250);
            jTable_emp.getColumnModel().getColumn(2).setMinWidth(250);
            jTable_emp.getColumnModel().getColumn(2).setPreferredWidth(250);
            jTable_emp.getColumnModel().getColumn(2).setMaxWidth(250);
            jTable_emp.getColumnModel().getColumn(5).setMinWidth(400);
            jTable_emp.getColumnModel().getColumn(5).setPreferredWidth(400);
            jTable_emp.getColumnModel().getColumn(5).setMaxWidth(400);
            jTable_emp.getColumnModel().getColumn(6).setMinWidth(60);
            jTable_emp.getColumnModel().getColumn(6).setPreferredWidth(60);
            jTable_emp.getColumnModel().getColumn(6).setMaxWidth(60);
            jTable_emp.getColumnModel().getColumn(7).setMinWidth(60);
            jTable_emp.getColumnModel().getColumn(7).setPreferredWidth(60);
            jTable_emp.getColumnModel().getColumn(7).setMaxWidth(60);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 440, 1350, 320);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Last Name");
        jLabel10.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel10);
        jLabel10.setBounds(680, 120, 160, 30);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText(":");
        jLabel11.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel11);
        jLabel11.setBounds(840, 120, 30, 30);

        tx_emp_l_name.setBackground(new java.awt.Color(255, 255, 255));
        tx_emp_l_name.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_emp_l_name.setForeground(new java.awt.Color(0, 0, 0));
        tx_emp_l_name.setText("jTextField1");
        tx_emp_l_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_emp_l_nameKeyPressed(evt);
            }
        });
        getContentPane().add(tx_emp_l_name);
        tx_emp_l_name.setBounds(860, 120, 420, 33);

        agent_la_userFrame_open.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_userFrame_open.setForeground(new java.awt.Color(0, 0, 0));
        agent_la_userFrame_open.setText("User frame Open");
        agent_la_userFrame_open.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agent_la_userFrame_openMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agent_la_userFrame_openMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                agent_la_userFrame_openMouseExited(evt);
            }
        });
        getContentPane().add(agent_la_userFrame_open);
        agent_la_userFrame_open.setBounds(1160, 330, 120, 40);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(580, 5, 20, 30);

        jLabel22.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Is Active");
        jLabel22.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel22);
        jLabel22.setBounds(680, 260, 160, 30);

        jLabel17.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText(":");
        jLabel17.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel17);
        jLabel17.setBounds(840, 260, 30, 30);

        jComboBox_emp_gender.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_emp_gender.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_emp_gender.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_emp_gender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        jComboBox_emp_gender.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_emp_genderKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_emp_gender);
        jComboBox_emp_gender.setBounds(220, 260, 390, 33);

        jComboBox_is_active.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_is_active.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_is_active.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_is_active.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Inactive" }));
        jComboBox_is_active.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_is_activeKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_is_active);
        jComboBox_is_active.setBounds(860, 260, 420, 33);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("EMP ID");
        jLabel16.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel16);
        jLabel16.setBounds(40, 70, 160, 30);

        jLabel18.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText(":");
        jLabel18.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel18);
        jLabel18.setBounds(200, 70, 30, 30);

        tx_emp_empid.setBackground(new java.awt.Color(255, 255, 255));
        tx_emp_empid.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_emp_empid.setForeground(new java.awt.Color(0, 0, 0));
        tx_emp_empid.setText("jTextField1");
        tx_emp_empid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_emp_empidKeyPressed(evt);
            }
        });
        getContentPane().add(tx_emp_empid);
        tx_emp_empid.setBounds(220, 70, 390, 33);

        emp_la_new.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        emp_la_new.setForeground(new java.awt.Color(0, 0, 0));
        emp_la_new.setText("New");
        emp_la_new.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_la_newMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                emp_la_newMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                emp_la_newMouseExited(evt);
            }
        });
        getContentPane().add(emp_la_new);
        emp_la_new.setBounds(570, 330, 120, 40);

        jLabel2.setText("Refresh");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel2MouseExited(evt);
            }
        });
        getContentPane().add(jLabel2);
        jLabel2.setBounds(750, 330, 160, 40);

        background.setBackground(new java.awt.Color(234, 232, 232));
        background.setForeground(new java.awt.Color(255, 255, 255));
        background.setText("jLabel1");
        getContentPane().add(background);
        background.setBounds(-10, 0, 1400, 770);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agent_la_home_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you sure Go to The Home ?", "Change Interface", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            home.getCallPopup().setVisible(true);
            this.dispose();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        }
    }//GEN-LAST:event_agent_la_home_imgMouseClicked

    private void agent_la_home_imgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseEntered
        u.imageMethod("/img/homeB2.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseEntered

    private void agent_la_home_imgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseExited
        u.imageMethod("/img/homeB1.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseExited

    private void login_la_miniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_login_la_miniMouseClicked

    private void login_la_miniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseEntered
        //    login_la_mini.setBackground(Color.gray);
        u.imageMethod("/img/mini2.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseEntered

    private void login_la_miniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseExited
        //    login_la_mini.setBackground(Color.white);
        u.imageMethod("/img/mini.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseExited

    private void login_la_cloceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseClicked
        SystemClose();
    }//GEN-LAST:event_login_la_cloceMouseClicked

    private void login_la_cloceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseEntered
        //    login_la_cloce.setBackground(Color.red);
        u.imageMethod("/img/exti.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseEntered

    private void login_la_cloceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseExited
        //    login_la_cloce.setBackground(Color.white);
        u.imageMethod("/img/exti2.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseExited

    private void agent_la_searchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_searchMouseEntered
        u.imageMethod("/img/search2.png", agent_la_search);
    }//GEN-LAST:event_agent_la_searchMouseEntered

    private void agent_la_searchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_searchMouseExited
        u.imageMethod("/img/search.png", agent_la_search);
    }//GEN-LAST:event_agent_la_searchMouseExited

    private void agent_la_updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_updateMouseEntered
        u.imageMethod("/img/update2.png", agent_la_update);
    }//GEN-LAST:event_agent_la_updateMouseEntered

    private void agent_la_updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_updateMouseExited
        u.imageMethod("/img/update.png", agent_la_update);
    }//GEN-LAST:event_agent_la_updateMouseExited

    private void agent_la_deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_deleteMouseEntered
        u.imageMethod("/img/delete2.png", agent_la_delete);
    }//GEN-LAST:event_agent_la_deleteMouseEntered

    private void agent_la_deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_deleteMouseExited
        u.imageMethod("/img/delete.png", agent_la_delete);
    }//GEN-LAST:event_agent_la_deleteMouseExited

    private void emp_la_enterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_la_enterMouseEntered
        u.imageMethod("/img/enter2.png", emp_la_enter);
    }//GEN-LAST:event_emp_la_enterMouseEntered

    private void emp_la_enterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_la_enterMouseExited
        u.imageMethod("/img/enter.png", emp_la_enter);
    }//GEN-LAST:event_emp_la_enterMouseExited

    private void agent_la_userFrame_openMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_userFrame_openMouseEntered
        //  u.imageMethod("/img/userFrame2.png", agent_la_userFrame_open );
        u.imageMethod("/img/user_2_2.png", agent_la_userFrame_open);

    }//GEN-LAST:event_agent_la_userFrame_openMouseEntered

    private void agent_la_userFrame_openMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_userFrame_openMouseExited
        // u.imageMethod("/img/userFrame.png", agent_la_userFrame_open );
        u.imageMethod("/img/user_.png", agent_la_userFrame_open);
    }//GEN-LAST:event_agent_la_userFrame_openMouseExited

    private void agent_la_userFrame_openMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_userFrame_openMouseClicked
        user.getCallPopup().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_agent_la_userFrame_openMouseClicked

    private void agent_la_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_searchMouseClicked
         u.imageMethod("/img/search2.png", agent_la_search);
        if (!tx_emp_empid.getText().trim().isEmpty()) {
            searchEMP();
        } else {
            tx_emp_empid.grabFocus();
        }
    }//GEN-LAST:event_agent_la_searchMouseClicked

    private void emp_la_newMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_la_newMouseClicked
        u.imageMethod("/img/newB2.png", emp_la_new);
        emp_la_enter.setVisible(true);
        emp_la_new.setVisible(false);
        cleareFields();
    }//GEN-LAST:event_emp_la_newMouseClicked

    private void emp_la_newMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_la_newMouseEntered
        u.imageMethod("/img/newB2.png", emp_la_new);
    }//GEN-LAST:event_emp_la_newMouseEntered

    private void emp_la_newMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_la_newMouseExited
        u.imageMethod("/img/newB.png", emp_la_new);
    }//GEN-LAST:event_emp_la_newMouseExited

    private void emp_la_enterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_la_enterMouseClicked
         u.imageMethod("/img/enter2.png", emp_la_enter);
        emterMouseClickMethod();
    }//GEN-LAST:event_emp_la_enterMouseClicked

    private void agent_la_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_updateMouseClicked
        u.imageMethod("/img/update2.png", agent_la_update);
        if (idsearch == 0) {
            JOptionPane.showMessageDialog(this, "Please Select the Employee", "Not Selected", JOptionPane.OK_OPTION);
        } else {
            updatemp();
        }
    }//GEN-LAST:event_agent_la_updateMouseClicked

    private void jTable_empMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_empMouseClicked
        DefaultTableModel defTabMod = (DefaultTableModel) jTable_emp.getModel();
        emp_la_new.setVisible(true);
        emp_la_enter.setVisible(false);
        idsearch = Integer.parseInt(defTabMod.getValueAt(jTable_emp.getSelectedRow(), 0).toString());
        tx_emp_empid.setText(defTabMod.getValueAt(jTable_emp.getSelectedRow(), 0).toString());
        tx_emp_f_name.setText(defTabMod.getValueAt(jTable_emp.getSelectedRow(), 1).toString());
        tx_emp_l_name.setText(defTabMod.getValueAt(jTable_emp.getSelectedRow(), 2).toString());
        tx_emp_contact_number.setText(defTabMod.getValueAt(jTable_emp.getSelectedRow(), 3).toString());
        tx_emp_nic.setText(defTabMod.getValueAt(jTable_emp.getSelectedRow(), 4).toString());
        tx_emp_address.setText(defTabMod.getValueAt(jTable_emp.getSelectedRow(), 5).toString());
        jComboBox_emp_gender.setSelectedItem(defTabMod.getValueAt(jTable_emp.getSelectedRow(), 6).toString());
        jComboBox_is_active.setSelectedItem(defTabMod.getValueAt(jTable_emp.getSelectedRow(), 7).toString());

    }//GEN-LAST:event_jTable_empMouseClicked

    private void agent_la_deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_deleteMouseClicked
        u.imageMethod("/img/delete2.png", agent_la_delete);
        if (idsearch == 0) {
            JOptionPane.showMessageDialog(this, "Please Select the Employee", "Not Selected", JOptionPane.OK_OPTION);
        } else {
            deleteemp();
        }
    }//GEN-LAST:event_agent_la_deleteMouseClicked

    private void tx_emp_empidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_emp_empidKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, tx_emp_empid, tx_emp_f_name);
        } else {
            txValidateKeyEvent(evt, tx_emp_empid, "N", 8);
        }
    }//GEN-LAST:event_tx_emp_empidKeyPressed

    private void tx_emp_f_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_emp_f_nameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, tx_emp_f_name, tx_emp_l_name);
        } else {
            txValidateKeyEvent(evt, tx_emp_f_name, "NA", 60);
        }
    }//GEN-LAST:event_tx_emp_f_nameKeyPressed

    private void tx_emp_l_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_emp_l_nameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, tx_emp_l_name, tx_emp_nic);
        } else {
            txValidateKeyEvent(evt, tx_emp_l_name, "NA", 60);
        }
    }//GEN-LAST:event_tx_emp_l_nameKeyPressed

    private void tx_emp_nicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_emp_nicKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, tx_emp_nic, tx_emp_contact_number);
        } else {
            txValidateKeyEvent(evt, tx_emp_nic, "NIC", 12);
        }
    }//GEN-LAST:event_tx_emp_nicKeyPressed

    private void tx_emp_contact_numberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_emp_contact_numberKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, tx_emp_contact_number, tx_emp_address);
        } else {
            txValidateKeyEvent(evt, tx_emp_contact_number, "N", 10);
        }
    }//GEN-LAST:event_tx_emp_contact_numberKeyPressed

    private void tx_emp_addressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_emp_addressKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, tx_emp_address, jComboBox_emp_gender);
        } else {
            txValidateKeyEvent(evt, tx_emp_address, "NA", 170);
        }
    }//GEN-LAST:event_tx_emp_addressKeyPressed

    private void jComboBox_emp_genderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_emp_genderKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, jComboBox_emp_gender, jComboBox_is_active);
       }
    }//GEN-LAST:event_jComboBox_emp_genderKeyPressed

    private void jComboBox_is_activeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_is_activeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, jComboBox_is_active, emp_la_enter);
       }
    }//GEN-LAST:event_jComboBox_is_activeKeyPressed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
       selectAllemployee();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
        u.imageMethod("/img/rf2.png", jLabel2);
    }//GEN-LAST:event_jLabel2MouseEntered

    private void jLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseExited
        u.imageMethod("/img/rf.png", jLabel2);
    }//GEN-LAST:event_jLabel2MouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new employee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel agent_la_date;
    private javax.swing.JLabel agent_la_delete;
    private javax.swing.JLabel agent_la_home_img;
    private javax.swing.JLabel agent_la_search;
    private javax.swing.JLabel agent_la_time;
    private javax.swing.JLabel agent_la_update;
    private javax.swing.JLabel agent_la_userFrame_open;
    private javax.swing.JLabel background;
    private javax.swing.JLabel doctor_la_login_use_name;
    private javax.swing.JLabel emp_la_enter;
    private javax.swing.JLabel emp_la_new;
    private javax.swing.JLabel home_la_uesr_image;
    private javax.swing.JComboBox jComboBox_emp_gender;
    private javax.swing.JComboBox jComboBox_is_active;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jTable_emp;
    private javax.swing.JLabel login_la_cloce;
    private javax.swing.JLabel login_la_mini;
    private javax.swing.JTextField tx_emp_address;
    private javax.swing.JTextField tx_emp_contact_number;
    private javax.swing.JTextField tx_emp_empid;
    private javax.swing.JTextField tx_emp_f_name;
    private javax.swing.JTextField tx_emp_l_name;
    private javax.swing.JTextField tx_emp_nic;
    // End of variables declaration//GEN-END:variables

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> SystemClose()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> System cloce <<<<<<<<<<<   
    void SystemClose() {
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close the System ?", "Exit System", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            // setDefaultCloseOperation(EXIT_ON_CLOSE);
             u.insertUserClose(tx_emp_empid,agent_la_date.getText(), agent_la_time.getText());
            System.exit(0);
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            login_la_cloce.setBackground(new Color(153, 204, 255));
        }
    }
    //>>>>>>>>> System cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> Singltan class 
     * *** >>> Why ------------->>> ek object ekk hdnn
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> Get Instance <<<<<<<<<<<  
    private static final employee employ = new employee();

    public static employee getCallPopup() {
        return employ;
    }
//>>>>>>>>> Get Instance <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> cleareFields <<<<<<<<<<<      
    private void cleareFields() {
        tx_emp_f_name.setText(null);
        tx_emp_contact_number.setText(null);
        tx_emp_l_name.setText(null);
        jComboBox_emp_gender.setSelectedIndex(0);
        tx_emp_address.setText(null);
        jComboBox_is_active.setSelectedIndex(0);
        tx_emp_nic.setText(null);
        tx_emp_empid.setText(null);
        idsearch = 0;
        emp_la_enter.setVisible(true);
        emp_la_new.setVisible(false);
        jTable_emp.removeAll();
        selectAllemployee();
        tx_emp_empid.grabFocus();
    }
//>>>>>>>>> cleareFields <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> searchAgent <<<<<<<<<<<      
    private void searchEMP() {
        try {
            ResultSet rs = DBClass.getData("select * from employee where idemployee='" + tx_emp_empid.getText() + "' order by idemployee");
            if (DBClass.r.isBeforeFirst() == true) {
                while (rs.next()) {
                    idsearch = (rs.getInt("idemployee"));
                    tx_emp_f_name.setText(rs.getString("fname"));
                    tx_emp_l_name.setText(rs.getString("lname"));
                    tx_emp_contact_number.setText(rs.getString("tel"));
                    tx_emp_nic.setText(rs.getString("nic"));
                    tx_emp_address.setText(rs.getString("address"));

                    if (rs.getString("gender").equals("Male")) {
                        jComboBox_emp_gender.setSelectedIndex(0);
                    } else if (rs.getString("gender").equals("Female")) {
                        jComboBox_emp_gender.setSelectedIndex(1);
                    }

                    if (rs.getInt("status") == 1) {
                        jComboBox_is_active.setSelectedIndex(0);
                    } else{
                        jComboBox_is_active.setSelectedIndex(2);
                    }
                    emp_la_enter.setVisible(false);
                    emp_la_new.setVisible(true);
                }
            }
        } catch (Exception ex) {
            systemLogger.initLogger(employee.class).error(" searchAgent() Error",ex);
            JOptionPane.showMessageDialog(null, "Error EmployeesearchEMPt !!! \n searchEMP() \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
             tx_emp_empid.grabFocus();

        }
    }
    //>>>>>>>>> searchAgent <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> emterMouseClickMethod <<<<<<<<<<< 
    private void emterMouseClickMethod() {
        if (tx_emp_empid.getText().trim().isEmpty()) {
            tx_emp_empid.grabFocus();
        } else if (tx_emp_f_name.getText().trim().isEmpty()) {
            tx_emp_f_name.grabFocus();
        } else if (tx_emp_l_name.getText().trim().isEmpty()) {
            tx_emp_l_name.grabFocus();
        } else if (tx_emp_nic.getText().trim().isEmpty()) {
            tx_emp_nic.grabFocus();
        } else if (tx_emp_contact_number.getText().trim().isEmpty()) {
            tx_emp_contact_number.grabFocus();
        } else if (tx_emp_address.getText().trim().isEmpty()) {
            tx_emp_address.grabFocus();
        } else if (!(tx_emp_empid.getText().trim().isEmpty() & tx_emp_f_name.getText().trim().isEmpty() & tx_emp_l_name.getText().trim().isEmpty() & tx_emp_nic.getText().trim().isEmpty() & tx_emp_contact_number.getText().trim().isEmpty()
                & tx_emp_address.getText().trim().isEmpty())) {
            addJTable();
        }
    }
    //>>>>>>>>> emterMouseClickMethod <<<<<<<<<<<         
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     

    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>> insert to db table / call selectall method
     */
//>>>>>>>>> addJTable <<<<<<<<<<<      
    private void addJTable() {
        try {
            int bb = jComboBox_is_active.getSelectedIndex();
            if (bb == 0) {
                bb = 1;
            } else if (bb == 1) {
                bb = 0;
            } 
            DBClass.putData("insert into employee(idemployee,fname,lname,nic,tel,address,gender,date,status) values("
                    + " '" + tx_emp_empid.getText() + "','" + tx_emp_f_name.getText() + "' , '" + tx_emp_l_name.getText() + "' , '" + tx_emp_nic.getText() + "', '" + tx_emp_contact_number.getText() + "' ,'"
                    + tx_emp_address.getText() + "'  ,'" + jComboBox_emp_gender.getSelectedItem().toString() + "' ,'" + agent_la_date.getText() + "','" + bb + "' )");
            cleareFields();
        } catch (Exception ex) {
              systemLogger.initLogger(employee.class).error(" addJTable() Error",ex);
            JOptionPane.showMessageDialog(null, "Error EmployeeTableInsert !!! \n addToTable() \n" , "Error Massage", JOptionPane.ERROR_MESSAGE);
             tx_emp_empid.grabFocus();
        }
    }
//>>>>>>>>> addJTable <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> selectAllemployee <<<<<<<<<<<      
    private void selectAllemployee() {
        try {
            DefaultTableModel defTabMod = (DefaultTableModel) jTable_emp.getModel();
            defTabMod.getDataVector().removeAllElements();
            DBClass.getData("select * from employee order by idemployee");
           while (DBClass.r.next()) {
               Vector v = new Vector();
                    v.add(DBClass.r.getString("idemployee"));
                    v.add(DBClass.r.getString("fname"));
                    v.add(DBClass.r.getString("lname"));
                    v.add(DBClass.r.getString("tel"));
                    v.add(DBClass.r.getString("nic"));
                    v.add(DBClass.r.getString("address"));
                    v.add(DBClass.r.getString("gender"));
                    if (DBClass.r.getInt("status") == 1) {
                        v.add("Active");
                        defTabMod.addRow(v);
                    }else if(DBClass.r.getInt("status") == 2) {
                        v.add("Delete");
                        defTabMod.addRow(v);
                    } else {
                        v.add("Inactive");
                        defTabMod.addRow(v);
                    }

                }
            
        } catch (Exception ex) {
           // ex.printStackTrace();
             systemLogger.initLogger(employee.class).error(" selectAllDoctorRep() Error",ex);
          JOptionPane.showMessageDialog(null, "Error EmployeeTableSearch !!! \n selectAllemployee() \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
           tx_emp_empid.grabFocus();
        }

    }
//>>>>>>>>>selectAllDoctorRep <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> updaterep <<<<<<<<<<<     
    private void updatemp() {
        try {
            int bb = jComboBox_is_active.getSelectedIndex();
            if (bb == 0) {
                bb = 1;
            } else if (bb == 1) {
                bb = 0;
            } 

            DBClass.putData("update employee set fname='" + tx_emp_f_name.getText() + "',lname='" + tx_emp_l_name.getText() + "',nic='" + tx_emp_nic.getText()
                    + "',tel='" + tx_emp_contact_number.getText() + "',address ='" + tx_emp_address.getText() + "',gender ='" + jComboBox_emp_gender.getSelectedItem().toString()
                    + "',status ='" + bb + "' where  idemployee  ='" + idsearch + "' ");
            JOptionPane.showMessageDialog(this, "Update Successful", "Updated", JOptionPane.OK_OPTION);
            cleareFields();
          
        } catch (Exception e) {
            systemLogger.initLogger(employee.class).error(" updaterep() Error",e);
            JOptionPane.showMessageDialog(null, "Error EmployeeTableUpdate !!! \n updatemp() \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
             tx_emp_empid.grabFocus();
        }
    }
    //>>>>>>>>> updaterep <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> deleterep <<<<<<<<<<<     
    private void deleteemp() {
        try {
            int bb = 2;

            int x = JOptionPane.showConfirmDialog(this, "Do you sure Delete Employee ?", "Delete Verify", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == x) {
                DBClass.putData("update employee  set status ='" + bb + "' where  idemployee  ='" + idsearch + "' ");
                cleareFields();
               
            } else if (JOptionPane.NO_OPTION == x) {
                setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            }
        } catch (Exception e) {
             systemLogger.initLogger(employee.class).error(" deleterep() Error",e);
            JOptionPane.showMessageDialog(null, "Error EmployeeTableDelete !!! \n deleteemp() \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
             tx_emp_empid.grabFocus();
        }
    }
    //>>>>>>>>> deleterep <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> txValidateKeyEvent()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<      
    private void txValidateKeyEvent(KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld) {

        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenthNeedFeld) {
            if (txType.equals("NIC")) {
                if (txName.getText().length() == 9) {
                    if ((iNumber == 86)) {
                        txName.setEditable(true);
                    }
                } else if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("A")) {

                if ((iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 32) | (iNumber == 46)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }
    }
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   



}
