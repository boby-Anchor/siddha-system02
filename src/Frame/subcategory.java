/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHETHANA
 */
public class subcategory extends javax.swing.JFrame {

    UniversalMethod u = new UniversalMethod();
    public static int idCategorysearch = 0;
    public static int statusCategorysearch = 0;
    public static int idSubCategorysearch = 0;
    public static int statusSubCategorysearch = 0;

    public static category i;

    public subcategory() {
        initComponents();
           systemLogger.initLogger(subcategory.class).info("Open SubCatogery Frme");
               u.imageMethod("/img/newB2.png", subcategory_la_new);
        imageFirst();
        comboBoxAddCategoryName();
        jComboBox1.grabFocus();
          UniversalMethod.TimeMethod(agent_la_date, agent_la_time);
        subcategory_la_enter.setVisible(true);
        subcategory_la_new.setVisible(false);
        doctor_la_login_use_name.setText(UniversalMethod.getLogUser());
        agent_la_home_img.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        login_la_mini = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        doctor_la_login_use_name = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        agent_la_date = new javax.swing.JLabel();
        subcategory_la_update = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        tx_subcategory = new javax.swing.JTextField();
        subcategory_la_enter = new javax.swing.JLabel();
        home_la_uesr_image = new javax.swing.JLabel();
        agent_la_home_img = new javax.swing.JLabel();
        login_la_cloce = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        agent_la_time = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        subcategory_la_delete = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        subcategory_la_category = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        subcategory_la_new = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        Subcategory_jTable = new javax.swing.JTable();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1380, 768));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1380, 768));
        getContentPane().setLayout(null);

        login_la_mini.setBackground(new java.awt.Color(255, 255, 255));
        login_la_mini.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_mini.setForeground(new java.awt.Color(0, 0, 0));
        login_la_mini.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_miniMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_miniMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_miniMouseExited(evt);
            }
        });
        getContentPane().add(login_la_mini);
        login_la_mini.setBounds(1295, 10, 30, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(":");
        jLabel5.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel5);
        jLabel5.setBounds(200, 100, 30, 30);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 43, 1370, 2);

        jLabel1.setBackground(new java.awt.Color(51, 204, 255));
        jLabel1.setFont(new java.awt.Font("Eras Bold ITC", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SUBCATEGORY");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(760, 1, 330, 40);

        doctor_la_login_use_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        doctor_la_login_use_name.setForeground(new java.awt.Color(255, 255, 255));
        doctor_la_login_use_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        doctor_la_login_use_name.setText("Invoice");
        getContentPane().add(doctor_la_login_use_name);
        doctor_la_login_use_name.setBounds(330, 5, 260, 35);

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(300, 380, 310, 380);

        agent_la_date.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_date.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_date.setText("Invoice");
        agent_la_date.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_date);
        agent_la_date.setBounds(10, 5, 130, 35);

        subcategory_la_update.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        subcategory_la_update.setForeground(new java.awt.Color(0, 0, 0));
        subcategory_la_update.setText("Branch Name");
        subcategory_la_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subcategory_la_updateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                subcategory_la_updateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                subcategory_la_updateMouseExited(evt);
            }
        });
        getContentPane().add(subcategory_la_update);
        subcategory_la_update.setBounds(210, 290, 120, 40);

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator5);
        jSeparator5.setBounds(0, 270, 1370, 10);

        tx_subcategory.setBackground(new java.awt.Color(255, 255, 255));
        tx_subcategory.setFont(new java.awt.Font("0KDBOLIDDA", 1, 14)); // NOI18N
        tx_subcategory.setForeground(new java.awt.Color(0, 0, 0));
        tx_subcategory.setText(" ");
        tx_subcategory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_subcategoryKeyPressed(evt);
            }
        });
        getContentPane().add(tx_subcategory);
        tx_subcategory.setBounds(910, 100, 390, 33);

        subcategory_la_enter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        subcategory_la_enter.setForeground(new java.awt.Color(0, 0, 0));
        subcategory_la_enter.setText("Branch Name");
        subcategory_la_enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subcategory_la_enterMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                subcategory_la_enterMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                subcategory_la_enterMouseExited(evt);
            }
        });
        getContentPane().add(subcategory_la_enter);
        subcategory_la_enter.setBounds(550, 290, 120, 40);

        home_la_uesr_image.setText("userlogo");
        getContentPane().add(home_la_uesr_image);
        home_la_uesr_image.setBounds(290, 10, 30, 30);

        agent_la_home_img.setText("jLabel1");
        agent_la_home_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseExited(evt);
            }
        });
        getContentPane().add(agent_la_home_img);
        agent_la_home_img.setBounds(600, 5, 80, 30);

        login_la_cloce.setBackground(new java.awt.Color(255, 255, 255));
        login_la_cloce.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_cloce.setForeground(new java.awt.Color(0, 0, 0));
        login_la_cloce.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_cloce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseExited(evt);
            }
        });
        getContentPane().add(login_la_cloce);
        login_la_cloce.setBounds(1330, 10, 30, 30);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Sub-Category Name");
        jLabel10.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel10);
        jLabel10.setBounds(700, 100, 180, 30);

        agent_la_time.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_time.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_time.setText("Invoice");
        agent_la_time.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_time);
        agent_la_time.setBounds(150, 5, 130, 35);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Category Name");
        jLabel4.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 100, 160, 30);

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(280, 5, 20, 30);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(140, 5, 20, 30);

        subcategory_la_delete.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        subcategory_la_delete.setForeground(new java.awt.Color(0, 0, 0));
        subcategory_la_delete.setText("Branch Name");
        subcategory_la_delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subcategory_la_deleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                subcategory_la_deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                subcategory_la_deleteMouseExited(evt);
            }
        });
        getContentPane().add(subcategory_la_delete);
        subcategory_la_delete.setBounds(380, 290, 120, 40);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(580, 5, 20, 30);

        subcategory_la_category.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        subcategory_la_category.setForeground(new java.awt.Color(0, 0, 0));
        subcategory_la_category.setText("Branch Name");
        subcategory_la_category.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subcategory_la_categoryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                subcategory_la_categoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                subcategory_la_categoryMouseExited(evt);
            }
        });
        getContentPane().add(subcategory_la_category);
        subcategory_la_category.setBounds(1150, 290, 140, 50);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText(":");
        jLabel11.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel11);
        jLabel11.setBounds(890, 100, 30, 30);

        subcategory_la_new.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        subcategory_la_new.setForeground(new java.awt.Color(0, 0, 0));
        subcategory_la_new.setText("New");
        subcategory_la_new.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subcategory_la_newMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                subcategory_la_newMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                subcategory_la_newMouseExited(evt);
            }
        });
        getContentPane().add(subcategory_la_new);
        subcategory_la_new.setBounds(700, 290, 120, 40);

        jComboBox1.setFont(new java.awt.Font("0KDBOLIDDA", 1, 14)); // NOI18N
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(230, 102, 360, 30);

        Subcategory_jTable.setBackground(new java.awt.Color(255, 255, 255));
        Subcategory_jTable.setForeground(new java.awt.Color(0, 0, 0));
        Subcategory_jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "SubCategory", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Subcategory_jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Subcategory_jTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Subcategory_jTable);
        if (Subcategory_jTable.getColumnModel().getColumnCount() > 0) {
            Subcategory_jTable.getColumnModel().getColumn(0).setMinWidth(70);
            Subcategory_jTable.getColumnModel().getColumn(0).setPreferredWidth(70);
            Subcategory_jTable.getColumnModel().getColumn(0).setMaxWidth(70);
            Subcategory_jTable.getColumnModel().getColumn(2).setMinWidth(100);
            Subcategory_jTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            Subcategory_jTable.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(780, 380, 440, 380);

        background.setBackground(new java.awt.Color(234, 232, 232));
        background.setForeground(new java.awt.Color(255, 255, 255));
        background.setText("jLabel1");
        getContentPane().add(background);
        background.setBounds(0, 0, 1390, 770);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void login_la_miniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_login_la_miniMouseClicked

    private void login_la_miniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseEntered
        //    login_la_mini.setBackground(Color.gray);
        u.imageMethod("/img/mini2.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseEntered

    private void login_la_miniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseExited
        //    login_la_mini.setBackground(Color.white);
        u.imageMethod("/img/mini.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseExited

    private void subcategory_la_updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_updateMouseEntered
        u.imageMethod("/img/update2.png", subcategory_la_update);
    }//GEN-LAST:event_subcategory_la_updateMouseEntered

    private void subcategory_la_updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_updateMouseExited
        u.imageMethod("/img/update.png", subcategory_la_update);
    }//GEN-LAST:event_subcategory_la_updateMouseExited

    private void subcategory_la_enterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_enterMouseEntered
        u.imageMethod("/img/enter2.png", subcategory_la_enter);
    }//GEN-LAST:event_subcategory_la_enterMouseEntered

    private void subcategory_la_enterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_enterMouseExited
        u.imageMethod("/img/enter.png", subcategory_la_enter);
    }//GEN-LAST:event_subcategory_la_enterMouseExited

    private void agent_la_home_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you sure Go to The Home ?", "Change Interface", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            home.getCallPopup().setVisible(true);
            this.dispose();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        }
    }//GEN-LAST:event_agent_la_home_imgMouseClicked

    private void agent_la_home_imgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseEntered
        u.imageMethod("/img/home_2_2.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseEntered

    private void agent_la_home_imgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseExited
        u.imageMethod("/img/home_.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseExited

    private void login_la_cloceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseClicked
        SystemClose();
    }//GEN-LAST:event_login_la_cloceMouseClicked

    private void login_la_cloceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseEntered
        //    login_la_cloce.setBackground(Color.red);
        u.imageMethod("/img/exti.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseEntered

    private void login_la_cloceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseExited
        //    login_la_cloce.setBackground(Color.white);
        u.imageMethod("/img/exti2.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseExited

    private void subcategory_la_deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_deleteMouseEntered
        u.imageMethod("/img/delete2.png", subcategory_la_delete);
    }//GEN-LAST:event_subcategory_la_deleteMouseEntered

    private void subcategory_la_deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_deleteMouseExited
        u.imageMethod("/img/delete.png", subcategory_la_delete);
    }//GEN-LAST:event_subcategory_la_deleteMouseExited

    private void subcategory_la_categoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_categoryMouseEntered
        u.imageMethod("/img/subcategory2.png", subcategory_la_category);
    }//GEN-LAST:event_subcategory_la_categoryMouseEntered

    private void subcategory_la_categoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_categoryMouseExited
        u.imageMethod("/img/subcategory.png", subcategory_la_category);
    }//GEN-LAST:event_subcategory_la_categoryMouseExited

    private void subcategory_la_categoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_categoryMouseClicked
         u.imageMethod("/img/subcategory2.png", subcategory_la_category);
        int x = JOptionPane.showConfirmDialog(this, "Do you want to open Category Intreface", "Open Intreface", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            i.setVisible(true);
            this.dispose();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_subcategory_la_categoryMouseClicked

    private void tx_subcategoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_subcategoryKeyPressed
        txValidateKeyEvent(evt, tx_subcategory, "NA", 20);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!tx_subcategory.getText().trim().isEmpty()) {
                subcategory_la_enter.grabFocus();
            } else {
                tx_subcategory.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_subcategoryKeyPressed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, jComboBox1, tx_subcategory);
        }
    }//GEN-LAST:event_jComboBox1KeyPressed

    private void subcategory_la_enterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_enterMouseClicked
         u.imageMethod("/img/enter2.png", subcategory_la_enter );
        if (!(tx_subcategory.getText().trim().isEmpty())) {
            searchitemcatogeryid(jComboBox1.getSelectedItem().toString());
            addJTable();
        } else {
            tx_subcategory.grabFocus();
        }
    }//GEN-LAST:event_subcategory_la_enterMouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel defTabMod = (DefaultTableModel) jTable1.getModel();
        String searchName = (defTabMod.getValueAt(jTable1.getSelectedRow(), 0).toString());
        searchitemcatogeryid(searchName);
       selectAllitemsubcatogery();
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void subcategory_la_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_updateMouseClicked
        u.imageMethod("/img/update2.png",  subcategory_la_update );
        if (idSubCategorysearch == 0) {
            JOptionPane.showMessageDialog(this, "Please Select the SubCategory", "Not Selected", JOptionPane.OK_OPTION);
        } else {
            updaterep();
        }
    }//GEN-LAST:event_subcategory_la_updateMouseClicked

    private void subcategory_la_deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_deleteMouseClicked
       u.imageMethod("/img/delete2.png", subcategory_la_delete );
        if (idSubCategorysearch == 0) {
            JOptionPane.showMessageDialog(this, "Please Select the SubCategory Type", "Not Selected", JOptionPane.OK_OPTION);
        } else {
            deleterep();
        }
    }//GEN-LAST:event_subcategory_la_deleteMouseClicked

    private void Subcategory_jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Subcategory_jTableMouseClicked
        DefaultTableModel defTabMod = (DefaultTableModel) Subcategory_jTable.getModel();
        idSubCategorysearch = Integer.parseInt(defTabMod.getValueAt(Subcategory_jTable.getSelectedRow(), 0).toString());
        tx_subcategory.setText(defTabMod.getValueAt(Subcategory_jTable.getSelectedRow(), 1).toString());
        subcategory_la_enter.setVisible(false);
        subcategory_la_new.setVisible(true);
        searchitemSubcatogeryIDCategory(idSubCategorysearch);
    }//GEN-LAST:event_Subcategory_jTableMouseClicked

    private void subcategory_la_newMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_newMouseClicked
        u.imageMethod("/img/newB2.png", subcategory_la_new);
        subcategory_la_enter.setVisible(true);
        subcategory_la_new.setVisible(false);
        cleareFields();
    }//GEN-LAST:event_subcategory_la_newMouseClicked

    private void subcategory_la_newMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_newMouseEntered
        u.imageMethod("/img/newB2.png", subcategory_la_new);
    }//GEN-LAST:event_subcategory_la_newMouseEntered

    private void subcategory_la_newMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subcategory_la_newMouseExited
        u.imageMethod("/img/newB.png", subcategory_la_new);
    }//GEN-LAST:event_subcategory_la_newMouseExited

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
       
    }//GEN-LAST:event_jComboBox1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(subcategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(subcategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(subcategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(subcategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new subcategory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Subcategory_jTable;
    private javax.swing.JLabel agent_la_date;
    private javax.swing.JLabel agent_la_home_img;
    private javax.swing.JLabel agent_la_time;
    private javax.swing.JLabel background;
    private javax.swing.JLabel doctor_la_login_use_name;
    private javax.swing.JLabel home_la_uesr_image;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel login_la_cloce;
    private javax.swing.JLabel login_la_mini;
    private javax.swing.JLabel subcategory_la_category;
    private javax.swing.JLabel subcategory_la_delete;
    private javax.swing.JLabel subcategory_la_enter;
    private javax.swing.JLabel subcategory_la_new;
    private javax.swing.JLabel subcategory_la_update;
    private javax.swing.JTextField tx_subcategory;
    // End of variables declaration//GEN-END:variables

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> SystemClose()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> System cloce <<<<<<<<<<<   
    void SystemClose() {
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close the System ?", "Exit System", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            i.setVisible(true);
            cat.dispose();

        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }
    //>>>>>>>>> System cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> Singltan class 
     * *** >>> Why ------------->>> ek object ekk hdnn
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> Get Instance <<<<<<<<<<<  
    private static final subcategory cat = new subcategory();

    public static subcategory getCallPopup(category ii) {
        i = ii;
        return cat;
    }
//>>>>>>>>> Get Instance <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
    private void imageFirst() {
        u.imageMethod(background, home_la_uesr_image, doctor_la_login_use_name, agent_la_home_img, login_la_mini, login_la_cloce);
        u.imageMethod("/img/update.png", subcategory_la_update);
        u.imageMethod("/img/delete.png", subcategory_la_delete);
        u.imageMethod("/img/enter.png", subcategory_la_enter);
        u.imageMethod("/img/category.png", subcategory_la_category);
    }
    //>>>>>>>>> imageFirst cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> txValidateKeyEvent()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<      
    private void txValidateKeyEvent(KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld) {

        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenthNeedFeld) {
            
            if (txType.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("A")) {

                if ((iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 32) | (iNumber == 46)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }
    }
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> addJTable <<<<<<<<<<<      
    private void addJTable() {
        try {
           DBClass.putData("insert into itemsubcatogery(iditemcatogery,terms,status) values ('" +idCategorysearch+ "','" + tx_subcategory.getText() + "','1') ");
           selectAllitemsubcatogery();
        } catch (Exception ex) {
             systemLogger.initLogger(doctor.class).error("addJTable()  Error",ex);
            JOptionPane.showMessageDialog(null, "Error SubCatogeryTableInsert !!! \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
            tx_subcategory.grabFocus();
        }
    }
//>>>>>>>>> addJTable <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> cleareFields <<<<<<<<<<<      
    private void cleareFields() {
        tx_subcategory.setText(null);
        jComboBox1.grabFocus();
        jComboBox1.setSelectedIndex(0);
        idCategorysearch = 0;
        statusCategorysearch = 0;
        idSubCategorysearch = 0;
        statusSubCategorysearch = 0;
        Subcategory_jTable.removeAll();
        
    }
//>>>>>>>>> cleareFields <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> selectAllitemsubcatogery <<<<<<<<<<<      
    private void selectAllitemsubcatogery() {
        try {
            DefaultTableModel defTabMod = (DefaultTableModel) Subcategory_jTable.getModel();
            defTabMod.getDataVector().removeAllElements();                          //idCategorysearch
            ResultSet rs = DBClass.getData("select * from itemsubcatogery where iditemcatogery='" + idCategorysearch + "' order by iditemsubcatogery");
            if (DBClass.r.isBeforeFirst() == true) {
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("iditemsubcatogery"));
                    v.add(rs.getString("terms"));
                    if (rs.getInt("status") == 1) {
                        v.add("Active");
                        defTabMod.addRow(v);
                    } else {
                        v.add("Inactive");
                        defTabMod.addRow(v);
                    }

                }
            }
            cleareFields();
        } catch (Exception ex) {
            systemLogger.initLogger(subcategory.class).error("selectAllitemsubcatogery()  Error",ex);
           JOptionPane.showMessageDialog(null, "Error selectAllitemsubcatogery !!! \n" , "Error Massage", JOptionPane.ERROR_MESSAGE);
            tx_subcategory.grabFocus();
        }

    }
//>>>>>>>>>selectAllitemsubcatogery <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> deleterep <<<<<<<<<<<     
    private void deleterep() {
        try {
            int bb = 2;

            int x = JOptionPane.showConfirmDialog(this, "Do you sure Delete Category Type ?", "Delete Verify", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == x) {
                DBClass.putData("update itemsubcatogery  set status ='" + bb + "' where  iditemsubcatogery  ='" + idSubCategorysearch + "' ");
                
                selectAllitemsubcatogery();
            } else if (JOptionPane.NO_OPTION == x) {
                setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            }
        } catch (Exception ex) {
             systemLogger.initLogger(subcategory.class).error("deleterep()  Error",ex);
           JOptionPane.showMessageDialog(null, "Error Deleterep !!! \n" , "Error Massage", JOptionPane.ERROR_MESSAGE);
            tx_subcategory.grabFocus();

        }
    }
    //>>>>>>>>> deleterep <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> updaterep <<<<<<<<<<<     
    private void updaterep() {
        try {
            DBClass.putData("update itemsubcatogery set terms='" + tx_subcategory.getText() + "' where  iditemsubcatogery  ='" + idSubCategorysearch + "' ");
            JOptionPane.showMessageDialog(this, "Update Successful", "Updated", JOptionPane.OK_OPTION);
            selectAllitemsubcatogery();
        } catch (Exception ex) {
                  systemLogger.initLogger(subcategory.class).error("updaterep()  Error",ex);
  JOptionPane.showMessageDialog(null, "Error Update !!! \n" , "Error Massage", JOptionPane.ERROR_MESSAGE);
   tx_subcategory.grabFocus();
        }
    }
    //>>>>>>>>> updaterep <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> searchitemcatogeryid <<<<<<<<<<<      
    private int searchitemcatogeryid(String SearchName) {
        try {
            ResultSet rs = DBClass.getData("select * from itemcatogery where name='" + SearchName + "' order by iditemcatogery");
            if (DBClass.r.isBeforeFirst() == true) {
                while (rs.next()) {
                    idCategorysearch = rs.getInt("iditemcatogery");
                 }
            }
        } catch (Exception ex) {
             systemLogger.initLogger(subcategory.class).error("searchitemcatogeryid()  Error",ex);
        JOptionPane.showMessageDialog(null, "Error searchitemcatogeryid !!! \n" , "Error Massage", JOptionPane.ERROR_MESSAGE);
         tx_subcategory.grabFocus();
        }
        return idCategorysearch;
    }
//>>>>>>>>>searchitemcatogeryid <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> searchitemcatogeryid <<<<<<<<<<<      
    private int searchitemSubcatogeryIDCategory(int SearchSUBID) {
        try {
            ResultSet rs = DBClass.getData("select iditemcatogery from itemsubcatogery where iditemsubcatogery='" + SearchSUBID + "' order by iditemsubcatogery");
            if (DBClass.r.isBeforeFirst() == true) {
                while (rs.next()) {
                     idCategorysearch = rs.getInt("iditemcatogery");
                }
            }
        } catch (Exception ex) {
              systemLogger.initLogger(subcategory.class).error("searchitemcatogeryid()  Error",ex);
            JOptionPane.showMessageDialog(null, "Error searchitemcatogeryid !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
             tx_subcategory.grabFocus();
        }
        return idCategorysearch;
    }
//>>>>>>>>>searchitemcatogeryid <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> comboBoxAddCategoryName <<<<<<<<<<<      
    private int comboBoxAddCategoryName() {
        try {
            DefaultTableModel defTabMod = (DefaultTableModel)jTable1.getModel();
            defTabMod.getDataVector().removeAllElements();
            ResultSet rs = DBClass.getData("select * from itemcatogery order by iditemcatogery");
            jComboBox1.removeAll();
            while (rs.next()) {
                Vector v = new Vector();
                jComboBox1.addItem(rs.getString("name"));
                v.add(rs.getString("name"));
                defTabMod.addRow(v);
            }

        } catch (Exception ex) {
             systemLogger.initLogger(subcategory.class).error("comboBoxAddCategoryName()  Error",ex);
               JOptionPane.showMessageDialog(null, "Error comboBoxAddCategoryName !!! \n " , "Error Massage", JOptionPane.ERROR_MESSAGE);
                tx_subcategory.grabFocus();
        }
        return idCategorysearch;
    }
//>>>>>>>>>comboBoxAddCategoryName <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
}
