/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHETHANA
 */
public class item extends javax.swing.JFrame {
UniversalMethod u = new UniversalMethod();
public static int idsearch;
    public item() {
        initComponents();
           systemLogger.initLogger(item.class).info("Open Invoice Other Products Frame");
                 
        u.imageMethod(background, home_la_uesr_image, doctor_la_login_use_name, agent_la_home_img, login_la_mini, login_la_cloce, item_la_search, item_la_update, item_la_delete, item_la_enter);
        u.imageMethod("/img/category.png",item_la_category);
        cleareFields();
        doctor_la_login_use_name.setText(UniversalMethod.getLogUser());
        u.imageMethod("/img/newB2.png", item_la_new);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agent_la_date = new javax.swing.JLabel();
        agent_la_time = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        agent_la_home_img = new javax.swing.JLabel();
        doctor_la_login_use_name = new javax.swing.JLabel();
        home_la_uesr_image = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        login_la_mini = new javax.swing.JLabel();
        login_la_cloce = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        item_tx_barcode = new javax.swing.JTextField();
        item_tx_name = new javax.swing.JTextField();
        item_tx_buy_price = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        item_la_search = new javax.swing.JLabel();
        item_la_update = new javax.swing.JLabel();
        item_la_delete = new javax.swing.JLabel();
        item_la_enter = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        item_tx_short_name = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_item = new javax.swing.JTable();
        jSeparator5 = new javax.swing.JSeparator();
        jComboBox_main_catogery = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jComboBox_is_active = new javax.swing.JComboBox();
        jComboBox_sub_catogery = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        item_tx_sell_price = new javax.swing.JTextField();
        jComboBox_supplier = new javax.swing.JComboBox();
        item_la_category = new javax.swing.JLabel();
        item_la_new = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1380, 768));
        setUndecorated(true);
        getContentPane().setLayout(null);

        agent_la_date.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_date.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_date.setText("Invoice");
        agent_la_date.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_date);
        agent_la_date.setBounds(10, 5, 130, 35);

        agent_la_time.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_time.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_time.setText("Invoice");
        agent_la_time.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_time);
        agent_la_time.setBounds(150, 5, 130, 35);

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(280, 5, 20, 30);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(140, 5, 20, 30);

        agent_la_home_img.setText("jLabel1");
        agent_la_home_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseExited(evt);
            }
        });
        getContentPane().add(agent_la_home_img);
        agent_la_home_img.setBounds(600, 5, 80, 30);

        doctor_la_login_use_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        doctor_la_login_use_name.setForeground(new java.awt.Color(255, 255, 255));
        doctor_la_login_use_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        doctor_la_login_use_name.setText("Invoice");
        getContentPane().add(doctor_la_login_use_name);
        doctor_la_login_use_name.setBounds(330, 5, 260, 35);

        home_la_uesr_image.setText("userlogo");
        getContentPane().add(home_la_uesr_image);
        home_la_uesr_image.setBounds(290, 10, 30, 30);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(580, 5, 20, 30);

        jLabel1.setBackground(new java.awt.Color(51, 204, 255));
        jLabel1.setFont(new java.awt.Font("Eras Bold ITC", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("iTEM");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(760, 1, 330, 40);

        login_la_mini.setBackground(new java.awt.Color(255, 255, 255));
        login_la_mini.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_mini.setForeground(new java.awt.Color(0, 0, 0));
        login_la_mini.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_miniMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_miniMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_miniMouseEntered(evt);
            }
        });
        getContentPane().add(login_la_mini);
        login_la_mini.setBounds(1295, 10, 30, 30);

        login_la_cloce.setBackground(new java.awt.Color(255, 255, 255));
        login_la_cloce.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_cloce.setForeground(new java.awt.Color(0, 0, 0));
        login_la_cloce.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_cloce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseEntered(evt);
            }
        });
        getContentPane().add(login_la_cloce);
        login_la_cloce.setBounds(1330, 10, 30, 30);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 43, 1370, 2);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Barcode");
        jLabel4.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel4);
        jLabel4.setBounds(40, 80, 160, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(":");
        jLabel5.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel5);
        jLabel5.setBounds(200, 80, 30, 30);

        item_tx_barcode.setBackground(new java.awt.Color(255, 255, 255));
        item_tx_barcode.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        item_tx_barcode.setForeground(new java.awt.Color(0, 0, 0));
        item_tx_barcode.setText("jTextField1");
        item_tx_barcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                item_tx_barcodeKeyPressed(evt);
            }
        });
        getContentPane().add(item_tx_barcode);
        item_tx_barcode.setBounds(220, 80, 390, 33);

        item_tx_name.setBackground(new java.awt.Color(255, 255, 255));
        item_tx_name.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        item_tx_name.setForeground(new java.awt.Color(0, 0, 0));
        item_tx_name.setText("jTextField1");
        item_tx_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                item_tx_nameKeyPressed(evt);
            }
        });
        getContentPane().add(item_tx_name);
        item_tx_name.setBounds(820, 80, 460, 33);

        item_tx_buy_price.setBackground(new java.awt.Color(255, 255, 255));
        item_tx_buy_price.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        item_tx_buy_price.setForeground(new java.awt.Color(0, 0, 0));
        item_tx_buy_price.setText("jTextField1");
        item_tx_buy_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                item_tx_buy_priceKeyPressed(evt);
            }
        });
        getContentPane().add(item_tx_buy_price);
        item_tx_buy_price.setBounds(220, 215, 390, 33);

        jLabel13.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText(":");
        jLabel13.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel13);
        jLabel13.setBounds(200, 215, 30, 30);

        jLabel15.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText(":");
        jLabel15.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel15);
        jLabel15.setBounds(200, 170, 30, 30);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText(":");
        jLabel9.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel9);
        jLabel9.setBounds(800, 125, 30, 30);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText(":");
        jLabel7.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel7);
        jLabel7.setBounds(800, 80, 30, 30);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Supplier");
        jLabel6.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel6);
        jLabel6.setBounds(680, 125, 120, 30);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Item Name");
        jLabel8.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel8);
        jLabel8.setBounds(680, 80, 110, 30);

        jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Main Catogery");
        jLabel14.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel14);
        jLabel14.setBounds(40, 170, 160, 30);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Buy Price");
        jLabel12.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel12);
        jLabel12.setBounds(40, 215, 160, 30);

        item_la_search.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        item_la_search.setForeground(new java.awt.Color(0, 0, 0));
        item_la_search.setText("Search");
        item_la_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item_la_searchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                item_la_searchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                item_la_searchMouseExited(evt);
            }
        });
        getContentPane().add(item_la_search);
        item_la_search.setBounds(40, 330, 120, 40);

        item_la_update.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        item_la_update.setForeground(new java.awt.Color(0, 0, 0));
        item_la_update.setText("Update");
        item_la_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item_la_updateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                item_la_updateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                item_la_updateMouseExited(evt);
            }
        });
        getContentPane().add(item_la_update);
        item_la_update.setBounds(220, 330, 120, 40);

        item_la_delete.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        item_la_delete.setForeground(new java.awt.Color(0, 0, 0));
        item_la_delete.setText("Delete");
        item_la_delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item_la_deleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                item_la_deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                item_la_deleteMouseExited(evt);
            }
        });
        getContentPane().add(item_la_delete);
        item_la_delete.setBounds(390, 330, 120, 40);

        item_la_enter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        item_la_enter.setForeground(new java.awt.Color(0, 0, 0));
        item_la_enter.setText("Enter");
        item_la_enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item_la_enterMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                item_la_enterMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                item_la_enterMouseExited(evt);
            }
        });
        getContentPane().add(item_la_enter);
        item_la_enter.setBounds(560, 330, 120, 40);

        jLabel22.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Is Active");
        jLabel22.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel22);
        jLabel22.setBounds(680, 262, 120, 30);

        jLabel17.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText(":");
        jLabel17.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel17);
        jLabel17.setBounds(800, 260, 30, 30);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Short Name");
        jLabel10.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel10);
        jLabel10.setBounds(40, 130, 120, 30);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText(":");
        jLabel11.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel11);
        jLabel11.setBounds(200, 130, 30, 30);

        item_tx_short_name.setBackground(new java.awt.Color(255, 255, 255));
        item_tx_short_name.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        item_tx_short_name.setForeground(new java.awt.Color(0, 0, 0));
        item_tx_short_name.setText("jTextField1");
        item_tx_short_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                item_tx_short_nameKeyPressed(evt);
            }
        });
        getContentPane().add(item_tx_short_name);
        item_tx_short_name.setBounds(220, 130, 390, 33);

        jTable_item.setBackground(new java.awt.Color(255, 255, 255));
        jTable_item.setForeground(new java.awt.Color(0, 0, 0));
        jTable_item.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Barcode", "Item Name", "Short Name", "Supplier", "Sub Cateogery", "Buy Price", "Sell Price", "Is Active"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_itemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_item);
        if (jTable_item.getColumnModel().getColumnCount() > 0) {
            jTable_item.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_item.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_item.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_item.getColumnModel().getColumn(2).setMinWidth(250);
            jTable_item.getColumnModel().getColumn(2).setPreferredWidth(250);
            jTable_item.getColumnModel().getColumn(2).setMaxWidth(250);
            jTable_item.getColumnModel().getColumn(6).setMinWidth(150);
            jTable_item.getColumnModel().getColumn(6).setPreferredWidth(150);
            jTable_item.getColumnModel().getColumn(6).setMaxWidth(150);
            jTable_item.getColumnModel().getColumn(7).setMinWidth(150);
            jTable_item.getColumnModel().getColumn(7).setPreferredWidth(150);
            jTable_item.getColumnModel().getColumn(7).setMaxWidth(150);
            jTable_item.getColumnModel().getColumn(8).setMinWidth(100);
            jTable_item.getColumnModel().getColumn(8).setPreferredWidth(100);
            jTable_item.getColumnModel().getColumn(8).setMaxWidth(100);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 400, 1350, 360);

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator5);
        jSeparator5.setBounds(0, 320, 1370, 10);

        jComboBox_main_catogery.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_main_catogery.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_main_catogery.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_main_catogery.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A" }));
        jComboBox_main_catogery.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_main_catogeryKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_main_catogery);
        jComboBox_main_catogery.setBounds(220, 170, 390, 33);

        jLabel16.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Sub Catogery");
        jLabel16.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel16);
        jLabel16.setBounds(680, 170, 130, 30);

        jLabel18.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText(":");
        jLabel18.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel18);
        jLabel18.setBounds(800, 170, 30, 30);

        jComboBox_is_active.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_is_active.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_is_active.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_is_active.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Inactive" }));
        jComboBox_is_active.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_is_activeKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_is_active);
        jComboBox_is_active.setBounds(820, 262, 460, 33);

        jComboBox_sub_catogery.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_sub_catogery.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_sub_catogery.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_sub_catogery.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A" }));
        jComboBox_sub_catogery.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_sub_catogeryKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_sub_catogery);
        jComboBox_sub_catogery.setBounds(820, 170, 460, 33);

        jLabel19.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Sell Price");
        jLabel19.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel19);
        jLabel19.setBounds(680, 215, 120, 30);

        jLabel20.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText(":");
        jLabel20.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel20);
        jLabel20.setBounds(800, 215, 30, 30);

        item_tx_sell_price.setBackground(new java.awt.Color(255, 255, 255));
        item_tx_sell_price.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        item_tx_sell_price.setForeground(new java.awt.Color(0, 0, 0));
        item_tx_sell_price.setText("jTextField1");
        item_tx_sell_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                item_tx_sell_priceKeyPressed(evt);
            }
        });
        getContentPane().add(item_tx_sell_price);
        item_tx_sell_price.setBounds(820, 215, 460, 33);

        jComboBox_supplier.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_supplier.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_supplier.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_supplier.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A" }));
        jComboBox_supplier.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_supplierKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_supplier);
        jComboBox_supplier.setBounds(820, 125, 460, 33);

        item_la_category.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        item_la_category.setForeground(new java.awt.Color(0, 0, 0));
        item_la_category.setText("Catogery");
        item_la_category.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item_la_categoryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                item_la_categoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                item_la_categoryMouseExited(evt);
            }
        });
        getContentPane().add(item_la_category);
        item_la_category.setBounds(980, 330, 130, 50);

        item_la_new.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        item_la_new.setForeground(new java.awt.Color(0, 0, 0));
        item_la_new.setText("New");
        item_la_new.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item_la_newMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                item_la_newMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                item_la_newMouseExited(evt);
            }
        });
        getContentPane().add(item_la_new);
        item_la_new.setBounds(710, 330, 120, 40);

        background.setBackground(new java.awt.Color(234, 232, 232));
        background.setForeground(new java.awt.Color(255, 255, 255));
        background.setText("jLabel1");
        getContentPane().add(background);
        background.setBounds(0, 0, 1380, 770);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agent_la_home_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseClicked
        u.imageMethod("/img/homeB1.png", agent_la_home_img); 
        if(UniversalMethod.getuserType().equals("Admin") | UniversalMethod.getuserType().equals("Maneger") ){
            int x = JOptionPane.showConfirmDialog(this, "Do you sure Go to The Home ?", "Change Interface", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == x) {
                    home.getCallPopup().setVisible(true);
                    this.dispose();
             } else if (JOptionPane.NO_OPTION == x) {
                 setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                 item_tx_barcode.grabFocus();
             }
        }else if(UniversalMethod.getuserType().equals("Caller")  | UniversalMethod.getuserType().equals("User")){
             int x = JOptionPane.showConfirmDialog(this, "Do you sure Go to The Home ?", "Change Interface", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == x) {
                    home_user.getCallPopup().setVisible(true);
                    this.dispose();
             } else if (JOptionPane.NO_OPTION == x) {
                 setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                 item_tx_barcode.grabFocus();
             }
        }else if( UniversalMethod.getuserType().equals("Stock Keeper")){
             int x = JOptionPane.showConfirmDialog(this, "Do you sure Go to The Home ?", "Change Interface", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == x) {
                    home_stock.getCallPopup().setVisible(true);
                    this.dispose();
             } else if (JOptionPane.NO_OPTION == x) {
                 setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                 item_tx_barcode.grabFocus();
             }
        }
    }//GEN-LAST:event_agent_la_home_imgMouseClicked

    private void agent_la_home_imgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseEntered
        u.imageMethod("/img/homeB2.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseEntered

    private void agent_la_home_imgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseExited
       u.imageMethod("/img/homeB1.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseExited

    private void login_la_miniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_login_la_miniMouseClicked

    private void login_la_miniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseEntered
        //    login_la_mini.setBackground(Color.gray);
        u.imageMethod("/img/mini2.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseEntered

    private void login_la_miniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseExited
        //    login_la_mini.setBackground(Color.white);
        u.imageMethod("/img/mini.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseExited

    private void login_la_cloceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseClicked
        SystemClose();
    }//GEN-LAST:event_login_la_cloceMouseClicked

    private void login_la_cloceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseEntered
        //    login_la_cloce.setBackground(Color.red);
        u.imageMethod("/img/exti.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseEntered

    private void login_la_cloceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseExited
        //    login_la_cloce.setBackground(Color.white);
        u.imageMethod("/img/exti2.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseExited

    private void item_la_searchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_searchMouseEntered
        u.imageMethod("/img/search2.png", item_la_search );
    }//GEN-LAST:event_item_la_searchMouseEntered

    private void item_la_searchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_searchMouseExited
        u.imageMethod("/img/search.png", item_la_search );
    }//GEN-LAST:event_item_la_searchMouseExited

    private void item_la_updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_updateMouseEntered
        u.imageMethod("/img/update2.png", item_la_update );
    }//GEN-LAST:event_item_la_updateMouseEntered

    private void item_la_updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_updateMouseExited
        u.imageMethod("/img/update.png", item_la_update );
    }//GEN-LAST:event_item_la_updateMouseExited

    private void item_la_deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_deleteMouseEntered
        u.imageMethod("/img/delete2.png", item_la_delete );
    }//GEN-LAST:event_item_la_deleteMouseEntered

    private void item_la_deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_deleteMouseExited
        u.imageMethod("/img/delete.png", item_la_delete );
    }//GEN-LAST:event_item_la_deleteMouseExited

    private void item_la_enterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_enterMouseEntered
        u.imageMethod("/img/enter2.png", item_la_enter );
    }//GEN-LAST:event_item_la_enterMouseEntered

    private void item_la_enterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_enterMouseExited
        u.imageMethod("/img/enter.png", item_la_enter );
    }//GEN-LAST:event_item_la_enterMouseExited

    private void item_la_categoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_categoryMouseExited
         u.imageMethod("/img/category.png",item_la_category);
    }//GEN-LAST:event_item_la_categoryMouseExited

    private void item_la_categoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_categoryMouseEntered
       u.imageMethod("/img/category2.png",item_la_category);
    }//GEN-LAST:event_item_la_categoryMouseEntered

    private void item_la_categoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_categoryMouseClicked
         int x = JOptionPane.showConfirmDialog(this, "Do you want to open Category Intreface", "Open Intreface", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            item_la_new.setVisible(true);
            category.getCallPopup(this).setVisible(true);
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_item_la_categoryMouseClicked

    private void item_la_newMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_newMouseClicked
        u.imageMethod("/img/newB2.png", item_la_new);
        item_la_enter.setVisible(true);
        item_la_new.setVisible(false);
        cleareFields();
    }//GEN-LAST:event_item_la_newMouseClicked

    private void item_la_newMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_newMouseEntered
        u.imageMethod("/img/newB2.png", item_la_new);
    }//GEN-LAST:event_item_la_newMouseEntered

    private void item_la_newMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_newMouseExited
        u.imageMethod("/img/newB.png", item_la_new);
    }//GEN-LAST:event_item_la_newMouseExited

    private void item_la_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_searchMouseClicked
          u.imageMethod("/img/search2.png", item_la_search );
        if (idsearch != 0) {
            searchItem();
        }else {
      JOptionPane.showMessageDialog(null, "Error Not Selected The Item  !!! \n searchEMP() \n" , "Error Massage", JOptionPane.ERROR_MESSAGE);
        item_tx_barcode.grabFocus();
        }
    }//GEN-LAST:event_item_la_searchMouseClicked

    private void item_tx_barcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_item_tx_barcodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, item_tx_barcode, item_tx_name);
            searchItem_Barcode_Name_Short(item_tx_barcode.getText(),"Barcode");
        } else {
            txValidateKeyEvent(evt, item_tx_barcode, "N", 70);
        }    
    }//GEN-LAST:event_item_tx_barcodeKeyPressed

    private void item_tx_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_item_tx_nameKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, item_tx_name, item_tx_short_name);
            searchItem_Barcode_Name_Short(item_tx_name.getText(),"Itemname");
        } else {
            txValidateKeyEvent(evt, item_tx_name, "NA", 45);
        }   
    }//GEN-LAST:event_item_tx_nameKeyPressed

    private void item_tx_short_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_item_tx_short_nameKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, item_tx_short_name, jComboBox_supplier);
            searchItem_Barcode_Name_Short(item_tx_short_name.getText(),"Shortname");
        } else {
            txValidateKeyEvent(evt, item_tx_short_name, "NA", 45);
        } 
    }//GEN-LAST:event_item_tx_short_nameKeyPressed

    private void jComboBox_supplierKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_supplierKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, jComboBox_supplier, jComboBox_main_catogery);
        }
    }//GEN-LAST:event_jComboBox_supplierKeyPressed

    private void jComboBox_main_catogeryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_main_catogeryKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt,jComboBox_main_catogery,jComboBox_sub_catogery);
            
            try{
                DBClass.getData("select iditemcatogery from itemcatogery where name='"+jComboBox_main_catogery.getSelectedItem().toString()+"' order by iditemcatogery");
                if(DBClass.r.next()){    
                    SearchAndListJcomboboxItemSubCatogery(DBClass.r.getInt("iditemcatogery"));
                }
            }catch(Exception e){
                systemLogger.initLogger(item.class).error("jComboBox_main_catogeryKeyPressed()  Error",e);
                 JOptionPane.showMessageDialog(null, "Error Search Item Catogery ID !!! \n jComboBox_main_catogeryKeyPressed \n" , "Error Massage", JOptionPane.ERROR_MESSAGE);
            }
             
        }
    }//GEN-LAST:event_jComboBox_main_catogeryKeyPressed

    private void jComboBox_sub_catogeryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_sub_catogeryKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt,jComboBox_sub_catogery,item_tx_buy_price);
        }
    }//GEN-LAST:event_jComboBox_sub_catogeryKeyPressed

    private void item_tx_buy_priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_item_tx_buy_priceKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, item_tx_buy_price, item_tx_sell_price);
        } else {
            txValidateKeyEvent(evt, item_tx_buy_price, "PRICE", 10);
        } 
    }//GEN-LAST:event_item_tx_buy_priceKeyPressed

    private void item_tx_sell_priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_item_tx_sell_priceKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, item_tx_sell_price, jComboBox_is_active);
        } else {
            txValidateKeyEvent(evt, item_tx_sell_price, "PRICE", 10);
        } 
    }//GEN-LAST:event_item_tx_sell_priceKeyPressed

    private void jComboBox_is_activeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_is_activeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, jComboBox_is_active, item_la_enter);
       }
    }//GEN-LAST:event_jComboBox_is_activeKeyPressed

    private void item_la_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_updateMouseClicked
         u.imageMethod("/img/update2.png", item_la_update );
        if (idsearch == 0) {
            JOptionPane.showMessageDialog(this, "Please Select the Item", "Not Selected", JOptionPane.OK_OPTION);
        } else {
            updateItem();
        }
    }//GEN-LAST:event_item_la_updateMouseClicked

    private void item_la_deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_deleteMouseClicked
         u.imageMethod("/img/delete2.png",item_la_delete );
        if (idsearch == 0) {
            JOptionPane.showMessageDialog(this, "Please Select the Item", "Not Selected", JOptionPane.OK_OPTION);
        } else {
            deleteItem();
        }
    }//GEN-LAST:event_item_la_deleteMouseClicked

    private void jTable_itemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_itemMouseClicked
        DefaultTableModel defTabMod = (DefaultTableModel) jTable_item.getModel();
        item_la_new.setVisible(true);
        item_la_enter.setVisible(false);
        idsearch = Integer.parseInt(defTabMod.getValueAt(jTable_item.getSelectedRow(), 0).toString());
        item_tx_barcode.setText(defTabMod.getValueAt(jTable_item.getSelectedRow(), 1).toString());
        item_tx_name.setText(defTabMod.getValueAt(jTable_item.getSelectedRow(), 2).toString());
        item_tx_short_name.setText(defTabMod.getValueAt(jTable_item.getSelectedRow(), 3).toString());
        jComboBox_supplier.setSelectedItem(defTabMod.getValueAt(jTable_item.getSelectedRow(), 4).toString());
        jComboBox_sub_catogery.removeAllItems();
        jComboBox_sub_catogery.addItem(defTabMod.getValueAt(jTable_item.getSelectedRow(), 5).toString());
        
        item_tx_buy_price.setText(defTabMod.getValueAt(jTable_item.getSelectedRow(), 6).toString());
        item_tx_sell_price.setText(defTabMod.getValueAt(jTable_item.getSelectedRow(), 7).toString());
        jComboBox_is_active.setSelectedItem(defTabMod.getValueAt(jTable_item.getSelectedRow(), 8).toString());
        
        try{
                DBClass.getData("select ca.name from itemsubcatogery su inner join itemcatogery ca on su.iditemcatogery=ca.iditemcatogery where su.terms='"+defTabMod.getValueAt(jTable_item.getSelectedRow(), 5).toString()+"' order by iditemsubcatogery");
               if(DBClass.r.next()){
                jComboBox_main_catogery.setSelectedItem(DBClass.r.getString("ca.name"));
               }
        }catch(Exception e){
                 systemLogger.initLogger(item.class).error("jTable_itemMouseClicked()  Error",e);
                 JOptionPane.showMessageDialog(null, "Error Search Item Catogery Name !!! \n jTable_itemMouseClicked \n"+e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTable_itemMouseClicked

    private void item_la_enterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_la_enterMouseClicked
       u.imageMethod("/img/newB2.png", item_la_enter);
        emterMouseClickMethod();
    }//GEN-LAST:event_item_la_enterMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new item().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel agent_la_date;
    private javax.swing.JLabel agent_la_home_img;
    private javax.swing.JLabel agent_la_time;
    private javax.swing.JLabel background;
    private javax.swing.JLabel doctor_la_login_use_name;
    private javax.swing.JLabel home_la_uesr_image;
    private javax.swing.JLabel item_la_category;
    private javax.swing.JLabel item_la_delete;
    private javax.swing.JLabel item_la_enter;
    private javax.swing.JLabel item_la_new;
    private javax.swing.JLabel item_la_search;
    private javax.swing.JLabel item_la_update;
    private javax.swing.JTextField item_tx_barcode;
    private javax.swing.JTextField item_tx_buy_price;
    private javax.swing.JTextField item_tx_name;
    private javax.swing.JTextField item_tx_sell_price;
    private javax.swing.JTextField item_tx_short_name;
    private javax.swing.JComboBox jComboBox_is_active;
    private javax.swing.JComboBox jComboBox_main_catogery;
    private javax.swing.JComboBox jComboBox_sub_catogery;
    private javax.swing.JComboBox jComboBox_supplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jTable_item;
    private javax.swing.JLabel login_la_cloce;
    private javax.swing.JLabel login_la_mini;
    // End of variables declaration//GEN-END:variables


       
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> SystemClose()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> System cloce <<<<<<<<<<<   
    void SystemClose() {
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close the System ?", "Exit System", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            // setDefaultCloseOperation(EXIT_ON_CLOSE);
             u.insertUserClose(item_tx_barcode, agent_la_date.getText(), agent_la_time.getText());
            System.exit(0);
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            login_la_cloce.setBackground(new Color(153, 204, 255));
        }
    }
    //>>>>>>>>> System cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> Singltan class 
     * *** >>> Why ------------->>> ek object ekk hdnn
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> Get Instance <<<<<<<<<<<  
    private static final item it = new item();

    public static item getCallPopup() {
        return it;
    }
//>>>>>>>>> Get Instance <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> cleareFields <<<<<<<<<<<      
    private void cleareFields() {
        item_tx_barcode.setText(null);
        item_tx_name.setText(null);
        item_tx_short_name.setText(null);
        jComboBox_supplier.setSelectedIndex(0);
        jComboBox_main_catogery.setSelectedIndex(0);
        jComboBox_sub_catogery.removeAllItems();
        item_tx_buy_price.setText(null);
        item_tx_sell_price.setText(null);
        jComboBox_is_active.setSelectedIndex(0);
        idsearch = 0;
        SearchAndListJcomboboxItemCatogery();
        SearchAndListJcomboboxSupplier();
        selectAllItem();
        item_la_enter.setVisible(true);
        item_la_new.setVisible(false);
        item_tx_barcode.grabFocus();
    }
//>>>>>>>>> cleareFields <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 

 
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> searchItem_Barcode_Name_Short <<<<<<<<<<<      
    private void searchItem_Barcode_Name_Short(String search_TX_type,String search_DB_Column) {
        try {
             DefaultTableModel defTabMod = (DefaultTableModel) jTable_item.getModel();
             defTabMod.getDataVector().removeAllElements();
          //  ResultSet rs = DBClass.getData("select * from supplier where idsupplier  ='" + tx_doctor_id.getText() + "' order by iddoctor");
            if(search_DB_Column.equals("Barcode")){
                DBClass.getData("select it.iditem,it.barcode,it.itemname,it.shortname,it.supplier,it.buyprice,it.sellprice,it.status,"
                  + " su.terms from item it inner join itemsubcatogery su on it.iditemsubcatogery=su.iditemsubcatogery where  it.barcode like '" + search_TX_type + "%' order by iditem");
           }else if(search_DB_Column.equals("Itemname")){
                DBClass.getData("select it.iditem,it.barcode,it.itemname,it.shortname,it.supplier,it.buyprice,it.sellprice,it.status,"
                  + " su.terms from item it inner join itemsubcatogery su on it.iditemsubcatogery=su.iditemsubcatogery where  it.itemname like '" + search_TX_type + "%' order by iditem");
           }else if(search_DB_Column.equals("Shortname")){
               DBClass.getData("select it.iditem,it.barcode,it.itemname,it.shortname,it.supplier,it.buyprice,it.sellprice,it.status,"
                  + " su.terms from item it inner join itemsubcatogery su on it.iditemsubcatogery=su.iditemsubcatogery where  it.shortname like '" + search_TX_type + "%' order by iditem");
           }else{
                JOptionPane.showMessageDialog(null, "Not Found Item , Search From Barcode,Name or Short Name !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
            item_tx_barcode.grabFocus();
            }
            
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    Vector v = new Vector();
                    v.add(DBClass.r.getString("it.iditem"));
                    v.add(DBClass.r.getString("it.barcode"));
                    v.add(DBClass.r.getString("it.itemname"));
                    v.add(DBClass.r.getString("it.shortname"));
                    v.add(DBClass.r.getString("it.supplier"));
                    
                v.add(DBClass.r.getString("su.terms"));
             
                    v.add(DBClass.r.getString("it.buyprice"));
                    v.add(DBClass.r.getString("it.sellprice"));
                    if (DBClass.r.getInt("it.status") == 1) {
                        v.add("Active");
                        defTabMod.addRow(v);
                    } else {
                        v.add("Inactive");
                        defTabMod.addRow(v);
                    }
                    item_la_enter.setVisible(false);
                    item_la_new.setVisible(true);
                }
            }
            
        } catch (Exception ex) {
             systemLogger.initLogger(item.class).error("searchItem_Barcode_Name_Short()  Error",ex);
 JOptionPane.showMessageDialog(null, "Error ItemTable Search From Item_Barcode_Name_Short !!! \n searchItem_Barcode_Name_Short() \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
        item_tx_barcode.grabFocus();
       item_tx_barcode.grabFocus();
        }
    }
    //>>>>>>>>> searchItem_Barcode_Name_Short <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> searchItem <<<<<<<<<<<      
    private void searchItem() {
        try {
             DefaultTableModel defTabMod = (DefaultTableModel) jTable_item.getModel();
             defTabMod.getDataVector().removeAllElements();
          //  ResultSet rs = DBClass.getData("select * from supplier where idsupplier  ='" + tx_doctor_id.getText() + "' order by iddoctor");
          //  DBClass.getData("select * from item where barcode like '" + item_tx_barcode.getText() + "%' order by iditem");
           DBClass.getData("select it.iditem,it.barcode,it.itemname,it.shortname,it.supplier,it.buyprice,it.sellprice,it.status,"
                  + " su.terms from item it inner join itemsubcatogery su on it.iditemsubcatogery=su.iditemsubcatogery where  it.barcode like '" + item_tx_barcode.getText() + "%' order by iditem");
           
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    Vector v = new Vector();
                    v.add(DBClass.r.getString("it.iditem"));
                    v.add(DBClass.r.getString("it.barcode"));
                    v.add(DBClass.r.getString("it.itemname"));
                    v.add(DBClass.r.getString("it.shortname"));
                    v.add(DBClass.r.getString("it.supplier"));
                    
                v.add(DBClass.r.getString("su.terms"));
             
                    v.add(DBClass.r.getString("it.buyprice"));
                    v.add(DBClass.r.getString("it.sellprice"));
                    if (DBClass.r.getInt("it.status") == 1) {
                        v.add("Active");
                        defTabMod.addRow(v);
                    } else {
                        v.add("Inactive");
                        defTabMod.addRow(v);
                    }
                    
                    item_la_enter.setVisible(false);
                    item_la_new.setVisible(true);
                }
            }
            
        } catch (Exception ex) {
             systemLogger.initLogger(item.class).error("searchItem()  Error",ex);
 JOptionPane.showMessageDialog(null, "Error Search Item !!! \n searchItem() \n" , "Error Massage", JOptionPane.ERROR_MESSAGE);
      item_tx_barcode.grabFocus();
        }
    }
    //>>>>>>>>> searchItem <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> selectAllItem <<<<<<<<<<<      
    private void selectAllItem() {
        try {
             DefaultTableModel defTabMod = (DefaultTableModel) jTable_item.getModel();
             defTabMod.getDataVector().removeAllElements();
           DBClass.getData("select it.iditem,it.barcode,it.itemname,it.shortname,it.supplier,it.buyprice,it.sellprice,it.status,"
                  + " su.terms from item it inner join itemsubcatogery su on it.iditemsubcatogery=su.iditemsubcatogery order by iditem");
           
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    Vector v = new Vector();
                    v.add(DBClass.r.getString("it.iditem"));
                    v.add(DBClass.r.getString("it.barcode"));
                    v.add(DBClass.r.getString("it.itemname"));
                    v.add(DBClass.r.getString("it.shortname"));
                    v.add(DBClass.r.getString("it.supplier"));
                    
                v.add(DBClass.r.getString("su.terms"));
             
                    v.add(DBClass.r.getString("it.buyprice"));
                    v.add(DBClass.r.getString("it.sellprice"));
                    if (DBClass.r.getInt("it.status") == 1) {
                        v.add("Active");
                        defTabMod.addRow(v);
                    } else {
                        v.add("Inactive");
                        defTabMod.addRow(v);
                    }
                    item_la_enter.setVisible(false);
                    item_la_new.setVisible(true);
                }
            }
            
        } catch (Exception ex) {
            systemLogger.initLogger(item.class).error("selectAllItem()  Error",ex);
 JOptionPane.showMessageDialog(null, "Error SelectselectAllItem !!! \n selectAllItem() \n"+ex , "Error Massage", JOptionPane.ERROR_MESSAGE);
    item_tx_barcode.grabFocus();
        }
    }
    //>>>>>>>>> selectAllItem <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
    
    
    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> updateItem <<<<<<<<<<<     
    private void updateItem() {
        try {
            int bb = jComboBox_is_active.getSelectedIndex();
            if (bb == 0) {
                bb = 1;
            } else if (bb == 1) {
                bb = 0;
            } else {
                bb = 2;
            }
           DBClass.putData("update item set iditemsubcatogery='" + jComboBox_sub_catogery.getSelectedItem().toString()+"',barcode='" + item_tx_barcode.getText() + "',"
                    + "itemname='" + item_tx_short_name.getText()+ "',shortname='" + item_tx_short_name.getText() 
                    + "',supplier ='" + jComboBox_supplier.getSelectedItem() + "',buyprice ='" + item_tx_buy_price.getText()
                    + "',sellprice ='" + item_tx_sell_price.getText() +  "',status ='" + bb + "' where  iditem  ='" + idsearch + "' ");
            JOptionPane.showMessageDialog(this, "Update Successful", "Updated", JOptionPane.OK_OPTION);
            cleareFields();
            selectAllItem();
        } catch (Exception e) {
             systemLogger.initLogger(item.class).error("updateItem()  Error",e);
JOptionPane.showMessageDialog(null, "Error ItemTableUpdate !!! \n updateItem() \n" , "Error Massage", JOptionPane.ERROR_MESSAGE);
       item_tx_barcode.grabFocus();
        }
    }
    //>>>>>>>>> updateItem <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   
    
 //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> deleteItem <<<<<<<<<<<     
    private void deleteItem() {
        try {
            int bb = 2;

            int x = JOptionPane.showConfirmDialog(this, "Do you sure Delete Item ?", "Delete Verify", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == x) {
                DBClass.putData("update item  set status ='" + bb + "' where  iditem  ='" + idsearch + "' ");
                cleareFields();
                selectAllItem();
            } else if (JOptionPane.NO_OPTION == x) {
                setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            }
        } catch (Exception e) {
             systemLogger.initLogger(item.class).error("deleteItem()  Error",e);
            JOptionPane.showMessageDialog(null, "Error ItemTableDelete !!! \n deleteItem() \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
       item_tx_barcode.grabFocus();
        }
    }
    //>>>>>>>>> deleteItem <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> SearchAndListJcomboboxSupplier <<<<<<<<<<<     
    private void SearchAndListJcomboboxSupplier() {
        try {
             jComboBox_supplier.removeAllItems();
            DBClass.getData("select comname from supplier where status='1' order by idsupplier");
            
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    jComboBox_supplier.addItem(DBClass.r.getString("comname"));
                 }
            }
        } catch (Exception e) {
              systemLogger.initLogger(item.class).error("SearchAndListJcomboboxSupplier()  Error",e);
            JOptionPane.showMessageDialog(null, "Error SupplierTablesearch !!! \n SearchAndListJcomboboxSupplier() \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
       item_tx_barcode.grabFocus();
        }
    }
    //>>>>>>>>> SearchAndListJcomboboxSupplier <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
    
    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> SearchAndListJcomboboxItemCatogery <<<<<<<<<<<     
    private void SearchAndListJcomboboxItemCatogery() {
        try {
            jComboBox_main_catogery.removeAllItems();
            DBClass.getData("select name from itemcatogery where status='1' order by iditemcatogery");
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                   jComboBox_main_catogery.addItem(DBClass.r.getString("name"));
                    
                }
            }
        } catch (Exception e) {
            systemLogger.initLogger(item.class).error("SearchAndListJcomboboxItemCatogery()  Error",e);
            JOptionPane.showMessageDialog(null, "Error CatogeryTablesearch !!! \n SearchAndListJcomboboxItemCatogery() \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
       item_tx_barcode.grabFocus();
        }
    }
    //>>>>>>>>> SearchAndListJcomboboxItemCatogery <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> SearchAndListJcomboboxItemSubCatogery <<<<<<<<<<<     
    private void SearchAndListJcomboboxItemSubCatogery(int Catogery) {
        try {
            jComboBox_sub_catogery.removeAllItems();
            DBClass.getData("select terms from itemsubcatogery where iditemcatogery='"+Catogery+"' and status='1' order by iditemsubcatogery");
            
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    jComboBox_sub_catogery.addItem(DBClass.r.getString("terms"));
                }
            } 
        } catch (Exception e) {
             systemLogger.initLogger(item.class).error("SearchAndListJcomboboxItemSubCatogery()  Error",e);
            JOptionPane.showMessageDialog(null, "Error ItemSubCatogeryTablesearch !!! \n SearchAndListJcomboboxItemSubCatogery() \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
        item_tx_barcode.grabFocus();
        }
    }
    //>>>>>>>>> SearchAndListJcomboboxItemSubCatogery <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
  
    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> emterMouseClickMethod <<<<<<<<<<< 
    private void emterMouseClickMethod() {
        if (item_tx_barcode.getText().trim().isEmpty()) {
            item_tx_barcode.grabFocus();
        } else if (item_tx_name.getText().trim().isEmpty()) {
            item_tx_name.grabFocus();
        } else if (item_tx_short_name.getText().trim().isEmpty()) {
            item_tx_short_name.grabFocus();
        } else if (item_tx_buy_price.getText().trim().isEmpty()) {
            item_tx_buy_price.grabFocus();
        } else if (item_tx_sell_price.getText().trim().isEmpty()) {
            item_tx_sell_price.grabFocus();
        }else if (!(item_tx_barcode.getText().trim().isEmpty() & item_tx_name.getText().trim().isEmpty() & item_tx_short_name.getText().trim().isEmpty() & item_tx_buy_price.getText().trim().isEmpty() 
                & item_tx_sell_price.getText().trim().isEmpty())) {
            addJTable();
        }
    }
    //>>>>>>>>> emterMouseClickMethod <<<<<<<<<<<         
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     

 //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> addJTable <<<<<<<<<<<      
    private void addJTable() {
        try {
        int bb = jComboBox_is_active.getSelectedIndex();
            if (bb == 0) {
                bb = 1;
            } else if (bb == 1) {
                bb = 0;
            } else {
                bb = 2;
            }
            
        DBClass.getData("select iditemsubcatogery from itemsubcatogery where terms= '" + jComboBox_sub_catogery.getSelectedItem().toString()+ "'"); 
        int cstsub=0;  
        while(DBClass.r.next()){
              cstsub = DBClass.r.getInt("iditemsubcatogery");
          }   
             
        DBClass.putData("insert into item(barcode,itemname,shortname,supplier,iditemsubcatogery,buyprice,sellprice,status) values("
                    + "'" + Integer.parseInt(item_tx_barcode.getText()) + "' , '" + item_tx_name.getText() + "' , '" + item_tx_short_name.getText() 
                    + "','" + jComboBox_supplier.getSelectedItem()+ "'  ,'" + cstsub
                    + "','" + Double.parseDouble(item_tx_buy_price.getText()) + "','" + Double.parseDouble(item_tx_sell_price.getText()) + "','" + bb + "' )");
            
        cleareFields();
            selectAllItem();
        } catch (Exception ex) {
            systemLogger.initLogger(item.class).error("addJTable()  Error",ex);
            JOptionPane.showMessageDialog(null, "Error ItemTableInsert !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
            item_tx_barcode.grabFocus();
        }
    }
//>>>>>>>>> addJTable <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 

    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> txValidateKeyEvent()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<      
    private void txValidateKeyEvent(KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld) {
            int dot = 0;
        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenthNeedFeld) {
            if (txType.equals("NIC")) {
                if (txName.getText().length() == 8) {
                    if ((iNumber == 86)) {
                        txName.setEditable(true);
                    }
                } else if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("PRICE")) {
                    
                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8) |(iNumber == 110)) {
                   if(iNumber==110){
                       dot = dot+1;
                   }
                   if(dot==2){
                JOptionPane.showMessageDialog(null, "Error , You try 2 desimal simbles!!! \n " , "Error Massage", JOptionPane.ERROR_MESSAGE);
                        dot = 1;
//                            if (txName.getText().contains(".") ) {
//                                txName.setText(txName.getText());
//                            }
                   }else{
                      txName.setEditable(true);
                    }
                   
                  
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("A")) {

                if ((iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 32) | (iNumber == 46)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }
        
    }
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   
   
}
