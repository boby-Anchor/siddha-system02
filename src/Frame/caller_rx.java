/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHETHANA
 */
public class caller_rx extends javax.swing.JFrame {
UniversalMethod u = new UniversalMethod();
public static int idsearch;
public static int idsearchDoctor;
public static int idsearch_T1;
    /**
     * Creates new form caller
     */
    public caller_rx() {
        initComponents();
        systemLogger.initLogger(caller_rx.class).info("Open caller_rx Frame");
       u.imageMethod(background, home_la_uesr_image, doctor_la_login_use_name, agent_la_home_img, login_la_mini, login_la_cloce, cal_rx_la_search, cal_rx_la_update, cal_rx_la_delete, cal_rx_la_enter);
       cleareFields();
          UniversalMethod.TimeMethod(agent_la_date, agent_la_time);
       doctor_la_login_use_name.setText(UniversalMethod.getLogUser());
        u.imageMethod("/img/clrearB1.png", cal_rx_la_new);
        u.imageMethod("/img/enter.png", cal_rx_la_enter );
         u.imageMethod("/img/rf.png", jLabel2);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        login_la_cloce = new javax.swing.JLabel();
        login_la_mini = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        agent_la_home_img = new javax.swing.JLabel();
        doctor_la_login_use_name = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        home_la_uesr_image = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        agent_la_time = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        agent_la_date = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jComboBox_payment_type = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tx_rx_id = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        tx_bill_to = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        tx_address = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        tx_contact_number = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel30 = new javax.swing.JLabel();
        tx_address_d = new javax.swing.JTextField();
        tx_deliver_to = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        tx_contact_d = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        jCheckBox_issame = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_caller = new javax.swing.JTable();
        cal_rx_la_enter = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jComboBox_note = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jComboBox_conform_status = new javax.swing.JComboBox();
        cal_rx_la_search = new javax.swing.JLabel();
        cal_rx_la_update = new javax.swing.JLabel();
        cal_rx_la_delete = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        cal_rx_la_new = new javax.swing.JLabel();
        tx_doctor_id = new javax.swing.JTextField();
        la_set_item = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1376, 768));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1376, 768));
        getContentPane().setLayout(null);

        login_la_cloce.setBackground(new java.awt.Color(255, 255, 255));
        login_la_cloce.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_cloce.setForeground(new java.awt.Color(0, 0, 0));
        login_la_cloce.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_cloce.setBorder(new javax.swing.border.MatteBorder(null));
        login_la_cloce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseExited(evt);
            }
        });
        getContentPane().add(login_la_cloce);
        login_la_cloce.setBounds(1330, 10, 30, 30);

        login_la_mini.setBackground(new java.awt.Color(255, 255, 255));
        login_la_mini.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_mini.setForeground(new java.awt.Color(0, 0, 0));
        login_la_mini.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_mini.setBorder(new javax.swing.border.MatteBorder(null));
        login_la_mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_miniMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_miniMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_miniMouseExited(evt);
            }
        });
        getContentPane().add(login_la_mini);
        login_la_mini.setBounds(1295, 10, 30, 30);

        jLabel1.setBackground(new java.awt.Color(51, 204, 255));
        jLabel1.setFont(new java.awt.Font("Eras Bold ITC", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CALLER RX");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(760, 1, 330, 40);

        agent_la_home_img.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_home_img.setText("jLabel1");
        agent_la_home_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseExited(evt);
            }
        });
        getContentPane().add(agent_la_home_img);
        agent_la_home_img.setBounds(600, 5, 80, 30);

        doctor_la_login_use_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        doctor_la_login_use_name.setForeground(new java.awt.Color(255, 255, 255));
        doctor_la_login_use_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        doctor_la_login_use_name.setText("Invoice");
        getContentPane().add(doctor_la_login_use_name);
        doctor_la_login_use_name.setBounds(330, 5, 260, 35);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(580, 5, 20, 30);

        home_la_uesr_image.setForeground(new java.awt.Color(0, 0, 0));
        home_la_uesr_image.setText("userlogo");
        getContentPane().add(home_la_uesr_image);
        home_la_uesr_image.setBounds(290, 10, 30, 30);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(280, 5, 20, 30);

        agent_la_time.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_time.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_time.setText("Invoice");
        agent_la_time.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_time);
        agent_la_time.setBounds(150, 5, 130, 35);

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(140, 5, 20, 30);

        agent_la_date.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_date.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_date.setText("Invoice");
        agent_la_date.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_date);
        agent_la_date.setBounds(10, 5, 130, 35);

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator5);
        jSeparator5.setBounds(0, 40, 1370, 10);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("RX ID");
        jLabel4.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel4);
        jLabel4.setBounds(600, 110, 120, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(":");
        jLabel5.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel5);
        jLabel5.setBounds(750, 110, 30, 30);

        jLabel17.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Payment Type");
        jLabel17.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel17);
        jLabel17.setBounds(960, 110, 150, 30);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText(":");
        jLabel16.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel16);
        jLabel16.setBounds(1110, 110, 30, 30);

        jComboBox_payment_type.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_payment_type.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_payment_type.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_payment_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "COD", "Payed" }));
        jComboBox_payment_type.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_payment_typeKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_payment_type);
        jComboBox_payment_type.setBounds(1130, 110, 180, 35);

        jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Note");
        jLabel14.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel14);
        jLabel14.setBounds(500, 430, 80, 30);

        jLabel15.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText(":");
        jLabel15.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel15);
        jLabel15.setBounds(580, 430, 30, 30);

        tx_rx_id.setBackground(new java.awt.Color(255, 255, 255));
        tx_rx_id.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_rx_id.setForeground(new java.awt.Color(0, 0, 0));
        tx_rx_id.setText(" ");
        tx_rx_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_rx_idKeyPressed(evt);
            }
        });
        getContentPane().add(tx_rx_id);
        tx_rx_id.setBounds(770, 110, 170, 33);

        jLabel24.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Bill To ");
        jLabel24.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel24);
        jLabel24.setBounds(40, 210, 160, 30);

        jLabel29.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText(":");
        jLabel29.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel29);
        jLabel29.setBounds(200, 210, 30, 30);

        tx_bill_to.setBackground(new java.awt.Color(255, 255, 255));
        tx_bill_to.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_bill_to.setForeground(new java.awt.Color(0, 0, 0));
        tx_bill_to.setText(" ");
        tx_bill_to.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_bill_toKeyPressed(evt);
            }
        });
        getContentPane().add(tx_bill_to);
        tx_bill_to.setBounds(220, 210, 650, 33);

        jLabel25.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Address");
        jLabel25.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel25);
        jLabel25.setBounds(40, 250, 160, 30);

        jLabel28.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText(":");
        jLabel28.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel28);
        jLabel28.setBounds(200, 250, 30, 30);

        tx_address.setBackground(new java.awt.Color(255, 255, 255));
        tx_address.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_address.setForeground(new java.awt.Color(0, 0, 0));
        tx_address.setText(" ");
        tx_address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_addressKeyPressed(evt);
            }
        });
        getContentPane().add(tx_address);
        tx_address.setBounds(220, 250, 1090, 33);

        jLabel26.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Contact Number ");
        jLabel26.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel26);
        jLabel26.setBounds(910, 210, 160, 30);

        jLabel27.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setText(":");
        jLabel27.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel27);
        jLabel27.setBounds(1070, 210, 30, 30);

        tx_contact_number.setBackground(new java.awt.Color(255, 255, 255));
        tx_contact_number.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_contact_number.setForeground(new java.awt.Color(0, 0, 0));
        tx_contact_number.setText(" ");
        tx_contact_number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_contact_numberKeyPressed(evt);
            }
        });
        getContentPane().add(tx_contact_number);
        tx_contact_number.setBounds(1090, 210, 220, 33);

        jSeparator6.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator6.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator6);
        jSeparator6.setBounds(10, 480, 1370, 10);

        jLabel30.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Address");
        jLabel30.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel30);
        jLabel30.setBounds(40, 360, 160, 30);

        tx_address_d.setBackground(new java.awt.Color(255, 255, 255));
        tx_address_d.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_address_d.setForeground(new java.awt.Color(0, 0, 0));
        tx_address_d.setText(" ");
        tx_address_d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_address_dActionPerformed(evt);
            }
        });
        tx_address_d.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_address_dKeyPressed(evt);
            }
        });
        getContentPane().add(tx_address_d);
        tx_address_d.setBounds(220, 360, 1090, 33);

        tx_deliver_to.setBackground(new java.awt.Color(255, 255, 255));
        tx_deliver_to.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_deliver_to.setForeground(new java.awt.Color(0, 0, 0));
        tx_deliver_to.setText(" ");
        tx_deliver_to.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_deliver_toKeyPressed(evt);
            }
        });
        getContentPane().add(tx_deliver_to);
        tx_deliver_to.setBounds(220, 320, 650, 33);

        jLabel31.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText(":");
        jLabel31.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel31);
        jLabel31.setBounds(200, 320, 30, 30);

        jLabel32.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Deliver To");
        jLabel32.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel32);
        jLabel32.setBounds(40, 320, 160, 30);

        jLabel33.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText(":");
        jLabel33.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel33);
        jLabel33.setBounds(200, 360, 30, 30);

        jLabel34.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Contact Number ");
        jLabel34.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel34);
        jLabel34.setBounds(910, 320, 160, 30);

        jLabel35.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText(":");
        jLabel35.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel35);
        jLabel35.setBounds(1070, 320, 30, 30);

        tx_contact_d.setBackground(new java.awt.Color(255, 255, 255));
        tx_contact_d.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_contact_d.setForeground(new java.awt.Color(0, 0, 0));
        tx_contact_d.setText(" ");
        tx_contact_d.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_contact_dKeyPressed(evt);
            }
        });
        getContentPane().add(tx_contact_d);
        tx_contact_d.setBounds(1090, 320, 220, 33);

        jSeparator7.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator7.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator7);
        jSeparator7.setBounds(10, 200, 1370, 10);

        jCheckBox_issame.setBackground(new java.awt.Color(174, 180, 184));
        jCheckBox_issame.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCheckBox_issame.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox_issame.setText("If the recipient is the same");
        jCheckBox_issame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox_issameMouseClicked(evt);
            }
        });
        jCheckBox_issame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_issameActionPerformed(evt);
            }
        });
        jCheckBox_issame.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCheckBox_issameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCheckBox_issameKeyReleased(evt);
            }
        });
        getContentPane().add(jCheckBox_issame);
        jCheckBox_issame.setBounds(220, 290, 240, 24);

        jTable_caller.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RX ID", "Doctor ID", "Payment Type", "Conform", "Note", "Bill To", "B.Contact Number", "B.Address", "Deliver To", "D.Address", "D.Contact Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_caller.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_callerMouseClicked(evt);
            }
        });
        jTable_caller.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable_callerKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_caller);
        if (jTable_caller.getColumnModel().getColumnCount() > 0) {
            jTable_caller.getColumnModel().getColumn(0).setMinWidth(100);
            jTable_caller.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable_caller.getColumnModel().getColumn(0).setMaxWidth(100);
            jTable_caller.getColumnModel().getColumn(2).setMinWidth(100);
            jTable_caller.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable_caller.getColumnModel().getColumn(2).setMaxWidth(100);
            jTable_caller.getColumnModel().getColumn(3).setMinWidth(100);
            jTable_caller.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable_caller.getColumnModel().getColumn(3).setMaxWidth(100);
            jTable_caller.getColumnModel().getColumn(4).setMinWidth(110);
            jTable_caller.getColumnModel().getColumn(4).setPreferredWidth(110);
            jTable_caller.getColumnModel().getColumn(4).setMaxWidth(110);
            jTable_caller.getColumnModel().getColumn(6).setMinWidth(150);
            jTable_caller.getColumnModel().getColumn(6).setPreferredWidth(150);
            jTable_caller.getColumnModel().getColumn(6).setMaxWidth(150);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 570, 1330, 180);

        cal_rx_la_enter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cal_rx_la_enter.setForeground(new java.awt.Color(0, 0, 0));
        cal_rx_la_enter.setText("Enter");
        cal_rx_la_enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cal_rx_la_enterMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cal_rx_la_enterMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cal_rx_la_enterMouseExited(evt);
            }
        });
        getContentPane().add(cal_rx_la_enter);
        cal_rx_la_enter.setBounds(560, 500, 120, 35);

        jLabel18.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Conform Satus");
        jLabel18.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel18);
        jLabel18.setBounds(40, 430, 150, 30);

        jLabel19.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText(":");
        jLabel19.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel19);
        jLabel19.setBounds(200, 430, 30, 30);

        jComboBox_note.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_note.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_note.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_note.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "COD--OK", "Payed--OK", "Payed--NO", "Close" }));
        jComboBox_note.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_noteKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_note);
        jComboBox_note.setBounds(600, 430, 130, 35);

        jLabel20.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Doctor ID");
        jLabel20.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel20);
        jLabel20.setBounds(960, 150, 160, 30);

        jLabel22.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText(":");
        jLabel22.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel22);
        jLabel22.setBounds(1110, 150, 30, 30);

        jComboBox_conform_status.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_conform_status.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBox_conform_status.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_conform_status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Conform", "Pending", "Close" }));
        jComboBox_conform_status.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_conform_statusKeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox_conform_status);
        jComboBox_conform_status.setBounds(220, 430, 190, 35);

        cal_rx_la_search.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cal_rx_la_search.setForeground(new java.awt.Color(0, 0, 0));
        cal_rx_la_search.setText("Search");
        cal_rx_la_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cal_rx_la_searchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cal_rx_la_searchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cal_rx_la_searchMouseExited(evt);
            }
        });
        getContentPane().add(cal_rx_la_search);
        cal_rx_la_search.setBounds(40, 500, 120, 35);

        cal_rx_la_update.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cal_rx_la_update.setForeground(new java.awt.Color(0, 0, 0));
        cal_rx_la_update.setText("Update");
        cal_rx_la_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cal_rx_la_updateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cal_rx_la_updateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cal_rx_la_updateMouseExited(evt);
            }
        });
        getContentPane().add(cal_rx_la_update);
        cal_rx_la_update.setBounds(220, 500, 120, 35);

        cal_rx_la_delete.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cal_rx_la_delete.setForeground(new java.awt.Color(0, 0, 0));
        cal_rx_la_delete.setText("Delete");
        cal_rx_la_delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cal_rx_la_deleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cal_rx_la_deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cal_rx_la_deleteMouseExited(evt);
            }
        });
        getContentPane().add(cal_rx_la_delete);
        cal_rx_la_delete.setBounds(390, 500, 120, 35);

        jSeparator8.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator8.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator8);
        jSeparator8.setBounds(10, 410, 1370, 10);

        cal_rx_la_new.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cal_rx_la_new.setForeground(new java.awt.Color(0, 0, 0));
        cal_rx_la_new.setText("Clear");
        cal_rx_la_new.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cal_rx_la_newMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cal_rx_la_newMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cal_rx_la_newMouseExited(evt);
            }
        });
        getContentPane().add(cal_rx_la_new);
        cal_rx_la_new.setBounds(730, 500, 120, 35);

        tx_doctor_id.setBackground(new java.awt.Color(255, 255, 255));
        tx_doctor_id.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_doctor_id.setForeground(new java.awt.Color(0, 0, 0));
        tx_doctor_id.setText(" ");
        tx_doctor_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_doctor_idKeyPressed(evt);
            }
        });
        getContentPane().add(tx_doctor_id);
        tx_doctor_id.setBounds(1130, 150, 180, 33);

        la_set_item.setText("jLabel2");
        la_set_item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_set_itemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_set_itemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_set_itemMouseExited(evt);
            }
        });
        getContentPane().add(la_set_item);
        la_set_item.setBounds(1010, 500, 140, 40);

        jLabel2.setText("Refresh");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel2MouseExited(evt);
            }
        });
        getContentPane().add(jLabel2);
        jLabel2.setBounds(90, 90, 160, 40);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rc ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(360, 60, 220, 130);

        background.setBackground(new java.awt.Color(234, 232, 232));
        background.setForeground(new java.awt.Color(255, 255, 255));
        background.setText("jLabel1");
        getContentPane().add(background);
        background.setBounds(0, 0, 1380, 770);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void login_la_cloceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseEntered
        //    login_la_cloce.setBackground(Color.red);
        u.imageMethod("/img/exti.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseEntered

    private void login_la_cloceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseExited
        //    login_la_cloce.setBackground(Color.white);
        u.imageMethod("/img/exti2.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseExited

    private void login_la_cloceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseClicked
        SystemClose();
    }//GEN-LAST:event_login_la_cloceMouseClicked

    private void login_la_miniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseEntered
        //    login_la_mini.setBackground(Color.gray);
        u.imageMethod("/img/mini2.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseEntered

    private void login_la_miniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseExited
        //    login_la_mini.setBackground(Color.white);
        u.imageMethod("/img/mini.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseExited

    private void login_la_miniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_login_la_miniMouseClicked

    private void agent_la_home_imgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseEntered
        u.imageMethod("/img/homeB2.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseEntered

    private void agent_la_home_imgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseExited
        u.imageMethod("/img/homeB1.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseExited

    private void agent_la_home_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseClicked
         if(UniversalMethod.getuserType().equals("Admin") | UniversalMethod.getuserType().equals("Maneger") ){
            int x = JOptionPane.showConfirmDialog(this, "Do you sure Go to The Home ?", "Change Interface", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == x) {
                    home.getCallPopup().setVisible(true);
                    this.dispose();
             } else if (JOptionPane.NO_OPTION == x) {
                 setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                 tx_rx_id.grabFocus();
             }
        }else if(UniversalMethod.getuserType().equals("Caller") | UniversalMethod.getuserType().equals("Stock Keeper") | UniversalMethod.getuserType().equals("User")){
             int x = JOptionPane.showConfirmDialog(this, "Do you sure Go to The Home ?", "Change Interface", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == x) {
                    caller.getCallPopup().setVisible(true);
                    this.dispose();
             } else if (JOptionPane.NO_OPTION == x) {
                 setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                 tx_rx_id.grabFocus();
             }
        }
    }//GEN-LAST:event_agent_la_home_imgMouseClicked

    private void jCheckBox_issameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox_issameMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you want to SELECT THIS ?", "SELECT", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            jCheckBox_issame.setSelected(true);
            jcheckBoxMouseClick();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            jCheckBox_issame.setSelected(false);
            tx_deliver_to.grabFocus();
        }
    }//GEN-LAST:event_jCheckBox_issameMouseClicked

    private void jCheckBox_issameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_issameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_issameActionPerformed

    private void jCheckBox_issameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCheckBox_issameKeyReleased
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            jCheckBox_issame.setSelected(true);
            jcheckBoxMouseClick();
        }
    }//GEN-LAST:event_jCheckBox_issameKeyReleased

    private void cal_rx_la_searchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_searchMouseEntered
        u.imageMethod("/img/search2.png", cal_rx_la_search );
    }//GEN-LAST:event_cal_rx_la_searchMouseEntered

    private void cal_rx_la_searchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_searchMouseExited
        u.imageMethod("/img/search.png", cal_rx_la_search );
    }//GEN-LAST:event_cal_rx_la_searchMouseExited

    private void cal_rx_la_updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_updateMouseEntered
        u.imageMethod("/img/update2.png", cal_rx_la_update );
    }//GEN-LAST:event_cal_rx_la_updateMouseEntered

    private void cal_rx_la_updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_updateMouseExited
        u.imageMethod("/img/update.png", cal_rx_la_update );
    }//GEN-LAST:event_cal_rx_la_updateMouseExited

    private void cal_rx_la_deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_deleteMouseEntered
        u.imageMethod("/img/delete2.png", cal_rx_la_delete );
    }//GEN-LAST:event_cal_rx_la_deleteMouseEntered

    private void cal_rx_la_deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_deleteMouseExited
        u.imageMethod("/img/delete.png", cal_rx_la_delete );
    }//GEN-LAST:event_cal_rx_la_deleteMouseExited

    private void cal_rx_la_enterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_enterMouseEntered
        u.imageMethod("/img/enter2.png", cal_rx_la_enter );
    }//GEN-LAST:event_cal_rx_la_enterMouseEntered

    private void cal_rx_la_enterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_enterMouseExited
        u.imageMethod("/img/enter.png", cal_rx_la_enter );
    }//GEN-LAST:event_cal_rx_la_enterMouseExited

    private void cal_rx_la_newMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_newMouseEntered
       u.imageMethod("/img/clrearB2.png", cal_rx_la_new);
    }//GEN-LAST:event_cal_rx_la_newMouseEntered

    private void cal_rx_la_newMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_newMouseExited
          u.imageMethod("/img/clrearB1.png", cal_rx_la_new);
    }//GEN-LAST:event_cal_rx_la_newMouseExited

    private void cal_rx_la_enterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_enterMouseClicked
        u.imageMethod("/img/enter2.png", cal_rx_la_enter );
        emterMouseClickMethod();
    }//GEN-LAST:event_cal_rx_la_enterMouseClicked

    private void tx_address_dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_address_dActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_address_dActionPerformed

    private void tx_rx_idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_rx_idKeyPressed
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
              u.grabFocusMethod(evt, tx_rx_id, jComboBox_payment_type);
         }else{
             txValidateKeyEvent(evt, tx_rx_id, "N", 10);
         }
    }//GEN-LAST:event_tx_rx_idKeyPressed

    private void jComboBox_payment_typeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_payment_typeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, jComboBox_payment_type, tx_doctor_id);  
       }
    }//GEN-LAST:event_jComboBox_payment_typeKeyPressed

    private void tx_doctor_idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_doctor_idKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt, tx_doctor_id,tx_bill_to);  
       }
    }//GEN-LAST:event_tx_doctor_idKeyPressed

    private void tx_bill_toKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_bill_toKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
              u.grabFocusMethod(evt, tx_bill_to, tx_contact_number);
         }else{
             txValidateKeyEvent(evt,  tx_bill_to, "NA", 55);
         }
    }//GEN-LAST:event_tx_bill_toKeyPressed

    private void tx_contact_numberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_contact_numberKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
              u.grabFocusMethod(evt, tx_contact_number,  tx_address);
         }else{
             txValidateKeyEvent(evt, tx_contact_number, "N", 13);
         }
    }//GEN-LAST:event_tx_contact_numberKeyPressed

    private void tx_addressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_addressKeyPressed
      if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
           jCheckBox_issame.grabFocus(); 
        } else {
            txValidateKeyEvent(evt,  tx_address, "NA", 160);
        }
    }//GEN-LAST:event_tx_addressKeyPressed

    private void jCheckBox_issameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCheckBox_issameKeyPressed
      if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
          int x = JOptionPane.showConfirmDialog(this, "Do you want to SELECT THIS ?", "SELECT", JOptionPane.YES_NO_OPTION);
     
        if (JOptionPane.YES_OPTION == x) {
            jCheckBox_issame.setSelected(true);
            jcheckBoxMouseClick();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            jCheckBox_issame.setSelected(false);
            tx_deliver_to.grabFocus();
        }
      }
    }//GEN-LAST:event_jCheckBox_issameKeyPressed

    private void tx_deliver_toKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_deliver_toKeyPressed
      if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt,  tx_deliver_to, tx_contact_d);
        } else {
            txValidateKeyEvent(evt,  tx_deliver_to, "NA", 55);
        }
    }//GEN-LAST:event_tx_deliver_toKeyPressed

    private void tx_contact_dKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_contact_dKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt,  tx_contact_d, tx_address_d);
        } else {
            txValidateKeyEvent(evt,  tx_contact_d, "N", 13);
        }
    }//GEN-LAST:event_tx_contact_dKeyPressed

    private void tx_address_dKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_address_dKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt,  tx_address_d, jComboBox_conform_status);
        } else {
            txValidateKeyEvent(evt,  tx_address_d, "NA", 160);
        }
    }//GEN-LAST:event_tx_address_dKeyPressed

    private void jComboBox_conform_statusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_conform_statusKeyPressed
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt,  jComboBox_conform_status, jComboBox_note);
        }
    }//GEN-LAST:event_jComboBox_conform_statusKeyPressed

    private void jComboBox_noteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_noteKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            u.grabFocusMethod(evt,  jComboBox_note, cal_rx_la_enter);
        }
    }//GEN-LAST:event_jComboBox_noteKeyPressed

    private void cal_rx_la_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_updateMouseClicked
         u.imageMethod("/img/update2.png", cal_rx_la_update );
        if (idsearch == 0) {
            JOptionPane.showMessageDialog(this, "Please Select the RX", "Not Selected", JOptionPane.OK_OPTION);
        } else {
            updateRX_idrx();
        }
    }//GEN-LAST:event_cal_rx_la_updateMouseClicked

    private void cal_rx_la_deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_deleteMouseClicked
        u.imageMethod("/img/delete2.png", cal_rx_la_delete );
        if (idsearch == 0) {
            JOptionPane.showMessageDialog(this, "Please Select the  RX", "Not Selected", JOptionPane.OK_OPTION);
        } else {
            deleteRX_idrx();
        }
    }//GEN-LAST:event_cal_rx_la_deleteMouseClicked

    private void cal_rx_la_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_searchMouseClicked
        u.imageMethod("/img/search2.png", cal_rx_la_search );
        if (idsearch != 0) {
            selectRX_idrx();
        } else {
      JOptionPane.showMessageDialog(null, "Error Not Selected The Other Product  !!! \n searchEMP() \n" , "Error Massage", JOptionPane.ERROR_MESSAGE);
        tx_rx_id.grabFocus();
        }
    }//GEN-LAST:event_cal_rx_la_searchMouseClicked

    private void jTable_callerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_callerMouseClicked
       DefaultTableModel defTabMod = (DefaultTableModel) jTable_caller.getModel();
       cal_rx_la_new.setVisible(true);
       cal_rx_la_enter.setVisible(false);
        idsearch = Integer.parseInt(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 0).toString());
        tx_rx_id.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 0).toString());
        tx_doctor_id.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 1).toString());
        jComboBox_payment_type.setSelectedItem(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 2).toString());
        jComboBox_conform_status.setSelectedItem(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 3).toString());
        jComboBox_note.setSelectedItem(defTabMod.getValueAt(jTable_caller.getSelectedRow(),4).toString());
        tx_bill_to.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 5).toString());
        tx_contact_number.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 6).toString());
        tx_address.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 7).toString());
        tx_deliver_to.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 8).toString());
        tx_contact_d.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 9).toString());
        tx_address_d.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 10).toString());
    }//GEN-LAST:event_jTable_callerMouseClicked

    private void jTable_callerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable_callerKeyPressed
       DefaultTableModel defTabMod = (DefaultTableModel) jTable_caller.getModel();
        idsearch = Integer.parseInt(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 0).toString());
        tx_rx_id.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 0).toString());
        tx_doctor_id.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 1).toString());
        jComboBox_payment_type.setSelectedItem(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 2).toString());
        jComboBox_conform_status.setSelectedItem(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 3).toString());
        jComboBox_note.setSelectedItem(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 4).toString());
        tx_bill_to.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 5).toString());
        tx_contact_number.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 6).toString());
        tx_address.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 7).toString());
        tx_deliver_to.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 8).toString());
        tx_contact_d.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 9).toString());
        tx_address_d.setText(defTabMod.getValueAt(jTable_caller.getSelectedRow(), 10).toString());
    }//GEN-LAST:event_jTable_callerKeyPressed

    private void cal_rx_la_newMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cal_rx_la_newMouseClicked
        u.imageMethod("/img/clrearB2.png", cal_rx_la_new);
        cal_rx_la_enter.setVisible(true);
        cal_rx_la_new.setVisible(false);
        cleareFields();
    }//GEN-LAST:event_cal_rx_la_newMouseClicked

    private void la_set_itemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_set_itemMouseClicked
        rxC.getCallPopup(this,idsearch_T1).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_la_set_itemMouseClicked

    private void la_set_itemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_set_itemMouseEntered
        u.imageMethod("/img/ri2.png", la_set_item);
    }//GEN-LAST:event_la_set_itemMouseEntered

    private void la_set_itemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_set_itemMouseExited
        u.imageMethod("/img/ri1.png", la_set_item);
    }//GEN-LAST:event_la_set_itemMouseExited

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
      refresh();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       DefaultTableModel defTabMod = (DefaultTableModel) jTable1.getModel();
        idsearch_T1 = Integer.parseInt(defTabMod.getValueAt(jTable1.getSelectedRow(), 0).toString());
        tx_rx_id.setText(""+idsearch_T1);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
        u.imageMethod("/img/rf2.png", jLabel2);
    }//GEN-LAST:event_jLabel2MouseEntered

    private void jLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseExited
      u.imageMethod("/img/rf.png", jLabel2);
    }//GEN-LAST:event_jLabel2MouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(caller_rx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(caller_rx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(caller_rx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(caller_rx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new caller_rx().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel agent_la_date;
    private javax.swing.JLabel agent_la_home_img;
    private javax.swing.JLabel agent_la_time;
    private javax.swing.JLabel background;
    private javax.swing.JLabel cal_rx_la_delete;
    private javax.swing.JLabel cal_rx_la_enter;
    private javax.swing.JLabel cal_rx_la_new;
    private javax.swing.JLabel cal_rx_la_search;
    private javax.swing.JLabel cal_rx_la_update;
    private javax.swing.JLabel doctor_la_login_use_name;
    private javax.swing.JLabel home_la_uesr_image;
    private javax.swing.JCheckBox jCheckBox_issame;
    private javax.swing.JComboBox jComboBox_conform_status;
    private javax.swing.JComboBox jComboBox_note;
    private javax.swing.JComboBox jComboBox_payment_type;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable_caller;
    private javax.swing.JLabel la_set_item;
    private javax.swing.JLabel login_la_cloce;
    private javax.swing.JLabel login_la_mini;
    private javax.swing.JTextField tx_address;
    private javax.swing.JTextField tx_address_d;
    private javax.swing.JTextField tx_bill_to;
    private javax.swing.JTextField tx_contact_d;
    private javax.swing.JTextField tx_contact_number;
    private javax.swing.JTextField tx_deliver_to;
    private javax.swing.JTextField tx_doctor_id;
    private javax.swing.JTextField tx_rx_id;
    // End of variables declaration//GEN-END:variables



//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> SystemClose()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> System cloce <<<<<<<<<<<   
    void SystemClose() {
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close the System ?", "Exit System", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            // setDefaultCloseOperation(EXIT_ON_CLOSE);
             u.insertUserClose(tx_rx_id,agent_la_date.getText(), agent_la_time.getText());
            System.exit(0);
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            login_la_cloce.setBackground(new Color(153, 204, 255));
        }
    }
    //>>>>>>>>> System cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> Singltan class 
     * *** >>> Why ------------->>> ek object ekk hdnn
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> Get Instance <<<<<<<<<<<  
    private static final caller_rx call = new caller_rx();
    public static caller_rx getCallPopup() {
        return call;
    }
//>>>>>>>>> Get Instance <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    

  //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> addJTable <<<<<<<<<<<      
    private void addJTable() {
       try {
        int _payment_type = jComboBox_payment_type.getSelectedIndex();
            if (_payment_type == 0) {
                _payment_type = 0;  //COD
            }else {
                _payment_type = 1;  //Payed
            }
        int _note = jComboBox_note.getSelectedIndex();
            if (_note == 0) {
                _note = 0;  //COD-OK
            } else if (_note == 1) {
                _note = 1;  //Payed-OK
            }else if (_note == 2) {
                _note = 2;  //Payed-NO
            }  else {
                _note = 3;  //Close
            }
        int _conform_status = jComboBox_conform_status.getSelectedIndex();
            if (_conform_status == 0) {
                _conform_status = 0;     //conform
            } else if (_conform_status == 1) {
                _conform_status = 1;     //panding
            } else {
                _conform_status = 2;     //close 
            }    
            
        DBClass.putData("insert into rx(idrx,iddoctor,date,payment_type,billto,bnumber,baddress,deliverto,dnumber,daddress,note,conform) values("
                    + "'" + Integer.parseInt(tx_rx_id.getText()) + "' ,'" + Integer.parseInt(tx_doctor_id.getText()) + "' , '" + agent_la_date.getText() + "' , '" + _payment_type 
                    + "','" + tx_bill_to.getText()+ "','" + tx_contact_number.getText()+"','"+tx_address.getText()
                    + "','" + tx_deliver_to.getText()+ "','" + tx_contact_d.getText()+"','"+tx_address_d.getText()
                    + "','" + _note + "','" + _conform_status + "' )");
            JOptionPane.showConfirmDialog(null, "Invoice Added !!! \n", "Successfully", JOptionPane.OK_OPTION);
        cleareFields();
            selectAllItem_RX();
        } catch (Exception ex) {
            systemLogger.initLogger(caller_rx.class).error("addToTable Frame",ex);
            JOptionPane.showMessageDialog(null, "Error RXTableInsert !!! \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
//>>>>>>>>> addJTable <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> cleareFields <<<<<<<<<<<      
    private void cleareFields() {
        tx_rx_id.setText(null);
        tx_doctor_id.setText(null);
        tx_bill_to.setText(null);
        tx_address.setText(null);
        tx_contact_number.setText(null);
        tx_deliver_to.setText(null);
        tx_address_d.setText(null);
        tx_contact_d.setText(null);
        jComboBox_conform_status.setSelectedIndex(0);
        jComboBox_note.setSelectedIndex(0);
        jComboBox_payment_type.setSelectedIndex(0);
        idsearch = 0;
        idsearch_T1=0;
        selectAllItem_RX();
        cal_rx_la_enter.setVisible(true);
    }
//>>>>>>>>> cleareFields <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 


//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> txValidateKeyEvent()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<      
    private void txValidateKeyEvent(KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld) {

        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenthNeedFeld) {
            
            if (txType.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("A")) {

                if ((iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 32) | (iNumber == 46)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }
    }
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> 
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> jcheckBoxMouseClick  <<<<<<<<<<<    
    private void jcheckBoxMouseClick() {
        
        if (jCheckBox_issame.isSelected()) {
            if (!tx_bill_to.getText().trim().equals("") & !tx_contact_number.getText().trim().equals("") & !tx_address.getText().trim().equals("") ){
                int x = JOptionPane.showConfirmDialog(this, "Do you want to 'Add SAME DETAILS' ", "ADD SAME !!!", JOptionPane.YES_NO_OPTION);
                if (JOptionPane.YES_OPTION == x) {
                    tx_deliver_to.setText(tx_bill_to.getText());
                    tx_contact_d.setText(tx_contact_number.getText());
                    tx_address_d.setText(tx_address.getText());
                    jComboBox_conform_status.grabFocus();
                    jComboBox_conform_status.showPopup();
                } else if (JOptionPane.NO_OPTION == x) {
                    tx_deliver_to.grabFocus();
                 }

            } else if(tx_bill_to.getText().trim().equals("")){
                tx_bill_to.grabFocus();
            }else if(tx_contact_number.getText().trim().equals("")){
                tx_contact_number.grabFocus();
            }else if(tx_address.getText().trim().equals("")){
                tx_address.grabFocus();
            }
        } else {
            if (!tx_bill_to.getText().trim().equals("")) {
                int x = JOptionPane.showConfirmDialog(this, "Do you want to 'Remove Deliver Details' ", "Remove ", JOptionPane.YES_NO_OPTION);
                if (JOptionPane.YES_OPTION == x) {
                    tx_deliver_to.setText("");
                    tx_contact_d.setText("");
                    tx_address_d.setText("");
                    tx_deliver_to.grabFocus();
                } else if (JOptionPane.NO_OPTION == x) {
                    tx_deliver_to.grabFocus();
                }

            }
        }
    }
    //>>>>>>>>> jcheckBoxMouseClick cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
  //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> emterMouseClickMethod <<<<<<<<<<< 
    private void emterMouseClickMethod() {
        //tx_doctor_id
        if (tx_rx_id.getText().trim().isEmpty()) {
            tx_rx_id.grabFocus();
        }else if (tx_doctor_id.getText().trim().isEmpty()) {
            tx_doctor_id.grabFocus();
        } else if (tx_bill_to.getText().trim().isEmpty()) {
            tx_bill_to.grabFocus();
        } else if (tx_address.getText().trim().isEmpty()) {
            tx_address.grabFocus();
        } else if (tx_contact_number.getText().trim().isEmpty()) {
            tx_contact_number.grabFocus();
        } else if (tx_deliver_to.getText().trim().isEmpty()) {
            tx_deliver_to.grabFocus();
        } else if (tx_address_d.getText().trim().isEmpty()) {
            tx_address_d.grabFocus();
        } else if (tx_contact_d.getText().trim().isEmpty()) {
            tx_contact_d.grabFocus();
        }else if (!(tx_rx_id.getText().trim().isEmpty() & tx_doctor_id.getText().trim().isEmpty() &tx_bill_to.getText().trim().isEmpty() & tx_address.getText().trim().isEmpty() 
                & tx_contact_number.getText().trim().isEmpty() & tx_deliver_to.getText().trim().isEmpty() & tx_address_d.getText().trim().isEmpty()
                & tx_contact_d.getText().trim().isEmpty())) {
            addJTable();
        }
    }
    //>>>>>>>>> emterMouseClickMethod <<<<<<<<<<<         
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> updateRX_idrx <<<<<<<<<<<     
    private void updateRX_idrx() {
        try {
           int _payment_type = jComboBox_payment_type.getSelectedIndex();
            if (_payment_type == 0) {
                _payment_type = 0;  //COD
            }else {
                _payment_type = 1;  //Payed
            }
        int _note = jComboBox_note.getSelectedIndex();
            if (_note == 0) {
                _note = 0;  //COD-OK
            } else if (_note == 1) {
                _note = 1;  //Payed-OK
            }else if (_note == 2) {
                _note = 2;  //Payed-NO
            }  else {
                _note = 3;  //Close
            }
        int _conform_status = jComboBox_conform_status.getSelectedIndex();
            if (_conform_status == 0) {
                _conform_status = 0;     //conform
            } else if (_conform_status == 1) {
                _conform_status = 1;     //panding
            } else {
                _conform_status = 2;     //close 
            }    
            
        DBClass.putData("update rx set iddoctor='"+Integer.parseInt(tx_doctor_id.getText())+"' payment_type='" + _payment_type + "',billto='" + tx_bill_to.getText() + "',bnumber='" + tx_contact_number.getText()
                    + "',baddress='" + tx_address.getText() + "',deliverto ='" + tx_deliver_to.getText() + "',dnumber ='" + tx_contact_d.getText()
                    + "',daddress ='" + tx_address_d.getText() +  "',note ='" + _note + "',conform='"+_conform_status+"' where  idrx  ='" + idsearch + "' ");
            JOptionPane.showMessageDialog(this, "Update Successful", "Updated", JOptionPane.OK_OPTION);
            cleareFields();
            selectAllItem_RX();
        } catch (Exception e) {
            systemLogger.initLogger(caller_rx.class).error("updateRX_idrx Frame",e);
JOptionPane.showMessageDialog(null, "Error RXTableUpdate !!! \n updateRX_idrx() \n", "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> updateRX_idrx <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> deleteRX_idrx <<<<<<<<<<<     
    private void deleteRX_idrx() {
        try {
            int bb = 2;

            int x = JOptionPane.showConfirmDialog(this, "Do you sure Delete RX From Caller?", "Delete Verify", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == x) {
                DBClass.putData("update rx  set conform ='" + bb + "' where  idrx  ='" + idsearch + "' ");
                cleareFields();
                selectAllItem_RX();
            } else if (JOptionPane.NO_OPTION == x) {
                setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            }
        } catch (Exception e) {
              systemLogger.initLogger(caller_rx.class).error("deleteRX_idrx Frame",e);
JOptionPane.showMessageDialog(null, "Error RXTableDelete !!! /n deleteRX_idrx() /n" , "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> deleteRX_idrx <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> selectRX_idrx <<<<<<<<<<<      
    private void selectRX_idrx() {
        try {
             DefaultTableModel defTabMod = (DefaultTableModel) jTable_caller.getModel();
             defTabMod.getDataVector().removeAllElements();
          //  ResultSet rs = DBClass.getData("select * from supplier where idsupplier  ='" + tx_doctor_id.getText() + "' order by iddoctor");
            DBClass.getData("select * from rx where idrx like '" + tx_rx_id.getText() + "%' order by idrx");
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                     Vector v = new Vector();
                    v.add(DBClass.r.getString("idrx"));
                    v.add(DBClass.r.getString("iddoctor"));
                    if (DBClass.r.getInt("payment_type") == 1) {
                        v.add("Payed");
                    } else {
                        v.add("COD");
                    }
                    v.add(DBClass.r.getString("billto"));
                    v.add(DBClass.r.getString("bnumber"));
                    v.add(DBClass.r.getString("baddress"));
                    v.add(DBClass.r.getString("buyprice"));
                    v.add(DBClass.r.getString("deliverto"));
                    v.add(DBClass.r.getString("dnumber"));
                    v.add(DBClass.r.getString("daddress"));
                    if (DBClass.r.getInt("note") == 1) {
                        v.add("COD--OK");
                    }else if (DBClass.r.getInt("note") == 2) {
                        v.add("Payed--OK");
                    }else if (DBClass.r.getInt("note") == 3) {
                        v.add("Payed--NO");
                    } else {
                        v.add("Close");
                    }
                    if (DBClass.r.getInt("conform") == 1) {
                        v.add("Pending");
                        defTabMod.addRow(v);
                    }else if (DBClass.r.getInt("conform") == 2) {
                        v.add("Close");
                        defTabMod.addRow(v); 
                    }else{
                        v.add("Conform");
                        defTabMod.addRow(v); 
                    }
                    cal_rx_la_enter.setVisible(false);
                    cal_rx_la_new.setVisible(true);
                }
            }
            
        } catch (Exception ex) {
             systemLogger.initLogger(caller_rx.class).error("selectRX_idrx Frame",ex);
 JOptionPane.showMessageDialog(null, "Error Search idrx Tabl !!! /n selectRX_idrx() /n" , "Error Massage", JOptionPane.ERROR_MESSAGE);
     }
    }
    //>>>>>>>>> selectRX_idrx <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> selectAllItem_RX <<<<<<<<<<<      
    private void selectAllItem_RX() {
        try {
             DefaultTableModel defTabMod = (DefaultTableModel) jTable_caller.getModel();
             defTabMod.getDataVector().removeAllElements();
          //  ResultSet rs = DBClass.getData("select * from supplier where idsupplier  ='" + tx_doctor_id.getText() + "' order by iddoctor");
          DBClass.getData("select * from rx where conform='1' order by idrx");
          
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {       
                     Vector v = new Vector();
                    v.add(DBClass.r.getString("idrx"));
                    v.add(DBClass.r.getString("iddoctor"));
                    if (DBClass.r.getInt("payment_type") == 1) {
                        v.add("Payed");
                    } else {
                        v.add("COD");
                    }
                    if (DBClass.r.getInt("conform") == 1) {
                        v.add("Pending");
                    }
                     if (DBClass.r.getInt("note") == 1) {
                        v.add("COD--OK");
                    }else if (DBClass.r.getInt("note") == 2) {
                        v.add("Payed--OK");
                    }else if (DBClass.r.getInt("note") == 3) {
                        v.add("Payed--NO");
                    } else {
                        v.add("Close");
                    }
                    v.add(DBClass.r.getString("billto"));
                    v.add(DBClass.r.getString("bnumber"));
                    v.add(DBClass.r.getString("baddress"));
                //    v.add(DBClass.r.getString("buyprice"));
                    v.add(DBClass.r.getString("deliverto"));
                    v.add(DBClass.r.getString("dnumber"));
                    v.add(DBClass.r.getString("daddress"));
                   
                     defTabMod.addRow(v); 
                    cal_rx_la_enter.setVisible(false);
                    cal_rx_la_new.setVisible(true);
                }
            }
            
        } catch (Exception ex) {
            systemLogger.initLogger(caller_rx.class).error("selectAllItem_RX Frame",ex);
 JOptionPane.showMessageDialog(null, "Error SelectselectAllItem_RX !!! /n selectAllItem_RX() /n", "Error Massage", JOptionPane.ERROR_MESSAGE);
     }
    }
    //>>>>>>>>> selectAllItem_RX <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> refresh <<<<<<<<<<<      
    private void refresh() {
        try {
            DefaultTableModel defTabMod = (DefaultTableModel) jTable1.getModel();
            defTabMod.getDataVector().removeAllElements();
            DBClass.getData("select rx_idrx from cnote where statusu='1' order by rx_idrx");

            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    Vector v = new Vector();
                    v.add(DBClass.r.getString("rx_idrx"));
                    defTabMod.addRow(v);
                }
            }
            tx_rx_id.grabFocus();
        } catch (Exception ex) {
            systemLogger.initLogger(invoice.class).error("refresh() Error", ex);
            JOptionPane.showMessageDialog(null, "Error refresh !!! \n ", "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }
    //>>>>>>>>> refresh <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\   
  
}


