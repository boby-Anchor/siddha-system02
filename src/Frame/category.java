/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHETHANA
 */
public class category extends javax.swing.JFrame {

    UniversalMethod u = new UniversalMethod();
    public static int idsearch = 0;
    public static int statussearch = 0;
    private static item i;

    public category() {
        initComponents();
        imageFirst();
        systemLogger.initLogger(category.class).info("Open Category Frame");
        tx_catogery_name.grabFocus();
        category_la_enter.setVisible(true);
        category_la_new.setVisible(false);
        selectAllitemcatogery();
          UniversalMethod.TimeMethod(agent_la_date, agent_la_time);
        doctor_la_login_use_name.setText(UniversalMethod.getLogUser());
        agent_la_home_img.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agent_la_date = new javax.swing.JLabel();
        agent_la_time = new javax.swing.JLabel();
        home_la_uesr_image = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        doctor_la_login_use_name = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        agent_la_home_img = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        login_la_cloce = new javax.swing.JLabel();
        login_la_mini = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        category_la_subcategory = new javax.swing.JLabel();
        category_la_enter = new javax.swing.JLabel();
        category_la_new = new javax.swing.JLabel();
        category_la_delete = new javax.swing.JLabel();
        category_la_update = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tx_catogery_name = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        category_jTable = new javax.swing.JTable();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1380, 768));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1380, 768));
        getContentPane().setLayout(null);

        agent_la_date.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_date.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_date.setText("Invoice");
        agent_la_date.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_date);
        agent_la_date.setBounds(10, 5, 130, 35);

        agent_la_time.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        agent_la_time.setForeground(new java.awt.Color(255, 255, 255));
        agent_la_time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agent_la_time.setText("Invoice");
        agent_la_time.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(agent_la_time);
        agent_la_time.setBounds(150, 5, 130, 35);

        home_la_uesr_image.setText("userlogo");
        getContentPane().add(home_la_uesr_image);
        home_la_uesr_image.setBounds(290, 10, 30, 30);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(140, 5, 20, 30);

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(280, 5, 20, 30);

        doctor_la_login_use_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        doctor_la_login_use_name.setForeground(new java.awt.Color(255, 255, 255));
        doctor_la_login_use_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        doctor_la_login_use_name.setText("Invoice");
        getContentPane().add(doctor_la_login_use_name);
        doctor_la_login_use_name.setBounds(330, 5, 260, 35);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(580, 5, 20, 30);

        agent_la_home_img.setText("jLabel1");
        agent_la_home_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                agent_la_home_imgMouseExited(evt);
            }
        });
        getContentPane().add(agent_la_home_img);
        agent_la_home_img.setBounds(600, 5, 80, 30);

        jLabel1.setBackground(new java.awt.Color(51, 204, 255));
        jLabel1.setFont(new java.awt.Font("Eras Bold ITC", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CATEGORY");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(760, 1, 330, 40);

        login_la_cloce.setBackground(new java.awt.Color(255, 255, 255));
        login_la_cloce.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_cloce.setForeground(new java.awt.Color(0, 0, 0));
        login_la_cloce.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_cloce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_cloceMouseExited(evt);
            }
        });
        getContentPane().add(login_la_cloce);
        login_la_cloce.setBounds(1330, 10, 30, 30);

        login_la_mini.setBackground(new java.awt.Color(255, 255, 255));
        login_la_mini.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        login_la_mini.setForeground(new java.awt.Color(0, 0, 0));
        login_la_mini.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        login_la_mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_la_miniMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_la_miniMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                login_la_miniMouseExited(evt);
            }
        });
        getContentPane().add(login_la_mini);
        login_la_mini.setBounds(1295, 10, 30, 30);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 43, 1370, 2);

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator5);
        jSeparator5.setBounds(0, 320, 1370, 10);

        category_la_subcategory.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        category_la_subcategory.setForeground(new java.awt.Color(0, 0, 0));
        category_la_subcategory.setText("SubCatogery");
        category_la_subcategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                category_la_subcategoryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                category_la_subcategoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                category_la_subcategoryMouseExited(evt);
            }
        });
        getContentPane().add(category_la_subcategory);
        category_la_subcategory.setBounds(1160, 330, 140, 50);

        category_la_enter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        category_la_enter.setForeground(new java.awt.Color(0, 0, 0));
        category_la_enter.setText("Enter");
        category_la_enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                category_la_enterMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                category_la_enterMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                category_la_enterMouseExited(evt);
            }
        });
        getContentPane().add(category_la_enter);
        category_la_enter.setBounds(560, 330, 120, 40);

        category_la_new.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        category_la_new.setForeground(new java.awt.Color(0, 0, 0));
        category_la_new.setText("New");
        category_la_new.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                category_la_newMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                category_la_newMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                category_la_newMouseExited(evt);
            }
        });
        getContentPane().add(category_la_new);
        category_la_new.setBounds(690, 330, 120, 40);

        category_la_delete.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        category_la_delete.setForeground(new java.awt.Color(0, 0, 0));
        category_la_delete.setText("Delete");
        category_la_delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                category_la_deleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                category_la_deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                category_la_deleteMouseExited(evt);
            }
        });
        getContentPane().add(category_la_delete);
        category_la_delete.setBounds(390, 330, 120, 40);

        category_la_update.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        category_la_update.setForeground(new java.awt.Color(0, 0, 0));
        category_la_update.setText("Update");
        category_la_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                category_la_updateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                category_la_updateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                category_la_updateMouseExited(evt);
            }
        });
        getContentPane().add(category_la_update);
        category_la_update.setBounds(220, 330, 120, 40);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Category Name");
        jLabel4.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel4);
        jLabel4.setBounds(350, 140, 160, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(":");
        jLabel5.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel5);
        jLabel5.setBounds(540, 140, 30, 30);

        tx_catogery_name.setBackground(new java.awt.Color(255, 255, 255));
        tx_catogery_name.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tx_catogery_name.setForeground(new java.awt.Color(0, 0, 0));
        tx_catogery_name.setText(" ");
        tx_catogery_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_catogery_nameKeyPressed(evt);
            }
        });
        getContentPane().add(tx_catogery_name);
        tx_catogery_name.setBounds(560, 140, 390, 33);

        category_jTable.setBackground(new java.awt.Color(255, 255, 255));
        category_jTable.setForeground(new java.awt.Color(0, 0, 0));
        category_jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Category", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        category_jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                category_jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(category_jTable);
        if (category_jTable.getColumnModel().getColumnCount() > 0) {
            category_jTable.getColumnModel().getColumn(0).setMinWidth(70);
            category_jTable.getColumnModel().getColumn(0).setPreferredWidth(70);
            category_jTable.getColumnModel().getColumn(0).setMaxWidth(70);
            category_jTable.getColumnModel().getColumn(2).setMinWidth(90);
            category_jTable.getColumnModel().getColumn(2).setPreferredWidth(90);
            category_jTable.getColumnModel().getColumn(2).setMaxWidth(90);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(460, 390, 460, 350);

        background.setBackground(new java.awt.Color(234, 232, 232));
        background.setForeground(new java.awt.Color(255, 255, 255));
        background.setText("jLabel1");
        getContentPane().add(background);
        background.setBounds(0, 0, 1390, 770);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agent_la_home_imgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseExited
        u.imageMethod("/img/homeB1.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseExited

    private void agent_la_home_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you sure Go to The Home ?", "Change Interface", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            home.getCallPopup().setVisible(true);
            this.dispose();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        }
    }//GEN-LAST:event_agent_la_home_imgMouseClicked

    private void agent_la_home_imgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agent_la_home_imgMouseEntered
        u.imageMethod("/img/homeB2.png", agent_la_home_img);
    }//GEN-LAST:event_agent_la_home_imgMouseEntered

    private void login_la_cloceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseExited
        //    login_la_cloce.setBackground(Color.white);
        u.imageMethod("/img/exti2.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseExited

    private void login_la_cloceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseClicked
        SystemClose();
    }//GEN-LAST:event_login_la_cloceMouseClicked

    private void login_la_cloceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_cloceMouseEntered
        //    login_la_cloce.setBackground(Color.red);
        u.imageMethod("/img/exti.png", login_la_cloce);
    }//GEN-LAST:event_login_la_cloceMouseEntered

    private void login_la_miniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseExited
        //    login_la_mini.setBackground(Color.white);
        u.imageMethod("/img/mini.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseExited

    private void login_la_miniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_login_la_miniMouseClicked

    private void login_la_miniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_la_miniMouseEntered
        //    login_la_mini.setBackground(Color.gray);
        u.imageMethod("/img/mini2.png", login_la_mini);
    }//GEN-LAST:event_login_la_miniMouseEntered

    private void category_la_subcategoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_subcategoryMouseExited
        u.imageMethod("/img/subcategory.png", category_la_subcategory);
    }//GEN-LAST:event_category_la_subcategoryMouseExited

    private void category_la_subcategoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_subcategoryMouseEntered
        u.imageMethod("/img/subcategory2.png", category_la_subcategory);
    }//GEN-LAST:event_category_la_subcategoryMouseEntered

    private void category_la_enterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_enterMouseExited
        u.imageMethod("/img/enter.png", category_la_enter);
    }//GEN-LAST:event_category_la_enterMouseExited

    private void category_la_enterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_enterMouseEntered
        u.imageMethod("/img/enter2.png", category_la_enter);
    }//GEN-LAST:event_category_la_enterMouseEntered

    private void category_la_deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_deleteMouseExited
        u.imageMethod("/img/delete.png", category_la_delete);
    }//GEN-LAST:event_category_la_deleteMouseExited

    private void category_la_deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_deleteMouseEntered
        u.imageMethod("/img/delete2.png", category_la_delete);
    }//GEN-LAST:event_category_la_deleteMouseEntered

    private void category_la_updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_updateMouseExited
        u.imageMethod("/img/update.png", category_la_update);
    }//GEN-LAST:event_category_la_updateMouseExited

    private void category_la_updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_updateMouseEntered
        u.imageMethod("/img/update2.png", category_la_update);
    }//GEN-LAST:event_category_la_updateMouseEntered

    private void category_la_subcategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_subcategoryMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you want to open Subategory Intreface", "Open Intreface", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            subcategory.getCallPopup(this).setVisible(true);
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_category_la_subcategoryMouseClicked

    private void tx_catogery_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_catogery_nameKeyPressed
        txValidateKeyEvent(evt, tx_catogery_name, "NA", 20);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!tx_catogery_name.getText().trim().isEmpty()) {
                category_la_enter.grabFocus();
            } else {
                tx_catogery_name.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_catogery_nameKeyPressed

    private void category_la_enterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_enterMouseClicked
        if (!(tx_catogery_name.getText().trim().isEmpty())) {
            addJTable();
        } else {
            tx_catogery_name.grabFocus();
        }
    }//GEN-LAST:event_category_la_enterMouseClicked

    private void category_jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_jTableMouseClicked
        DefaultTableModel defTabMod = (DefaultTableModel) category_jTable.getModel();
        idsearch = Integer.parseInt(defTabMod.getValueAt(category_jTable.getSelectedRow(), 0).toString());
        tx_catogery_name.setText(defTabMod.getValueAt(category_jTable.getSelectedRow(), 1).toString());
        //    statussearch = Integer.parseInt();
        if (defTabMod.getValueAt(category_jTable.getSelectedRow(), 2).toString().equals("Active")) {
            statussearch = 1;
        } else {
            statussearch = 0;
        }
        category_la_enter.setVisible(false);
        category_la_new.setVisible(true);
        tx_catogery_name.grabFocus();
    }//GEN-LAST:event_category_jTableMouseClicked

    private void category_la_deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_deleteMouseClicked
        if (idsearch == 0) {
            JOptionPane.showMessageDialog(this, "Please Select the Category Type", "Not Selected", JOptionPane.OK_OPTION);
        } else {
            deleterep();
        }
    }//GEN-LAST:event_category_la_deleteMouseClicked

    private void category_la_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_updateMouseClicked
        if (idsearch == 0) {
            JOptionPane.showMessageDialog(this, "Please Select the Category Type", "Not Selected", JOptionPane.OK_OPTION);
        } else {
            updaterep();
        }
    }//GEN-LAST:event_category_la_updateMouseClicked

    private void category_la_newMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_newMouseClicked
        category_la_enter.setVisible(true);
        category_la_new.setVisible(false);
        cleareFields();
    }//GEN-LAST:event_category_la_newMouseClicked

    private void category_la_newMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_newMouseEntered
        u.imageMethod("/img/newB2.png", category_la_new);
    }//GEN-LAST:event_category_la_newMouseEntered

    private void category_la_newMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_la_newMouseExited
        u.imageMethod("/img/newB.png", category_la_new);
    }//GEN-LAST:event_category_la_newMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new category().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel agent_la_date;
    private javax.swing.JLabel agent_la_home_img;
    private javax.swing.JLabel agent_la_time;
    private javax.swing.JLabel background;
    private javax.swing.JTable category_jTable;
    private javax.swing.JLabel category_la_delete;
    private javax.swing.JLabel category_la_enter;
    private javax.swing.JLabel category_la_new;
    private javax.swing.JLabel category_la_subcategory;
    private javax.swing.JLabel category_la_update;
    private javax.swing.JLabel doctor_la_login_use_name;
    private javax.swing.JLabel home_la_uesr_image;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel login_la_cloce;
    private javax.swing.JLabel login_la_mini;
    private javax.swing.JTextField tx_catogery_name;
    // End of variables declaration//GEN-END:variables

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> SystemClose()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> no
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> System cloce <<<<<<<<<<<   
    void SystemClose() {
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close the System ?", "Exit System", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            i.setVisible(true);
            this.dispose();

        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }
    //>>>>>>>>> System cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> Singltan class 
     * *** >>> Why ------------->>> ek object ekk hdnn
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> Get Instance <<<<<<<<<<<  
    private static final category cat = new category();

    public static category getCallPopup(item ii) {
        i = ii;
        return cat;
    }

    public static category getCallPopup() {
        return cat;
    }
//>>>>>>>>> Get Instance <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
    private void imageFirst() {
        u.imageMethod(background, home_la_uesr_image, doctor_la_login_use_name, agent_la_home_img, login_la_mini, login_la_cloce);
        u.imageMethod("/img/subcategory.png", category_la_subcategory);
        u.imageMethod("/img/update.png", category_la_update);
        u.imageMethod("/img/delete.png", category_la_delete);
        u.imageMethod("/img/enter.png", category_la_enter);
          u.imageMethod("/img/newB.png", category_la_new);
    }
    //>>>>>>>>> imageFirst cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> mon 6 September
     * *** >>> What ------------>>> txValidateKeyEvent()
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>> KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld
     * *** >>> Status ---------->>>
     */
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<      
    private void txValidateKeyEvent(KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld) {

        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenthNeedFeld) {
           
            if (txType.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("A")) {

                if ((iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 32) | (iNumber == 46)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }
    }
    //>>>>>>>>> txValidateKeyEvent cloce <<<<<<<<<<<       

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> 
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> addJTable <<<<<<<<<<<      
    private void addJTable() {
        try {
            DBClass.putData("insert into itemcatogery(name,status) values('" + tx_catogery_name.getText() + "','1') ");
            selectAllitemcatogery();
            cleareFields();
        } catch (Exception ex) {
            systemLogger.initLogger(category.class).error("addJTable() Error",ex);
            JOptionPane.showMessageDialog(null, "Error CatogeryTableInsert !!! \n addToTable() \n" + ex, "Error Massage", JOptionPane.ERROR_MESSAGE);
            tx_catogery_name.grabFocus();
        }
    }
//>>>>>>>>> addJTable <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> cleareFields <<<<<<<<<<<      
    private void cleareFields() {
        tx_catogery_name.setText(null);
        tx_catogery_name.grabFocus();
        idsearch = 0;
        statussearch = 0;
        
    }
//>>>>>>>>> cleareFields <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>>
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> selectAllitemcatogery <<<<<<<<<<<      
    private void selectAllitemcatogery() {
        try {
            DefaultTableModel defTabMod = (DefaultTableModel) category_jTable.getModel();
            defTabMod.getDataVector().removeAllElements();
            ResultSet rs = DBClass.getData("select * from itemcatogery order by iditemcatogery");
            if (DBClass.r.isBeforeFirst() == true) {
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("iditemcatogery"));
                    v.add(rs.getString("name"));
                    if (rs.getInt("status") == 1) {
                        v.add("Active");
                        defTabMod.addRow(v);
                    } else {
                        v.add("Inactive");
                        defTabMod.addRow(v);
                    }

                }
            }
        } catch (Exception e) {
              systemLogger.initLogger(category.class).error("selectAllitemcatogery() Error",e);
     JOptionPane.showMessageDialog(null, "Error Select All Catogery !!! \n selectAllitemcatogery() \n" + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
      tx_catogery_name.grabFocus();
        }

    }
//>>>>>>>>>selectAllitemcatogery <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> deleterep <<<<<<<<<<<     
    private void deleterep() {
        try {
            int bb = 2;

            int x = JOptionPane.showConfirmDialog(this, "Do you sure Delete Category Type ?", "Delete Verify", JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == x) {
                DBClass.putData("update itemcatogery  set status ='" + bb + "' where  iditemcatogery  ='" + idsearch + "' ");
                cleareFields();
                selectAllitemcatogery();
            } else if (JOptionPane.NO_OPTION == x) {
                setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            }
        } catch (Exception e) {
               systemLogger.initLogger(category.class).error("deleterep() Error",e);
JOptionPane.showMessageDialog(null, "Error Delete Catogery !!! \n deleterep() \n" + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
 tx_catogery_name.grabFocus();
        }
    }
    //>>>>>>>>> deleterep <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\    
    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>>  
     * *** >>> Why ------------->>> 
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> updaterep <<<<<<<<<<<     
    private void updaterep() {
        try {
            if (statussearch == 0) {
                statussearch = 1;
            } else if (statussearch == 1) {
                statussearch = 0;
            } else {
                statussearch = 2;
            }
            DBClass.putData("update itemcatogery set name='" + tx_catogery_name.getText() + "',status ='" + statussearch + "' where  iditemcatogery  ='" + idsearch + "' ");
            JOptionPane.showMessageDialog(this, "Update Successful", "Updated", JOptionPane.OK_OPTION);
            cleareFields();
            selectAllitemcatogery();
        } catch (Exception e) {
              systemLogger.initLogger(category.class).error("updaterep() Error",e);
JOptionPane.showMessageDialog(null, "Error Update Catogery !!! \n updaterep() \n" + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
 tx_catogery_name.grabFocus();
        }
    }
    //>>>>>>>>> updaterep <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\  
  
}
